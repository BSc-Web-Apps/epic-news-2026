{"version":3,"file":"profile.change-email-BeTI5i5j.js","sources":["../../../app/routes/settings+/profile.change-email.tsx"],"sourcesContent":["import { getFormProps, getInputProps, useForm } from '@conform-to/react'\nimport { getZodConstraint, parseWithZod } from '@conform-to/zod'\nimport { type SEOHandle } from '@nasa-gcn/remix-seo'\nimport { data, redirect, Form } from 'react-router'\nimport { z } from 'zod'\nimport { ErrorList, Field } from '#app/components/forms.tsx'\nimport { Icon } from '#app/components/ui/icon.tsx'\nimport { StatusButton } from '#app/components/ui/status-button.tsx'\nimport {\n\tprepareVerification,\n\trequireRecentVerification,\n} from '#app/routes/_auth+/verify.server.ts'\nimport { requireUserId } from '#app/utils/auth.server.ts'\nimport { prisma } from '#app/utils/db.server.ts'\nimport { sendEmail } from '#app/utils/email.server.ts'\nimport { useIsPending } from '#app/utils/misc.tsx'\nimport { EmailSchema } from '#app/utils/user-validation.ts'\nimport { verifySessionStorage } from '#app/utils/verification.server.ts'\nimport { type Route } from './+types/profile.change-email.ts'\nimport { EmailChangeEmail } from './profile.change-email.server.tsx'\nimport { type BreadcrumbHandle } from './profile.tsx'\n\nexport const handle: BreadcrumbHandle & SEOHandle = {\n\tbreadcrumb: <Icon name=\"envelope-closed\">Change Email</Icon>,\n\tgetSitemapEntries: () => null,\n}\n\nexport const newEmailAddressSessionKey = 'new-email-address'\n\nconst ChangeEmailSchema = z.object({\n\temail: EmailSchema,\n})\n\nexport async function loader({ request }: Route.LoaderArgs) {\n\tawait requireRecentVerification(request)\n\tconst userId = await requireUserId(request)\n\tconst user = await prisma.user.findUnique({\n\t\twhere: { id: userId },\n\t\tselect: { email: true },\n\t})\n\tif (!user) {\n\t\tconst params = new URLSearchParams({ redirectTo: request.url })\n\t\tthrow redirect(`/login?${params}`)\n\t}\n\treturn { user }\n}\n\nexport async function action({ request }: Route.ActionArgs) {\n\tconst userId = await requireUserId(request)\n\tconst formData = await request.formData()\n\tconst submission = await parseWithZod(formData, {\n\t\tschema: ChangeEmailSchema.superRefine(async (data, ctx) => {\n\t\t\tconst existingUser = await prisma.user.findUnique({\n\t\t\t\twhere: { email: data.email },\n\t\t\t})\n\t\t\tif (existingUser) {\n\t\t\t\tctx.addIssue({\n\t\t\t\t\tpath: ['email'],\n\t\t\t\t\tcode: z.ZodIssueCode.custom,\n\t\t\t\t\tmessage: 'This email is already in use.',\n\t\t\t\t})\n\t\t\t}\n\t\t}),\n\t\tasync: true,\n\t})\n\n\tif (submission.status !== 'success') {\n\t\treturn data(\n\t\t\t{ result: submission.reply() },\n\t\t\t{ status: submission.status === 'error' ? 400 : 200 },\n\t\t)\n\t}\n\tconst { otp, redirectTo, verifyUrl } = await prepareVerification({\n\t\tperiod: 10 * 60,\n\t\trequest,\n\t\ttarget: userId,\n\t\ttype: 'change-email',\n\t})\n\n\tconst response = await sendEmail({\n\t\tto: submission.value.email,\n\t\tsubject: `Epic Notes Email Change Verification`,\n\t\treact: <EmailChangeEmail verifyUrl={verifyUrl.toString()} otp={otp} />,\n\t})\n\n\tif (response.status === 'success') {\n\t\tconst verifySession = await verifySessionStorage.getSession()\n\t\tverifySession.set(newEmailAddressSessionKey, submission.value.email)\n\t\treturn redirect(redirectTo.toString(), {\n\t\t\theaders: {\n\t\t\t\t'set-cookie': await verifySessionStorage.commitSession(verifySession),\n\t\t\t},\n\t\t})\n\t} else {\n\t\treturn data(\n\t\t\t{ result: submission.reply({ formErrors: [response.error.message] }) },\n\t\t\t{ status: 500 },\n\t\t)\n\t}\n}\n\nexport default function ChangeEmailIndex({\n\tloaderData,\n\tactionData,\n}: Route.ComponentProps) {\n\tconst [form, fields] = useForm({\n\t\tid: 'change-email-form',\n\t\tconstraint: getZodConstraint(ChangeEmailSchema),\n\t\tlastResult: actionData?.result,\n\t\tonValidate({ formData }) {\n\t\t\treturn parseWithZod(formData, { schema: ChangeEmailSchema })\n\t\t},\n\t})\n\n\tconst isPending = useIsPending()\n\treturn (\n\t\t<div>\n\t\t\t<h1 className=\"text-h1\">Change Email</h1>\n\t\t\t<p>You will receive an email at the new email address to confirm.</p>\n\t\t\t<p>\n\t\t\t\tAn email notice will also be sent to your old address{' '}\n\t\t\t\t{loaderData.user.email}.\n\t\t\t</p>\n\t\t\t<div className=\"mx-auto mt-5 max-w-sm\">\n\t\t\t\t<Form method=\"POST\" {...getFormProps(form)}>\n\t\t\t\t\t<Field\n\t\t\t\t\t\tlabelProps={{ children: 'New Email' }}\n\t\t\t\t\t\tinputProps={{\n\t\t\t\t\t\t\t...getInputProps(fields.email, { type: 'email' }),\n\t\t\t\t\t\t\tautoComplete: 'email',\n\t\t\t\t\t\t}}\n\t\t\t\t\t\terrors={fields.email.errors}\n\t\t\t\t\t/>\n\t\t\t\t\t<ErrorList id={form.errorId} errors={form.errors} />\n\t\t\t\t\t<div>\n\t\t\t\t\t\t<StatusButton\n\t\t\t\t\t\t\tstatus={isPending ? 'pending' : (form.status ?? 'idle')}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\tSend Confirmation\n\t\t\t\t\t\t</StatusButton>\n\t\t\t\t\t</div>\n\t\t\t\t</Form>\n\t\t\t</div>\n\t\t</div>\n\t)\n}\n"],"names":["handle","breadcrumb","jsx","Icon","name","children","getSitemapEntries","ChangeEmailSchema","z","email","EmailSchema","profile_changeEmail","_UNSAFE_withComponentProps","loaderData","actionData","form","fields","useForm","id","constraint","getZodConstraint","lastResult","result","onValidate","formData","parseWithZod","schema","isPending","useIsPending","className","user","jsxs","Form","method","getFormProps","Field","labelProps","inputProps","getInputProps","type","autoComplete","errors","ErrorList","errorId","StatusButton","status"],"mappings":"unBAsBO,MAAMA,EAAuC,CACnDC,WAAYC,EAAAA,IAACC,EAAA,CAAKC,KAAK,kBAAkBC,SAAA,cAAA,CAAY,EACrDC,kBAAmBA,IAAM,IAC1B,EAIMC,EAAoBC,EAAS,CAClCC,MAAOC,CACR,CAAC,EAsEDC,EAAAC,EAAA,SAAyC,CACxCC,WAAAA,EACAC,WAAAA,CACD,EAAyB,CACxB,KAAM,CAACC,EAAMC,CAAM,EAAIC,EAAQ,CAC9BC,GAAI,oBACJC,WAAYC,EAAiBb,CAAiB,EAC9Cc,WAAYP,GAAYQ,OACxBC,WAAW,CAAEC,SAAAA,CAAS,EAAG,CACxB,OAAOC,EAAaD,EAAU,CAAEE,OAAQnB,CAAkB,CAAC,CAC5D,CACD,CAAC,EAEKoB,EAAYC,EAAA,EAClB,cACE,MAAA,CACAvB,SAAA,CAAAH,EAAAA,IAAC,KAAA,CAAG2B,UAAU,UAAUxB,SAAA,cAAA,CAAY,EACpCH,EAAAA,IAAC,KAAEG,SAAA,gEAAA,CAA8D,SAChE,IAAA,CAAEA,SAAA,CAAA,wDACoD,IACrDQ,EAAWiB,KAAKrB,MAAM,GAAA,CAAA,CACxB,EACAP,EAAAA,IAAC,MAAA,CAAI2B,UAAU,wBACdxB,SAAA0B,EAAAA,KAACC,EAAA,CAAKC,OAAO,OAAQ,GAAGC,EAAanB,CAAI,EACxCV,SAAA,CAAAH,EAAAA,IAACiC,EAAA,CACAC,WAAY,CAAE/B,SAAU,aACxBgC,WAAY,CACX,GAAGC,EAActB,EAAOP,MAAO,CAAE8B,KAAM,OAAQ,CAAC,EAChDC,aAAc,SAEfC,OAAQzB,EAAOP,MAAMgC,MAAA,CACtB,QACCC,EAAA,CAAUxB,GAAIH,EAAK4B,QAASF,OAAQ1B,EAAK0B,MAAA,CAAQ,QACjD,MAAA,CACApC,SAAAH,EAAAA,IAAC0C,EAAA,CACAC,OAAQlB,EAAY,UAAaZ,EAAK8B,QAAU,OAChDxC,SAAA,oBAED,CAAA,CACD,CAAA,EACD,CAAA,CACD,CAAA,CAAA,CACD,CAEF,CAAA"}