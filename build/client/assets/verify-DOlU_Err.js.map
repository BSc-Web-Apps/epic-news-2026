{"version":3,"file":"verify-DOlU_Err.js","sources":["../../../app/routes/_auth+/verify.tsx"],"sourcesContent":["import { getFormProps, getInputProps, useForm } from '@conform-to/react'\nimport { getZodConstraint, parseWithZod } from '@conform-to/zod'\nimport { type SEOHandle } from '@nasa-gcn/remix-seo'\nimport { Form, useSearchParams } from 'react-router'\nimport { HoneypotInputs } from 'remix-utils/honeypot/react'\nimport { z } from 'zod'\nimport { GeneralErrorBoundary } from '#app/components/error-boundary.tsx'\nimport { ErrorList, OTPField } from '#app/components/forms.tsx'\nimport { Spacer } from '#app/components/spacer.tsx'\nimport { StatusButton } from '#app/components/ui/status-button.tsx'\nimport { checkHoneypot } from '#app/utils/honeypot.server.ts'\nimport { useIsPending } from '#app/utils/misc.tsx'\nimport { type Route } from './+types/verify.ts'\nimport { validateRequest } from './verify.server.ts'\n\nexport const handle: SEOHandle = {\n\tgetSitemapEntries: () => null,\n}\n\nexport const codeQueryParam = 'code'\nexport const targetQueryParam = 'target'\nexport const typeQueryParam = 'type'\nexport const redirectToQueryParam = 'redirectTo'\nconst types = ['onboarding', 'reset-password', 'change-email', '2fa'] as const\nconst VerificationTypeSchema = z.enum(types)\nexport type VerificationTypes = z.infer<typeof VerificationTypeSchema>\n\nexport const VerifySchema = z.object({\n\t[codeQueryParam]: z.string().min(6).max(6),\n\t[typeQueryParam]: VerificationTypeSchema,\n\t[targetQueryParam]: z.string(),\n\t[redirectToQueryParam]: z.string().optional(),\n})\n\nexport async function action({ request }: Route.ActionArgs) {\n\tconst formData = await request.formData()\n\tawait checkHoneypot(formData)\n\treturn validateRequest(request, formData)\n}\n\nexport default function VerifyRoute({ actionData }: Route.ComponentProps) {\n\tconst [searchParams] = useSearchParams()\n\tconst isPending = useIsPending()\n\tconst parseWithZoddType = VerificationTypeSchema.safeParse(\n\t\tsearchParams.get(typeQueryParam),\n\t)\n\tconst type = parseWithZoddType.success ? parseWithZoddType.data : null\n\n\tconst checkEmail = (\n\t\t<>\n\t\t\t<h1 className=\"text-h1\">Check your email</h1>\n\t\t\t<p className=\"text-body-md text-muted-foreground mt-3\">\n\t\t\t\tWe've sent you a code to verify your email address.\n\t\t\t</p>\n\t\t</>\n\t)\n\n\tconst headings: Record<VerificationTypes, React.ReactNode> = {\n\t\tonboarding: checkEmail,\n\t\t'reset-password': checkEmail,\n\t\t'change-email': checkEmail,\n\t\t'2fa': (\n\t\t\t<>\n\t\t\t\t<h1 className=\"text-h1\">Check your 2FA app</h1>\n\t\t\t\t<p className=\"text-body-md text-muted-foreground mt-3\">\n\t\t\t\t\tPlease enter your 2FA code to verify your identity.\n\t\t\t\t</p>\n\t\t\t</>\n\t\t),\n\t}\n\n\tconst [form, fields] = useForm({\n\t\tid: 'verify-form',\n\t\tconstraint: getZodConstraint(VerifySchema),\n\t\tlastResult: actionData?.result,\n\t\tonValidate({ formData }) {\n\t\t\treturn parseWithZod(formData, { schema: VerifySchema })\n\t\t},\n\t\tdefaultValue: {\n\t\t\tcode: searchParams.get(codeQueryParam),\n\t\t\ttype: type,\n\t\t\ttarget: searchParams.get(targetQueryParam),\n\t\t\tredirectTo: searchParams.get(redirectToQueryParam),\n\t\t},\n\t})\n\n\treturn (\n\t\t<main className=\"container flex flex-col justify-center pt-20 pb-32\">\n\t\t\t<div className=\"text-center\">\n\t\t\t\t{type ? headings[type] : 'Invalid Verification Type'}\n\t\t\t</div>\n\n\t\t\t<Spacer size=\"xs\" />\n\n\t\t\t<div className=\"mx-auto flex w-72 max-w-full flex-col justify-center gap-1\">\n\t\t\t\t<div>\n\t\t\t\t\t<ErrorList errors={form.errors} id={form.errorId} />\n\t\t\t\t</div>\n\t\t\t\t<div className=\"flex w-full gap-2\">\n\t\t\t\t\t<Form method=\"POST\" {...getFormProps(form)} className=\"flex-1\">\n\t\t\t\t\t\t<HoneypotInputs />\n\t\t\t\t\t\t<div className=\"flex items-center justify-center\">\n\t\t\t\t\t\t\t<OTPField\n\t\t\t\t\t\t\t\tlabelProps={{\n\t\t\t\t\t\t\t\t\thtmlFor: fields[codeQueryParam].id,\n\t\t\t\t\t\t\t\t\tchildren: 'Code',\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\tinputProps={{\n\t\t\t\t\t\t\t\t\t...getInputProps(fields[codeQueryParam], { type: 'text' }),\n\t\t\t\t\t\t\t\t\tautoComplete: 'one-time-code',\n\t\t\t\t\t\t\t\t\tautoFocus: true,\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\terrors={fields[codeQueryParam].errors}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t{...getInputProps(fields[typeQueryParam], { type: 'hidden' })}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t{...getInputProps(fields[targetQueryParam], { type: 'hidden' })}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t{...getInputProps(fields[redirectToQueryParam], {\n\t\t\t\t\t\t\t\ttype: 'hidden',\n\t\t\t\t\t\t\t})}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<StatusButton\n\t\t\t\t\t\t\tclassName=\"w-full\"\n\t\t\t\t\t\t\tstatus={isPending ? 'pending' : (form.status ?? 'idle')}\n\t\t\t\t\t\t\ttype=\"submit\"\n\t\t\t\t\t\t\tdisabled={isPending}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\tSubmit\n\t\t\t\t\t\t</StatusButton>\n\t\t\t\t\t</Form>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</main>\n\t)\n}\n\nexport function ErrorBoundary() {\n\treturn <GeneralErrorBoundary />\n}\n"],"names":["handle","getSitemapEntries","codeQueryParam","targetQueryParam","typeQueryParam","redirectToQueryParam","types","VerificationTypeSchema","z","VerifySchema","min","max","optional","verify","_UNSAFE_withComponentProps","actionData","searchParams","useSearchParams","isPending","useIsPending","parseWithZoddType","safeParse","get","type","success","data","checkEmail","jsxs","Fragment","children","jsx","className","headings","onboarding","form","fields","useForm","id","constraint","getZodConstraint","lastResult","result","onValidate","formData","parseWithZod","schema","defaultValue","code","target","redirectTo","Spacer","size","ErrorList","errors","errorId","Form","method","getFormProps","HoneypotInputs","OTPField","labelProps","htmlFor","inputProps","getInputProps","autoComplete","autoFocus","StatusButton","status","disabled","ErrorBoundary","_UNSAFE_withErrorBoundaryProps","GeneralErrorBoundary"],"mappings":"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"}