{"version":3,"file":"dom--0h4o3Zv.js","sources":["../../../app/components/ui/input.tsx","../../../node_modules/@radix-ui/react-label/dist/index.mjs","../../../app/components/ui/label.tsx","../../../node_modules/@conform-to/dom/dist/util.mjs","../../../node_modules/@conform-to/dom/dist/dom.mjs"],"sourcesContent":["import * as React from 'react'\n\nimport { cn } from '#app/utils/misc.tsx'\n\nconst Input = ({\n\tclassName,\n\ttype,\n\t...props\n}: React.ComponentProps<'input'>) => {\n\treturn (\n\t\t<input\n\t\t\tdata-slot=\"input\"\n\t\t\ttype={type}\n\t\t\tclassName={cn(\n\t\t\t\t'border-input bg-background ring-offset-background placeholder:text-muted-foreground focus-visible:ring-ring aria-[invalid]:border-input-invalid flex h-10 w-full rounded-md border px-3 py-2 text-base file:border-0 file:bg-transparent file:text-base file:font-medium focus-visible:ring-2 focus-visible:ring-offset-2 focus-visible:outline-hidden disabled:cursor-not-allowed disabled:opacity-50 md:text-sm md:file:text-sm',\n\t\t\t\tclassName,\n\t\t\t)}\n\t\t\t{...props}\n\t\t/>\n\t)\n}\n\nexport { Input }\n","\"use client\";\n\n// src/label.tsx\nimport * as React from \"react\";\nimport { Primitive } from \"@radix-ui/react-primitive\";\nimport { jsx } from \"react/jsx-runtime\";\nvar NAME = \"Label\";\nvar Label = React.forwardRef((props, forwardedRef) => {\n  return /* @__PURE__ */ jsx(\n    Primitive.label,\n    {\n      ...props,\n      ref: forwardedRef,\n      onMouseDown: (event) => {\n        const target = event.target;\n        if (target.closest(\"button, input, select, textarea\")) return;\n        props.onMouseDown?.(event);\n        if (!event.defaultPrevented && event.detail > 1) event.preventDefault();\n      }\n    }\n  );\n});\nLabel.displayName = NAME;\nvar Root = Label;\nexport {\n  Label,\n  Root\n};\n//# sourceMappingURL=index.mjs.map\n","import * as LabelPrimitive from '@radix-ui/react-label'\nimport { cva } from 'class-variance-authority'\nimport * as React from 'react'\n\nimport { cn } from '#app/utils/misc.tsx'\n\nconst labelVariants = cva(\n\t'text-sm leading-none font-medium peer-disabled:cursor-not-allowed peer-disabled:opacity-70',\n)\n\nconst Label = ({\n\tclassName,\n\t...props\n}: React.ComponentProps<typeof LabelPrimitive.Root>) => (\n\t<LabelPrimitive.Root\n\t\tdata-slot=\"label\"\n\t\tclassName={cn(labelVariants(), className)}\n\t\t{...props}\n\t/>\n)\n\nexport { Label }\n","function invariant(expectedCondition, message) {\n  if (!expectedCondition) {\n    throw new Error(message);\n  }\n}\nfunction generateId() {\n  return (Date.now() * Math.random()).toString(36);\n}\nfunction clone(data) {\n  return JSON.parse(JSON.stringify(data));\n}\n\nexport { clone, generateId, invariant };\n","import { invariant } from './util.mjs';\n\n/**\n * Element that user can interact with,\n * includes `<input>`, `<select>` and `<textarea>`.\n */\n\n/**\n * Form Control element. It can either be a submit button or a submit input.\n */\n\nfunction isInputElement(element) {\n  return element.tagName === 'INPUT';\n}\nfunction isSelectElement(element) {\n  return element.tagName === 'SELECT';\n}\nfunction isTextAreaElement(element) {\n  return element.tagName === 'TEXTAREA';\n}\n\n/**\n * A type guard to check if the provided element is a field element, which\n * is a form control excluding submit, button and reset type.\n */\nfunction isFieldElement(element) {\n  if (element instanceof Element) {\n    if (isInputElement(element)) {\n      return element.type !== 'submit' && element.type !== 'button' && element.type !== 'reset';\n    }\n    if (isSelectElement(element) || isTextAreaElement(element)) {\n      return true;\n    }\n  }\n  return false;\n}\n\n/**\n * Resolves the action from the submit event\n * with respect to the submitter `formaction` attribute.\n */\nfunction getFormAction(event) {\n  var _ref, _submitter$getAttribu;\n  var form = event.target;\n  var submitter = event.submitter;\n  return (_ref = (_submitter$getAttribu = submitter === null || submitter === void 0 ? void 0 : submitter.getAttribute('formaction')) !== null && _submitter$getAttribu !== void 0 ? _submitter$getAttribu : form.getAttribute('action')) !== null && _ref !== void 0 ? _ref : \"\".concat(location.pathname).concat(location.search);\n}\n\n/**\n * Resolves the encoding type from the submit event\n * with respect to the submitter `formenctype` attribute.\n */\nfunction getFormEncType(event) {\n  var _submitter$getAttribu2;\n  var form = event.target;\n  var submitter = event.submitter;\n  var encType = (_submitter$getAttribu2 = submitter === null || submitter === void 0 ? void 0 : submitter.getAttribute('formenctype')) !== null && _submitter$getAttribu2 !== void 0 ? _submitter$getAttribu2 : form.enctype;\n  if (encType === 'multipart/form-data') {\n    return encType;\n  }\n  return 'application/x-www-form-urlencoded';\n}\n\n/**\n * Resolves the method from the submit event\n * with respect to the submitter `formmethod` attribute.\n */\nfunction getFormMethod(event) {\n  var _ref2, _submitter$getAttribu3;\n  var form = event.target;\n  var submitter = event.submitter;\n  var method = (_ref2 = (_submitter$getAttribu3 = submitter === null || submitter === void 0 ? void 0 : submitter.getAttribute('formmethod')) !== null && _submitter$getAttribu3 !== void 0 ? _submitter$getAttribu3 : form.getAttribute('method')) === null || _ref2 === void 0 ? void 0 : _ref2.toUpperCase();\n  switch (method) {\n    case 'POST':\n    case 'PUT':\n    case 'PATCH':\n    case 'DELETE':\n      return method;\n  }\n  return 'GET';\n}\n\n/**\n * Trigger a form submit event with an optional submitter.\n * If the submitter is not mounted, it will be appended to the form and removed after submission.\n */\nfunction requestSubmit(form, submitter) {\n  invariant(!!form, 'Failed to submit the form. The element provided is null or undefined.');\n  if (typeof form.requestSubmit === 'function') {\n    form.requestSubmit(submitter);\n  } else {\n    var _event = new SubmitEvent('submit', {\n      bubbles: true,\n      cancelable: true,\n      submitter\n    });\n    form.dispatchEvent(_event);\n  }\n}\nfunction createFileList(value) {\n  var dataTransfer = new DataTransfer();\n  if (Array.isArray(value)) {\n    for (var file of value) {\n      dataTransfer.items.add(file);\n    }\n  } else {\n    dataTransfer.items.add(value);\n  }\n  return dataTransfer.files;\n}\nfunction createGlobalFormsObserver() {\n  var inputListeners = new Set();\n  var formListeners = new Set();\n  var cleanup = null;\n  function initialize() {\n    var observer = new MutationObserver(handleMutation);\n    observer.observe(document.body, {\n      subtree: true,\n      childList: true,\n      attributeFilter: ['form', 'name', 'data-conform']\n    });\n    document.addEventListener('input', handleInput);\n    document.addEventListener('reset', handleReset);\n    document.addEventListener('submit', handleSubmit, true);\n    return () => {\n      document.removeEventListener('input', handleInput);\n      document.removeEventListener('reset', handleReset);\n      document.removeEventListener('submit', handleSubmit, true);\n      observer.disconnect();\n    };\n  }\n  function handleInput(event) {\n    var target = event.target;\n    if (isFieldElement(target)) {\n      inputListeners.forEach(callback => callback({\n        type: 'input',\n        target\n      }));\n      var form = target.form;\n      if (form) {\n        formListeners.forEach(callback => callback({\n          type: 'input',\n          target: form\n        }));\n      }\n    }\n  }\n  function handleReset(event) {\n    var form = event.target;\n    if (form instanceof HTMLFormElement) {\n      // Reset event is fired before the form is reset, so we need to wait for the next tick\n      setTimeout(() => {\n        formListeners.forEach(callback => {\n          callback({\n            type: 'reset',\n            target: form\n          });\n        });\n        var _loop = function _loop(target) {\n          if (isFieldElement(target)) {\n            inputListeners.forEach(callback => {\n              callback({\n                type: 'reset',\n                target\n              });\n            });\n          }\n        };\n        for (var target of form.elements) {\n          _loop(target);\n        }\n      });\n    }\n  }\n  function handleSubmit(event) {\n    var target = event.target;\n    var submitter = event.submitter;\n    if (target instanceof HTMLFormElement) {\n      formListeners.forEach(callback => callback({\n        type: 'submit',\n        target,\n        submitter\n      }));\n    }\n  }\n  function handleMutation(mutations) {\n    var seenForms = new Set();\n    var seenInputs = new Set();\n    var collectInputs = node => {\n      if (isFieldElement(node)) {\n        return [node];\n      }\n      return node instanceof Element ? Array.from(node.querySelectorAll('input,select,textarea')) : [];\n    };\n    for (var mutation of mutations) {\n      switch (mutation.type) {\n        case 'childList':\n          {\n            var nodes = [...mutation.addedNodes, ...mutation.removedNodes];\n            for (var node of nodes) {\n              for (var input of collectInputs(node)) {\n                seenInputs.add(input);\n                if (input.form) {\n                  seenForms.add(input.form);\n                }\n              }\n            }\n            break;\n          }\n        case 'attributes':\n          {\n            if (isFieldElement(mutation.target)) {\n              seenInputs.add(mutation.target);\n              if (mutation.target.form) {\n                seenForms.add(mutation.target.form);\n              }\n            }\n            break;\n          }\n      }\n    }\n    var _loop2 = function _loop2(target) {\n      formListeners.forEach(callback => {\n        callback({\n          type: 'mutation',\n          target\n        });\n      });\n    };\n    for (var target of seenForms) {\n      _loop2(target);\n    }\n    var _loop3 = function _loop3(_target) {\n      inputListeners.forEach(callback => {\n        callback({\n          type: 'mutation',\n          target: _target\n        });\n      });\n    };\n    for (var _target of seenInputs) {\n      _loop3(_target);\n    }\n  }\n  return {\n    onFieldUpdate(callback) {\n      var _cleanup;\n      cleanup = (_cleanup = cleanup) !== null && _cleanup !== void 0 ? _cleanup : initialize();\n      inputListeners.add(callback);\n      return () => {\n        inputListeners.delete(callback);\n      };\n    },\n    onFormUpdate(callback) {\n      var _cleanup2;\n      cleanup = (_cleanup2 = cleanup) !== null && _cleanup2 !== void 0 ? _cleanup2 : initialize();\n      formListeners.add(callback);\n      return () => {\n        formListeners.delete(callback);\n      };\n    },\n    dispose() {\n      var _cleanup3;\n      (_cleanup3 = cleanup) === null || _cleanup3 === void 0 || _cleanup3();\n      cleanup = null;\n      inputListeners.clear();\n      formListeners.clear();\n    }\n  };\n}\nfunction change(element, value) {\n  // The value should be set to the element before dispatching the event\n  updateField(element, {\n    value\n  });\n\n  // Dispatch input event with the updated input value\n  element.dispatchEvent(new InputEvent('input', {\n    bubbles: true\n  }));\n  // Dispatch change event (necessary for select to update the selected option)\n  element.dispatchEvent(new Event('change', {\n    bubbles: true\n  }));\n}\nfunction focus(element) {\n  // Only focusin event will be bubbled\n  element.dispatchEvent(new FocusEvent('focusin', {\n    bubbles: true\n  }));\n  element.dispatchEvent(new FocusEvent('focus'));\n}\nfunction blur(element) {\n  // Only focusout event will be bubbled\n  element.dispatchEvent(new FocusEvent('focusout', {\n    bubbles: true\n  }));\n  element.dispatchEvent(new FocusEvent('blur'));\n}\nfunction normalizeFieldValue(value) {\n  if (typeof value === 'undefined') {\n    return [null, null];\n  }\n  if (value === null) {\n    return [[], createFileList([])];\n  }\n  if (typeof value === 'string') {\n    return [[value], null];\n  }\n  if (Array.isArray(value)) {\n    if (value.every(item => typeof item === 'string')) {\n      return [Array.from(value), null];\n    }\n    if (value.every(item => item instanceof File)) {\n      return [null, createFileList(value)];\n    }\n  }\n  if (value instanceof FileList) {\n    return [null, value];\n  }\n  if (value instanceof File) {\n    return [null, createFileList([value])];\n  }\n  return [null, null];\n}\n\n/**\n * Updates the DOM element with the provided value and defaultValue.\n */\nfunction updateField(element, options) {\n  var _value$;\n  var [value, file] = normalizeFieldValue(options.value);\n  var [defaultValue] = normalizeFieldValue(options.defaultValue);\n  if (isInputElement(element)) {\n    switch (element.type) {\n      case 'file':\n        {\n          element.files = file;\n          return;\n        }\n      case 'checkbox':\n      case 'radio':\n        {\n          if (value) {\n            var checked = value.includes(element.value);\n            if (element.type === 'checkbox' ? checked !== element.checked : checked) {\n              // Simulate a click to update the checked state\n              element.click();\n            }\n            element.checked = checked;\n          }\n          if (defaultValue) {\n            element.defaultChecked = defaultValue.includes(element.value);\n          }\n          return;\n        }\n    }\n  } else if (isSelectElement(element)) {\n    var shouldUnselect = value && value.length === 0;\n    for (var option of element.options) {\n      if (value) {\n        var index = value.indexOf(option.value);\n        var selected = index > -1;\n\n        // Update the selected state of the option\n        if (option.selected !== selected) {\n          option.selected = selected;\n        }\n\n        // Remove the option from the value array\n        if (selected) {\n          value.splice(index, 1);\n        }\n      }\n      if (defaultValue) {\n        var _index = defaultValue.indexOf(option.value);\n        var _selected = _index > -1;\n\n        // Update the selected state of the option\n        if (option.defaultSelected !== _selected) {\n          option.defaultSelected = _selected;\n        }\n\n        // Remove the option from the defaultValue array\n        if (_selected) {\n          defaultValue.splice(_index, 1);\n        }\n      }\n    }\n\n    // We have already removed all selected options from the value and defaultValue array at this point\n    var missingOptions = new Set([...(value !== null && value !== void 0 ? value : []), ...(defaultValue !== null && defaultValue !== void 0 ? defaultValue : [])]);\n    for (var optionValue of missingOptions) {\n      element.options.add(new Option(optionValue, optionValue, defaultValue === null || defaultValue === void 0 ? void 0 : defaultValue.includes(optionValue), value === null || value === void 0 ? void 0 : value.includes(optionValue)));\n    }\n\n    // If the select element is not multiple and the value is an empty array, unset the selected index\n    // This is to prevent the select element from showing the first option as selected\n    if (shouldUnselect) {\n      element.selectedIndex = -1;\n    }\n    return;\n  }\n  var inputValue = (_value$ = value === null || value === void 0 ? void 0 : value[0]) !== null && _value$ !== void 0 ? _value$ : '';\n  if (element.value !== inputValue) {\n    /**\n     * Triggering react custom change event\n     * Solution based on dom-testing-library\n     * @see https://github.com/facebook/react/issues/10135#issuecomment-401496776\n     * @see https://github.com/testing-library/dom-testing-library/blob/main/src/events.js#L104-L123\n     */\n    var {\n      set: valueSetter\n    } = Object.getOwnPropertyDescriptor(element, 'value') || {};\n    var prototype = Object.getPrototypeOf(element);\n    var {\n      set: prototypeValueSetter\n    } = Object.getOwnPropertyDescriptor(prototype, 'value') || {};\n    if (prototypeValueSetter && valueSetter !== prototypeValueSetter) {\n      prototypeValueSetter.call(element, inputValue);\n    } else {\n      if (valueSetter) {\n        valueSetter.call(element, inputValue);\n      } else {\n        throw new Error('The given element does not have a value setter');\n      }\n    }\n  }\n  if (defaultValue) {\n    var _defaultValue$;\n    element.defaultValue = (_defaultValue$ = defaultValue[0]) !== null && _defaultValue$ !== void 0 ? _defaultValue$ : '';\n  }\n}\n\nexport { blur, change, createFileList, createGlobalFormsObserver, focus, getFormAction, getFormEncType, getFormMethod, isFieldElement, isInputElement, isSelectElement, isTextAreaElement, normalizeFieldValue, requestSubmit, updateField };\n"],"names":["Input","className","type","props","jsx","cn","NAME","Label","React.forwardRef","forwardedRef","Primitive","event","Root","labelVariants","cva","LabelPrimitive.Root","invariant","expectedCondition","message","generateId","clone","data","isInputElement","element","isSelectElement","isTextAreaElement","isFieldElement","getFormAction","_ref","_submitter$getAttribu","form","submitter","getFormEncType","_submitter$getAttribu2","encType","getFormMethod","_ref2","_submitter$getAttribu3","method","requestSubmit","_event","createFileList","value","dataTransfer","file","normalizeFieldValue","item","updateField","options","_value$","defaultValue","checked","shouldUnselect","option","index","selected","_index","_selected","missingOptions","optionValue","inputValue","valueSetter","prototype","prototypeValueSetter","_defaultValue$"],"mappings":"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","x_google_ignoreList":[1,3,4]}