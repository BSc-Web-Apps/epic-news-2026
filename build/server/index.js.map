{"version":3,"file":"index.js","sources":["../../app/utils/env.server.ts","../../app/utils/nonce-provider.ts","../../app/utils/timing.server.ts","../../app/entry.server.tsx","../../app/assets/favicons/apple-touch-icon.png","../../app/assets/favicons/favicon.svg","../../app/utils/misc.tsx","../../app/components/error-boundary.tsx","../../app/components/ui/icons/sprite.svg","../../app/components/ui/icon.tsx","../../app/components/progress-bar.tsx","../../app/components/ui/input.tsx","../../app/components/ui/label.tsx","../../app/components/ui/button.tsx","../../app/components/ui/tooltip.tsx","../../app/components/ui/status-button.tsx","../../app/components/search-bar.tsx","../../app/components/toaster.tsx","../../app/components/ui/sonner.tsx","../../app/utils/user.ts","../../app/components/ui/dropdown-menu.tsx","../../app/components/user-dropdown.tsx","../../app/utils/request-info.ts","../../app/utils/client-hints.tsx","../../app/utils/theme.server.ts","../../app/routes/resources+/theme-switch.tsx","../../app/styles/tailwind.css?url","../../app/utils/cache.server.ts","../../app/utils/providers/constants.ts","../../app/utils/providers/github.server.ts","../../app/utils/connections.server.ts","../../app/utils/db.server.ts","../../app/utils/session.server.ts","../../app/utils/storage.server.ts","../../app/utils/auth.server.ts","../../app/utils/headers.server.ts","../../app/utils/honeypot.server.ts","../../app/utils/toast.server.ts","../../app/root.tsx","../../app/routes/$.tsx","../../app/components/ui/checkbox.tsx","../../app/components/ui/input-otp.tsx","../../app/components/ui/textarea.tsx","../../app/components/forms.tsx","../../app/components/spacer.tsx","../../app/utils/permissions.server.ts","../../app/routes/admin+/cache.tsx","../../app/routes/admin+/cache_.lru.$cacheKey.ts","../../app/routes/admin+/cache_.sqlite.server.ts","../../app/routes/admin+/cache_.sqlite.$cacheKey.ts","../../app/routes/me.tsx","../../app/routes/resources+/download-user-data.tsx","../../app/routes/resources+/healthcheck.tsx","../../app/routes/resources+/images.tsx","../../app/routes/settings+/profile.tsx","../../app/utils/email.server.ts","../../app/utils/verification.server.ts","../../app/routes/settings+/profile.change-email.server.tsx","../../app/routes/settings+/profile.two-factor.tsx","../../app/routes/_auth+/login.server.ts","../../app/utils/user-validation.ts","../../app/routes/_auth+/onboarding.tsx","../../app/routes/_auth+/onboarding.server.ts","../../app/routes/_auth+/reset-password.tsx","../../app/routes/_auth+/reset-password.server.ts","../../app/routes/_auth+/verify.tsx","../../app/routes/_auth+/verify.server.ts","../../app/routes/settings+/profile.change-email.tsx","../../app/utils/connections.tsx","../../app/routes/settings+/profile.connections.tsx","../../app/routes/settings+/profile.index.tsx","../../app/routes/settings+/profile.passkeys.tsx","../../app/routes/settings+/profile.password.tsx","../../app/routes/settings+/profile.password_.create.tsx","../../app/routes/settings+/profile.photo.tsx","../../app/routes/settings+/profile.two-factor.disable.tsx","../../app/routes/settings+/profile.two-factor.verify.tsx","../../app/routes/settings+/profile.two-factor.index.tsx","../../app/routes/users+/$username.tsx","../../app/routes/users+/$username_+/notes.tsx","../../app/components/floating-toolbar.tsx","../../app/routes/users+/$username_+/notes.$noteId.tsx","../../app/routes/users+/$username_+/__note-editor.tsx","../../app/routes/users+/$username_+/__note-editor.server.tsx","../../app/routes/users+/$username_+/notes.$noteId_.edit.tsx","../../app/routes/users+/$username_+/notes.index.tsx","../../app/routes/users+/$username_+/notes.new.tsx","../../app/routes/users+/index.tsx","../../app/utils/providers/provider.ts","../../app/utils/redirect-cookie.server.ts","../../app/routes/_auth+/onboarding_.$provider.tsx","../../app/routes/_auth+/auth.$provider.callback.ts","../../app/routes/_auth+/auth_.$provider.ts","../../app/routes/_auth+/forgot-password.tsx","../../app/routes/_auth+/login.tsx","../../app/routes/_auth+/logout.tsx","../../app/routes/_auth+/signup.tsx","../../app/routes/_auth+/webauthn+/utils.server.ts","../../app/routes/_auth+/webauthn+/authentication.ts","../../app/routes/_auth+/webauthn+/registration.ts","../../app/routes/_marketing+/about.tsx","../../app/routes/_marketing+/logos/docker.svg","../../app/routes/_marketing+/logos/eslint.svg","../../app/routes/_marketing+/logos/faker.svg","../../app/routes/_marketing+/logos/fly.svg","../../app/routes/_marketing+/logos/github.svg","../../app/routes/_marketing+/logos/msw.svg","../../app/routes/_marketing+/logos/playwright.svg","../../app/routes/_marketing+/logos/prettier.svg","../../app/routes/_marketing+/logos/prisma.svg","../../app/routes/_marketing+/logos/radix.svg","../../app/routes/_marketing+/logos/react-email.svg","../../app/routes/_marketing+/logos/remix.svg","../../app/routes/_marketing+/logos/resend.svg","../../app/routes/_marketing+/logos/sentry.svg","../../app/routes/_marketing+/logos/shadcn-ui.svg","../../app/routes/_marketing+/logos/sqlite.svg","../../app/routes/_marketing+/logos/tailwind.svg","../../app/routes/_marketing+/logos/testing-library.png","../../app/routes/_marketing+/logos/typescript.svg","../../app/routes/_marketing+/logos/vitest.svg","../../app/routes/_marketing+/logos/zod.svg","../../app/routes/_marketing+/logos/logos.ts","../../app/routes/_marketing+/index.tsx","../../app/routes/_marketing+/privacy.tsx","../../app/routes/_marketing+/support.tsx","../../app/routes/_marketing+/tos.tsx","../../app/routes/_seo+/robots[.]txt.ts","../../app/routes/_seo+/sitemap[.]xml.ts"],"sourcesContent":["import { z } from 'zod'\n\nconst schema = z.object({\n\tNODE_ENV: z.enum(['production', 'development', 'test'] as const),\n\tDATABASE_PATH: z.string(),\n\tDATABASE_URL: z.string(),\n\tSESSION_SECRET: z.string(),\n\tINTERNAL_COMMAND_TOKEN: z.string(),\n\tHONEYPOT_SECRET: z.string(),\n\tCACHE_DATABASE_PATH: z.string(),\n\t// If you plan on using Sentry, remove the .optional()\n\tSENTRY_DSN: z.string().optional(),\n\t// If you plan to use Resend, remove the .optional()\n\tRESEND_API_KEY: z.string().optional(),\n\t// If you plan to use GitHub auth, remove the .optional()\n\tGITHUB_CLIENT_ID: z.string().optional(),\n\tGITHUB_CLIENT_SECRET: z.string().optional(),\n\tGITHUB_REDIRECT_URI: z.string().optional(),\n\tGITHUB_TOKEN: z.string().optional(),\n\n\tALLOW_INDEXING: z.enum(['true', 'false']).optional(),\n\n\t// Tigris Object Storage Configuration\n\tAWS_ACCESS_KEY_ID: z.string(),\n\tAWS_SECRET_ACCESS_KEY: z.string(),\n\tAWS_REGION: z.string(),\n\tAWS_ENDPOINT_URL_S3: z.string().url(),\n\tBUCKET_NAME: z.string(),\n})\n\ndeclare global {\n\tnamespace NodeJS {\n\t\tinterface ProcessEnv extends z.infer<typeof schema> {}\n\t}\n}\n\nexport function init() {\n\tconst parsed = schema.safeParse(process.env)\n\n\tif (parsed.success === false) {\n\t\tconsole.error(\n\t\t\t'‚ùå Invalid environment variables:',\n\t\t\tparsed.error.flatten().fieldErrors,\n\t\t)\n\n\t\tthrow new Error('Invalid environment variables')\n\t}\n}\n\n/**\n * This is used in both `entry.server.ts` and `root.tsx` to ensure that\n * the environment variables are set and globally available before the app is\n * started.\n *\n * NOTE: Do *not* add any environment variables in here that you do not wish to\n * be included in the client.\n * @returns all public ENV variables\n */\nexport function getEnv() {\n\treturn {\n\t\tMODE: process.env.NODE_ENV,\n\t\tSENTRY_DSN: process.env.SENTRY_DSN,\n\t\tALLOW_INDEXING: process.env.ALLOW_INDEXING,\n\t}\n}\n\ntype ENV = ReturnType<typeof getEnv>\n\ndeclare global {\n\tvar ENV: ENV\n\tinterface Window {\n\t\tENV: ENV\n\t}\n}\n","import * as React from 'react'\n\nexport const NonceContext = React.createContext<string>('')\nexport const NonceProvider = NonceContext.Provider\nexport const useNonce = () => React.useContext(NonceContext)\n","import { type CreateReporter } from '@epic-web/cachified'\n\nexport type Timings = Record<\n\tstring,\n\tArray<\n\t\t{ desc?: string } & (\n\t\t\t| { time: number; start?: never }\n\t\t\t| { time?: never; start: number }\n\t\t)\n\t>\n>\n\nexport function makeTimings(type: string, desc?: string) {\n\tconst timings: Timings = {\n\t\t[type]: [{ desc, start: performance.now() }],\n\t}\n\tObject.defineProperty(timings, 'toString', {\n\t\tvalue: function () {\n\t\t\treturn getServerTimeHeader(timings)\n\t\t},\n\t\tenumerable: false,\n\t})\n\treturn timings\n}\n\nfunction createTimer(type: string, desc?: string) {\n\tconst start = performance.now()\n\treturn {\n\t\tend(timings: Timings) {\n\t\t\tlet timingType = timings[type]\n\n\t\t\tif (!timingType) {\n\t\t\t\ttimingType = timings[type] = []\n\t\t\t}\n\t\t\ttimingType.push({ desc, time: performance.now() - start })\n\t\t},\n\t}\n}\n\nexport async function time<ReturnType>(\n\tfn: Promise<ReturnType> | (() => ReturnType | Promise<ReturnType>),\n\t{\n\t\ttype,\n\t\tdesc,\n\t\ttimings,\n\t}: {\n\t\ttype: string\n\t\tdesc?: string\n\t\ttimings?: Timings\n\t},\n): Promise<ReturnType> {\n\tconst timer = createTimer(type, desc)\n\tconst promise = typeof fn === 'function' ? fn() : fn\n\tif (!timings) return promise\n\n\tconst result = await promise\n\n\ttimer.end(timings)\n\treturn result\n}\n\nexport function getServerTimeHeader(timings?: Timings) {\n\tif (!timings) return ''\n\treturn Object.entries(timings)\n\t\t.map(([key, timingInfos]) => {\n\t\t\tconst dur = timingInfos\n\t\t\t\t.reduce((acc, timingInfo) => {\n\t\t\t\t\tconst time = timingInfo.time ?? performance.now() - timingInfo.start\n\t\t\t\t\treturn acc + time\n\t\t\t\t}, 0)\n\t\t\t\t.toFixed(1)\n\t\t\tconst desc = timingInfos\n\t\t\t\t.map((t) => t.desc)\n\t\t\t\t.filter(Boolean)\n\t\t\t\t.join(' & ')\n\t\t\treturn [\n\t\t\t\tkey.replaceAll(/(:| |@|=|;|,|\\/|\\\\)/g, '_'),\n\t\t\t\tdesc ? `desc=${JSON.stringify(desc)}` : null,\n\t\t\t\t`dur=${dur}`,\n\t\t\t]\n\t\t\t\t.filter(Boolean)\n\t\t\t\t.join(';')\n\t\t})\n\t\t.join(',')\n}\n\nexport function combineServerTimings(headers1: Headers, headers2: Headers) {\n\tconst newHeaders = new Headers(headers1)\n\tnewHeaders.append('Server-Timing', headers2.get('Server-Timing') ?? '')\n\treturn newHeaders.get('Server-Timing') ?? ''\n}\n\nexport function cachifiedTimingReporter<Value>(\n\ttimings?: Timings,\n): undefined | CreateReporter<Value> {\n\tif (!timings) return\n\n\treturn ({ key }) => {\n\t\tconst cacheRetrievalTimer = createTimer(\n\t\t\t`cache:${key}`,\n\t\t\t`${key} cache retrieval`,\n\t\t)\n\t\tlet getFreshValueTimer: ReturnType<typeof createTimer> | undefined\n\t\treturn (event) => {\n\t\t\tswitch (event.name) {\n\t\t\t\tcase 'getFreshValueStart':\n\t\t\t\t\tgetFreshValueTimer = createTimer(\n\t\t\t\t\t\t`getFreshValue:${key}`,\n\t\t\t\t\t\t`request forced to wait for a fresh ${key} value`,\n\t\t\t\t\t)\n\t\t\t\t\tbreak\n\t\t\t\tcase 'getFreshValueSuccess':\n\t\t\t\t\tgetFreshValueTimer?.end(timings)\n\t\t\t\t\tbreak\n\t\t\t\tcase 'done':\n\t\t\t\t\tcacheRetrievalTimer.end(timings)\n\t\t\t\t\tbreak\n\t\t\t}\n\t\t}\n\t}\n}\n","import crypto from 'node:crypto'\nimport { PassThrough } from 'node:stream'\nimport { styleText } from 'node:util'\nimport { contentSecurity } from '@nichtsam/helmet/content'\nimport { createReadableStreamFromReadable } from '@react-router/node'\nimport * as Sentry from '@sentry/react-router'\nimport { isbot } from 'isbot'\nimport { renderToPipeableStream } from 'react-dom/server'\nimport {\n\tServerRouter,\n\ttype LoaderFunctionArgs,\n\ttype ActionFunctionArgs,\n\ttype HandleDocumentRequestFunction,\n} from 'react-router'\nimport { getEnv, init } from './utils/env.server.ts'\nimport { getInstanceInfo } from './utils/litefs.server.ts'\nimport { NonceProvider } from './utils/nonce-provider.ts'\nimport { makeTimings } from './utils/timing.server.ts'\n\nexport const streamTimeout = 5000\n\ninit()\nglobal.ENV = getEnv()\n\nconst MODE = process.env.NODE_ENV ?? 'development'\n\ntype DocRequestArgs = Parameters<HandleDocumentRequestFunction>\n\nexport default async function handleRequest(...args: DocRequestArgs) {\n\tconst [request, responseStatusCode, responseHeaders, reactRouterContext] =\n\t\targs\n\tconst { currentInstance, primaryInstance } = await getInstanceInfo()\n\tresponseHeaders.set('fly-region', process.env.FLY_REGION ?? 'unknown')\n\tresponseHeaders.set('fly-app', process.env.FLY_APP_NAME ?? 'unknown')\n\tresponseHeaders.set('fly-primary-instance', primaryInstance)\n\tresponseHeaders.set('fly-instance', currentInstance)\n\n\tif (process.env.NODE_ENV === 'production' && process.env.SENTRY_DSN) {\n\t\tresponseHeaders.append('Document-Policy', 'js-profiling')\n\t}\n\n\tconst callbackName = isbot(request.headers.get('user-agent'))\n\t\t? 'onAllReady'\n\t\t: 'onShellReady'\n\n\tconst nonce = crypto.randomBytes(16).toString('hex')\n\treturn new Promise(async (resolve, reject) => {\n\t\tlet didError = false\n\t\t// NOTE: this timing will only include things that are rendered in the shell\n\t\t// and will not include suspended components and deferred loaders\n\t\tconst timings = makeTimings('render', 'renderToPipeableStream')\n\n\t\tconst { pipe, abort } = renderToPipeableStream(\n\t\t\t<NonceProvider value={nonce}>\n\t\t\t\t<ServerRouter\n\t\t\t\t\tnonce={nonce}\n\t\t\t\t\tcontext={reactRouterContext}\n\t\t\t\t\turl={request.url}\n\t\t\t\t/>\n\t\t\t</NonceProvider>,\n\t\t\t{\n\t\t\t\t[callbackName]: () => {\n\t\t\t\t\tconst body = new PassThrough()\n\t\t\t\t\tresponseHeaders.set('Content-Type', 'text/html')\n\t\t\t\t\tresponseHeaders.append('Server-Timing', timings.toString())\n\n\t\t\t\t\tcontentSecurity(responseHeaders, {\n\t\t\t\t\t\tcrossOriginEmbedderPolicy: false,\n\t\t\t\t\t\tcontentSecurityPolicy: {\n\t\t\t\t\t\t\t// NOTE: Remove reportOnly when you're ready to enforce this CSP\n\t\t\t\t\t\t\treportOnly: true,\n\t\t\t\t\t\t\tdirectives: {\n\t\t\t\t\t\t\t\tfetch: {\n\t\t\t\t\t\t\t\t\t'connect-src': [\n\t\t\t\t\t\t\t\t\t\tMODE === 'development' ? 'ws:' : undefined,\n\t\t\t\t\t\t\t\t\t\tprocess.env.SENTRY_DSN ? '*.sentry.io' : undefined,\n\t\t\t\t\t\t\t\t\t\t\"'self'\",\n\t\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\t'font-src': [\"'self'\"],\n\t\t\t\t\t\t\t\t\t'frame-src': [\"'self'\"],\n\t\t\t\t\t\t\t\t\t'img-src': [\"'self'\", 'data:'],\n\t\t\t\t\t\t\t\t\t'script-src': [\n\t\t\t\t\t\t\t\t\t\t\"'strict-dynamic'\",\n\t\t\t\t\t\t\t\t\t\t\"'self'\",\n\t\t\t\t\t\t\t\t\t\t`'nonce-${nonce}'`,\n\t\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\t'script-src-attr': [`'nonce-${nonce}'`],\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t},\n\t\t\t\t\t})\n\n\t\t\t\t\tresolve(\n\t\t\t\t\t\tnew Response(createReadableStreamFromReadable(body), {\n\t\t\t\t\t\t\theaders: responseHeaders,\n\t\t\t\t\t\t\tstatus: didError ? 500 : responseStatusCode,\n\t\t\t\t\t\t}),\n\t\t\t\t\t)\n\t\t\t\t\tpipe(body)\n\t\t\t\t},\n\t\t\t\tonShellError: (err: unknown) => {\n\t\t\t\t\treject(err)\n\t\t\t\t},\n\t\t\t\tonError: () => {\n\t\t\t\t\tdidError = true\n\t\t\t\t},\n\t\t\t\tnonce,\n\t\t\t},\n\t\t)\n\n\t\tsetTimeout(abort, streamTimeout + 5000)\n\t})\n}\n\nexport async function handleDataRequest(response: Response) {\n\tconst { currentInstance, primaryInstance } = await getInstanceInfo()\n\tresponse.headers.set('fly-region', process.env.FLY_REGION ?? 'unknown')\n\tresponse.headers.set('fly-app', process.env.FLY_APP_NAME ?? 'unknown')\n\tresponse.headers.set('fly-primary-instance', primaryInstance)\n\tresponse.headers.set('fly-instance', currentInstance)\n\n\treturn response\n}\n\nexport function handleError(\n\terror: unknown,\n\t{ request }: LoaderFunctionArgs | ActionFunctionArgs,\n): void {\n\t// Skip capturing if the request is aborted as Remix docs suggest\n\t// Ref: https://remix.run/docs/en/main/file-conventions/entry.server#handleerror\n\tif (request.signal.aborted) {\n\t\treturn\n\t}\n\n\tif (error instanceof Error) {\n\t\tconsole.error(styleText('red', String(error.stack)))\n\t} else {\n\t\tconsole.error(error)\n\t}\n\n\tSentry.captureException(error)\n}\n","export default \"__VITE_ASSET__DhSICqjw__\"","export default \"__VITE_ASSET__B7S9ERV7__\"","import { clsx, type ClassValue } from 'clsx'\nimport { type GetSrcArgs, defaultGetSrc } from 'openimg/react'\nimport { useEffect, useMemo, useRef, useState } from 'react'\nimport { useFormAction, useNavigation } from 'react-router'\nimport { useSpinDelay } from 'spin-delay'\nimport { twMerge } from 'tailwind-merge'\n\nexport function getUserImgSrc(objectKey?: string | null) {\n\treturn objectKey\n\t\t? `/resources/images?objectKey=${encodeURIComponent(objectKey)}`\n\t\t: '/img/user.png'\n}\n\nexport function getNoteImgSrc(objectKey: string) {\n\treturn `/resources/images?objectKey=${encodeURIComponent(objectKey)}`\n}\n\nexport function getImgSrc({\n\theight,\n\toptimizerEndpoint,\n\tsrc,\n\twidth,\n\tfit,\n\tformat,\n}: GetSrcArgs) {\n\t// We customize getImgSrc so our src looks nice like this:\n\t// /resources/images?objectKey=...&h=...&w=...&fit=...&format=...\n\t// instead of this:\n\t// /resources/images?src=%2Fresources%2Fimages%3FobjectKey%3D...%26w%3D...%26h%3D...\n\tif (src.startsWith(optimizerEndpoint)) {\n\t\tconst [endpoint, query] = src.split('?')\n\t\tconst searchParams = new URLSearchParams(query)\n\t\tsearchParams.set('h', height.toString())\n\t\tsearchParams.set('w', width.toString())\n\t\tif (fit) {\n\t\t\tsearchParams.set('fit', fit)\n\t\t}\n\t\tif (format) {\n\t\t\tsearchParams.set('format', format)\n\t\t}\n\t\treturn `${endpoint}?${searchParams.toString()}`\n\t}\n\treturn defaultGetSrc({ height, optimizerEndpoint, src, width, fit, format })\n}\n\nexport function getErrorMessage(error: unknown) {\n\tif (typeof error === 'string') return error\n\tif (\n\t\terror &&\n\t\ttypeof error === 'object' &&\n\t\t'message' in error &&\n\t\ttypeof error.message === 'string'\n\t) {\n\t\treturn error.message\n\t}\n\tconsole.error('Unable to get error message for error', error)\n\treturn 'Unknown Error'\n}\n\nexport function cn(...inputs: ClassValue[]) {\n\treturn twMerge(clsx(inputs))\n}\n\nexport function getDomainUrl(request: Request) {\n\tconst host =\n\t\trequest.headers.get('X-Forwarded-Host') ??\n\t\trequest.headers.get('host') ??\n\t\tnew URL(request.url).host\n\tconst protocol = request.headers.get('X-Forwarded-Proto') ?? 'http'\n\treturn `${protocol}://${host}`\n}\n\nexport function getReferrerRoute(request: Request) {\n\t// spelling errors and whatever makes this annoyingly inconsistent\n\t// in my own testing, `referer` returned the right value, but ü§∑‚Äç‚ôÇÔ∏è\n\tconst referrer =\n\t\trequest.headers.get('referer') ??\n\t\trequest.headers.get('referrer') ??\n\t\trequest.referrer\n\tconst domain = getDomainUrl(request)\n\tif (referrer?.startsWith(domain)) {\n\t\treturn referrer.slice(domain.length)\n\t} else {\n\t\treturn '/'\n\t}\n}\n\n/**\n * Merge multiple headers objects into one (uses set so headers are overridden)\n */\nexport function mergeHeaders(\n\t...headers: Array<ResponseInit['headers'] | null | undefined>\n) {\n\tconst merged = new Headers()\n\tfor (const header of headers) {\n\t\tif (!header) continue\n\t\tfor (const [key, value] of new Headers(header).entries()) {\n\t\t\tmerged.set(key, value)\n\t\t}\n\t}\n\treturn merged\n}\n\n/**\n * Combine multiple header objects into one (uses append so headers are not overridden)\n */\nexport function combineHeaders(\n\t...headers: Array<ResponseInit['headers'] | null | undefined>\n) {\n\tconst combined = new Headers()\n\tfor (const header of headers) {\n\t\tif (!header) continue\n\t\tfor (const [key, value] of new Headers(header).entries()) {\n\t\t\tcombined.append(key, value)\n\t\t}\n\t}\n\treturn combined\n}\n\n/**\n * Combine multiple response init objects into one (uses combineHeaders)\n */\nexport function combineResponseInits(\n\t...responseInits: Array<ResponseInit | null | undefined>\n) {\n\tlet combined: ResponseInit = {}\n\tfor (const responseInit of responseInits) {\n\t\tcombined = {\n\t\t\t...responseInit,\n\t\t\theaders: combineHeaders(combined.headers, responseInit?.headers),\n\t\t}\n\t}\n\treturn combined\n}\n\n/**\n * Returns true if the current navigation is submitting the current route's\n * form. Defaults to the current route's form action and method POST.\n *\n * Defaults state to 'non-idle'\n *\n * NOTE: the default formAction will include query params, but the\n * navigation.formAction will not, so don't use the default formAction if you\n * want to know if a form is submitting without specific query params.\n */\nexport function useIsPending({\n\tformAction,\n\tformMethod = 'POST',\n\tstate = 'non-idle',\n}: {\n\tformAction?: string\n\tformMethod?: 'POST' | 'GET' | 'PUT' | 'PATCH' | 'DELETE'\n\tstate?: 'submitting' | 'loading' | 'non-idle'\n} = {}) {\n\tconst contextualFormAction = useFormAction()\n\tconst navigation = useNavigation()\n\tconst isPendingState =\n\t\tstate === 'non-idle'\n\t\t\t? navigation.state !== 'idle'\n\t\t\t: navigation.state === state\n\treturn (\n\t\tisPendingState &&\n\t\tnavigation.formAction === (formAction ?? contextualFormAction) &&\n\t\tnavigation.formMethod === formMethod\n\t)\n}\n\n/**\n * This combines useSpinDelay (from https://npm.im/spin-delay) and useIsPending\n * from our own utilities to give you a nice way to show a loading spinner for\n * a minimum amount of time, even if the request finishes right after the delay.\n *\n * This avoids a flash of loading state regardless of how fast or slow the\n * request is.\n */\nexport function useDelayedIsPending({\n\tformAction,\n\tformMethod,\n\tdelay = 400,\n\tminDuration = 300,\n}: Parameters<typeof useIsPending>[0] &\n\tParameters<typeof useSpinDelay>[1] = {}) {\n\tconst isPending = useIsPending({ formAction, formMethod })\n\tconst delayedIsPending = useSpinDelay(isPending, {\n\t\tdelay,\n\t\tminDuration,\n\t})\n\treturn delayedIsPending\n}\n\nfunction callAll<Args extends Array<unknown>>(\n\t...fns: Array<((...args: Args) => unknown) | undefined>\n) {\n\treturn (...args: Args) => fns.forEach((fn) => fn?.(...args))\n}\n\n/**\n * Use this hook with a button and it will make it so the first click sets a\n * `doubleCheck` state to true, and the second click will actually trigger the\n * `onClick` handler. This allows you to have a button that can be like a\n * \"are you sure?\" experience for the user before doing destructive operations.\n */\nexport function useDoubleCheck() {\n\tconst [doubleCheck, setDoubleCheck] = useState(false)\n\n\tfunction getButtonProps(\n\t\tprops?: React.ButtonHTMLAttributes<HTMLButtonElement>,\n\t) {\n\t\tconst onBlur: React.ButtonHTMLAttributes<HTMLButtonElement>['onBlur'] =\n\t\t\t() => setDoubleCheck(false)\n\n\t\tconst onClick: React.ButtonHTMLAttributes<HTMLButtonElement>['onClick'] =\n\t\t\tdoubleCheck\n\t\t\t\t? undefined\n\t\t\t\t: (e) => {\n\t\t\t\t\t\te.preventDefault()\n\t\t\t\t\t\tsetDoubleCheck(true)\n\t\t\t\t\t}\n\n\t\tconst onKeyUp: React.ButtonHTMLAttributes<HTMLButtonElement>['onKeyUp'] = (\n\t\t\te,\n\t\t) => {\n\t\t\tif (e.key === 'Escape') {\n\t\t\t\tsetDoubleCheck(false)\n\t\t\t}\n\t\t}\n\n\t\treturn {\n\t\t\t...props,\n\t\t\tonBlur: callAll(onBlur, props?.onBlur),\n\t\t\tonClick: callAll(onClick, props?.onClick),\n\t\t\tonKeyUp: callAll(onKeyUp, props?.onKeyUp),\n\t\t}\n\t}\n\n\treturn { doubleCheck, getButtonProps }\n}\n\n/**\n * Simple debounce implementation\n */\nfunction debounce<Callback extends (...args: Parameters<Callback>) => void>(\n\tfn: Callback,\n\tdelay: number,\n) {\n\tlet timer: ReturnType<typeof setTimeout> | null = null\n\treturn (...args: Parameters<Callback>) => {\n\t\tif (timer) clearTimeout(timer)\n\t\ttimer = setTimeout(() => {\n\t\t\tfn(...args)\n\t\t}, delay)\n\t}\n}\n\n/**\n * Debounce a callback function\n */\nexport function useDebounce<\n\tCallback extends (...args: Parameters<Callback>) => ReturnType<Callback>,\n>(callback: Callback, delay: number) {\n\tconst callbackRef = useRef(callback)\n\tuseEffect(() => {\n\t\tcallbackRef.current = callback\n\t})\n\treturn useMemo(\n\t\t() =>\n\t\t\tdebounce(\n\t\t\t\t(...args: Parameters<Callback>) => callbackRef.current(...args),\n\t\t\t\tdelay,\n\t\t\t),\n\t\t[delay],\n\t)\n}\n\nexport async function downloadFile(url: string, retries: number = 0) {\n\tconst MAX_RETRIES = 3\n\ttry {\n\t\tconst response = await fetch(url)\n\t\tif (!response.ok) {\n\t\t\tthrow new Error(`Failed to fetch image with status ${response.status}`)\n\t\t}\n\t\tconst contentType = response.headers.get('content-type') ?? 'image/jpg'\n\t\tconst arrayBuffer = await response.arrayBuffer()\n\t\tconst file = new File([arrayBuffer], 'downloaded-file', {\n\t\t\ttype: contentType,\n\t\t})\n\t\treturn file\n\t} catch (e) {\n\t\tif (retries > MAX_RETRIES) throw e\n\t\treturn downloadFile(url, retries + 1)\n\t}\n}\n","import { captureException } from '@sentry/react-router'\nimport { useEffect, type ReactElement } from 'react'\nimport {\n\ttype ErrorResponse,\n\tisRouteErrorResponse,\n\tuseParams,\n\tuseRouteError,\n} from 'react-router'\nimport { getErrorMessage } from '#app/utils/misc'\n\ntype StatusHandler = (info: {\n\terror: ErrorResponse\n\tparams: Record<string, string | undefined>\n}) => ReactElement | null\n\nexport function GeneralErrorBoundary({\n\tdefaultStatusHandler = ({ error }) => (\n\t\t<p>\n\t\t\t{error.status} {error.data}\n\t\t</p>\n\t),\n\tstatusHandlers,\n\tunexpectedErrorHandler = (error) => <p>{getErrorMessage(error)}</p>,\n}: {\n\tdefaultStatusHandler?: StatusHandler\n\tstatusHandlers?: Record<number, StatusHandler>\n\tunexpectedErrorHandler?: (error: unknown) => ReactElement | null\n}) {\n\tconst error = useRouteError()\n\tconst params = useParams()\n\tconst isResponse = isRouteErrorResponse(error)\n\n\tif (typeof document !== 'undefined') {\n\t\tconsole.error(error)\n\t}\n\n\tuseEffect(() => {\n\t\tif (isResponse) return\n\n\t\tcaptureException(error)\n\t}, [error, isResponse])\n\n\treturn (\n\t\t<div className=\"text-h2 container flex items-center justify-center p-20\">\n\t\t\t{isResponse\n\t\t\t\t? (statusHandlers?.[error.status] ?? defaultStatusHandler)({\n\t\t\t\t\t\terror,\n\t\t\t\t\t\tparams,\n\t\t\t\t\t})\n\t\t\t\t: unexpectedErrorHandler(error)}\n\t\t</div>\n\t)\n}\n","export default \"__VITE_ASSET__0pJmlING__\"","import { type SVGProps } from 'react'\nimport { cn } from '#app/utils/misc.tsx'\nimport href from './icons/sprite.svg'\nimport { type IconName } from '@/icon-name'\n\nexport { href }\nexport { IconName }\n\nconst sizeClassName = {\n\tfont: 'size-[1em]',\n\txs: 'size-3',\n\tsm: 'size-4',\n\tmd: 'size-5',\n\tlg: 'size-6',\n\txl: 'size-7',\n} as const\n\ntype Size = keyof typeof sizeClassName\n\nconst childrenSizeClassName = {\n\tfont: 'gap-1.5',\n\txs: 'gap-1.5',\n\tsm: 'gap-1.5',\n\tmd: 'gap-2',\n\tlg: 'gap-2',\n\txl: 'gap-3',\n} satisfies Record<Size, string>\n\n/**\n * Renders an SVG icon. The icon defaults to the size of the font. To make it\n * align vertically with neighboring text, you can pass the text as a child of\n * the icon and it will be automatically aligned.\n * Alternatively, if you're not ok with the icon being to the left of the text,\n * you need to wrap the icon and text in a common parent and set the parent to\n * display \"flex\" (or \"inline-flex\") with \"items-center\" and a reasonable gap.\n *\n * Pass `title` prop to the `Icon` component to get `<title>` element rendered\n * in the SVG container, providing this way for accessibility.\n */\nexport function Icon({\n\tname,\n\tsize = 'font',\n\tclassName,\n\ttitle,\n\tchildren,\n\t...props\n}: SVGProps<SVGSVGElement> & {\n\tname: IconName\n\tsize?: Size\n\ttitle?: string\n}) {\n\tif (children) {\n\t\treturn (\n\t\t\t<span\n\t\t\t\tclassName={`inline-flex items-center ${childrenSizeClassName[size]}`}\n\t\t\t>\n\t\t\t\t<Icon\n\t\t\t\t\tname={name}\n\t\t\t\t\tsize={size}\n\t\t\t\t\tclassName={className}\n\t\t\t\t\ttitle={title}\n\t\t\t\t\t{...props}\n\t\t\t\t/>\n\t\t\t\t{children}\n\t\t\t</span>\n\t\t)\n\t}\n\treturn (\n\t\t<svg\n\t\t\t{...props}\n\t\t\tclassName={cn(sizeClassName[size], 'inline self-center', className)}\n\t\t>\n\t\t\t{title ? <title>{title}</title> : null}\n\t\t\t<use href={`${href}#${name}`} />\n\t\t</svg>\n\t)\n}\n","import { useEffect, useRef, useState } from 'react'\nimport { useNavigation } from 'react-router'\nimport { useSpinDelay } from 'spin-delay'\nimport { cn } from '#app/utils/misc.tsx'\nimport { Icon } from './ui/icon.tsx'\n\nfunction EpicProgress() {\n\tconst transition = useNavigation()\n\tconst busy = transition.state !== 'idle'\n\tconst delayedPending = useSpinDelay(busy, {\n\t\tdelay: 600,\n\t\tminDuration: 400,\n\t})\n\tconst ref = useRef<HTMLDivElement>(null)\n\tconst [animationComplete, setAnimationComplete] = useState(true)\n\n\tuseEffect(() => {\n\t\tif (!ref.current) return\n\t\tif (delayedPending) setAnimationComplete(false)\n\n\t\tconst animationPromises = ref.current\n\t\t\t.getAnimations()\n\t\t\t.map(({ finished }) => finished)\n\n\t\tvoid Promise.allSettled(animationPromises).then(() => {\n\t\t\tif (!delayedPending) setAnimationComplete(true)\n\t\t})\n\t}, [delayedPending])\n\n\treturn (\n\t\t<div\n\t\t\trole=\"progressbar\"\n\t\t\taria-hidden={delayedPending ? undefined : true}\n\t\t\taria-valuetext={delayedPending ? 'Loading' : undefined}\n\t\t\tclassName=\"fixed inset-x-0 top-0 z-50 h-[0.20rem] animate-pulse\"\n\t\t>\n\t\t\t<div\n\t\t\t\tref={ref}\n\t\t\t\tclassName={cn(\n\t\t\t\t\t'bg-foreground h-full w-0 duration-500 ease-in-out',\n\t\t\t\t\ttransition.state === 'idle' &&\n\t\t\t\t\t\t(animationComplete\n\t\t\t\t\t\t\t? 'transition-none'\n\t\t\t\t\t\t\t: 'w-full opacity-0 transition-all'),\n\t\t\t\t\tdelayedPending && transition.state === 'submitting' && 'w-5/12',\n\t\t\t\t\tdelayedPending && transition.state === 'loading' && 'w-8/12',\n\t\t\t\t)}\n\t\t\t/>\n\t\t\t{delayedPending && (\n\t\t\t\t<div className=\"absolute flex items-center justify-center\">\n\t\t\t\t\t<Icon\n\t\t\t\t\t\tname=\"update\"\n\t\t\t\t\t\tsize=\"md\"\n\t\t\t\t\t\tclassName=\"text-foreground m-1 animate-spin\"\n\t\t\t\t\t\taria-hidden\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t)}\n\t\t</div>\n\t)\n}\n\nexport { EpicProgress }\n","import * as React from 'react'\n\nimport { cn } from '#app/utils/misc.tsx'\n\nconst Input = ({\n\tclassName,\n\ttype,\n\t...props\n}: React.ComponentProps<'input'>) => {\n\treturn (\n\t\t<input\n\t\t\tdata-slot=\"input\"\n\t\t\ttype={type}\n\t\t\tclassName={cn(\n\t\t\t\t'border-input bg-background ring-offset-background placeholder:text-muted-foreground focus-visible:ring-ring aria-[invalid]:border-input-invalid flex h-10 w-full rounded-md border px-3 py-2 text-base file:border-0 file:bg-transparent file:text-base file:font-medium focus-visible:ring-2 focus-visible:ring-offset-2 focus-visible:outline-hidden disabled:cursor-not-allowed disabled:opacity-50 md:text-sm md:file:text-sm',\n\t\t\t\tclassName,\n\t\t\t)}\n\t\t\t{...props}\n\t\t/>\n\t)\n}\n\nexport { Input }\n","import * as LabelPrimitive from '@radix-ui/react-label'\nimport { cva } from 'class-variance-authority'\nimport * as React from 'react'\n\nimport { cn } from '#app/utils/misc.tsx'\n\nconst labelVariants = cva(\n\t'text-sm leading-none font-medium peer-disabled:cursor-not-allowed peer-disabled:opacity-70',\n)\n\nconst Label = ({\n\tclassName,\n\t...props\n}: React.ComponentProps<typeof LabelPrimitive.Root>) => (\n\t<LabelPrimitive.Root\n\t\tdata-slot=\"label\"\n\t\tclassName={cn(labelVariants(), className)}\n\t\t{...props}\n\t/>\n)\n\nexport { Label }\n","import { Slot } from '@radix-ui/react-slot'\nimport { cva, type VariantProps } from 'class-variance-authority'\nimport * as React from 'react'\n\nimport { cn } from '#app/utils/misc.tsx'\n\nconst buttonVariants = cva(\n\t'ring-ring ring-offset-background inline-flex items-center justify-center rounded-md text-sm font-medium ring-offset-2 outline-hidden transition-colors focus-within:ring-2 focus-visible:ring-2 disabled:pointer-events-none disabled:opacity-50',\n\t{\n\t\tvariants: {\n\t\t\tvariant: {\n\t\t\t\tdefault: 'bg-primary text-primary-foreground hover:bg-primary/80',\n\t\t\t\tdestructive:\n\t\t\t\t\t'bg-destructive text-destructive-foreground hover:bg-destructive/80',\n\t\t\t\toutline:\n\t\t\t\t\t'border-input bg-background hover:bg-accent hover:text-accent-foreground border',\n\t\t\t\tsecondary:\n\t\t\t\t\t'bg-secondary text-secondary-foreground hover:bg-secondary/80',\n\t\t\t\tghost: 'hover:bg-accent hover:text-accent-foreground',\n\t\t\t\tlink: 'text-primary underline-offset-4 hover:underline',\n\t\t\t},\n\t\t\tsize: {\n\t\t\t\tdefault: 'h-10 px-4 py-2',\n\t\t\t\twide: 'px-24 py-5',\n\t\t\t\tsm: 'h-9 rounded-md px-3',\n\t\t\t\tlg: 'h-11 rounded-md px-8',\n\t\t\t\tpill: 'px-12 py-3 leading-3',\n\t\t\t\ticon: 'size-10',\n\t\t\t},\n\t\t},\n\t\tdefaultVariants: {\n\t\t\tvariant: 'default',\n\t\t\tsize: 'default',\n\t\t},\n\t},\n)\n\nexport type ButtonVariant = VariantProps<typeof buttonVariants>\n\nconst Button = ({\n\tclassName,\n\tvariant,\n\tsize,\n\tasChild = false,\n\t...props\n}: React.ComponentProps<'button'> &\n\tButtonVariant & {\n\t\tasChild?: boolean\n\t}) => {\n\tconst Comp = asChild ? Slot : 'button'\n\treturn (\n\t\t<Comp\n\t\t\tdata-slot=\"button\"\n\t\t\tclassName={cn(buttonVariants({ variant, size, className }))}\n\t\t\t{...props}\n\t\t/>\n\t)\n}\n\nexport { Button, buttonVariants }\n","import * as TooltipPrimitive from '@radix-ui/react-tooltip'\nimport * as React from 'react'\n\nimport { cn } from '#app/utils/misc.tsx'\n\nfunction TooltipProvider(\n\tprops: React.ComponentProps<typeof TooltipPrimitive.Provider>,\n) {\n\treturn <TooltipPrimitive.Provider data-slot=\"tooltip-provider\" {...props} />\n}\n\nfunction Tooltip(props: React.ComponentProps<typeof TooltipPrimitive.Root>) {\n\treturn (\n\t\t<TooltipProvider>\n\t\t\t<TooltipPrimitive.Root data-slot=\"tooltip\" {...props} />\n\t\t</TooltipProvider>\n\t)\n}\n\nfunction TooltipTrigger(\n\tprops: React.ComponentProps<typeof TooltipPrimitive.Trigger>,\n) {\n\treturn <TooltipPrimitive.Trigger data-slot=\"tooltip-trigger\" {...props} />\n}\n\nconst TooltipContent = ({\n\tclassName,\n\tsideOffset = 4,\n\t...props\n}: React.ComponentProps<typeof TooltipPrimitive.Content>) => (\n\t<TooltipPrimitive.Content\n\t\tdata-slot=\"tooltip-content\"\n\t\tsideOffset={sideOffset}\n\t\tclassName={cn(\n\t\t\t'bg-popover text-popover-foreground animate-in fade-in-0 zoom-in-95 data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=closed]:zoom-out-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 z-50 overflow-hidden rounded-md border px-3 py-1.5 text-sm shadow-md',\n\t\t\tclassName,\n\t\t)}\n\t\t{...props}\n\t/>\n)\n\nexport { Tooltip, TooltipTrigger, TooltipContent, TooltipProvider }\n","import { useSpinDelay } from 'spin-delay'\nimport { cn } from '#app/utils/misc.tsx'\nimport { Button, type ButtonVariant } from './button.tsx'\nimport { Icon } from './icon.tsx'\nimport {\n\tTooltip,\n\tTooltipContent,\n\tTooltipProvider,\n\tTooltipTrigger,\n} from './tooltip.tsx'\n\nexport const StatusButton = ({\n\tmessage,\n\tstatus,\n\tclassName,\n\tchildren,\n\tspinDelay,\n\t...props\n}: React.ComponentProps<'button'> &\n\tButtonVariant & {\n\t\tstatus: 'pending' | 'success' | 'error' | 'idle'\n\t\tmessage?: string | null\n\t\tspinDelay?: Parameters<typeof useSpinDelay>[1]\n\t}) => {\n\tconst delayedPending = useSpinDelay(status === 'pending', {\n\t\tdelay: 400,\n\t\tminDuration: 300,\n\t\t...spinDelay,\n\t})\n\tconst companion = {\n\t\tpending: delayedPending ? (\n\t\t\t<div\n\t\t\t\trole=\"status\"\n\t\t\t\tclassName=\"inline-flex size-6 items-center justify-center\"\n\t\t\t>\n\t\t\t\t<Icon name=\"update\" className=\"animate-spin\" title=\"loading\" />\n\t\t\t</div>\n\t\t) : null,\n\t\tsuccess: (\n\t\t\t<div\n\t\t\t\trole=\"status\"\n\t\t\t\tclassName=\"inline-flex size-6 items-center justify-center\"\n\t\t\t>\n\t\t\t\t<Icon name=\"check\" title=\"success\" />\n\t\t\t</div>\n\t\t),\n\t\terror: (\n\t\t\t<div\n\t\t\t\trole=\"status\"\n\t\t\t\tclassName=\"bg-destructive inline-flex size-6 items-center justify-center rounded-full\"\n\t\t\t>\n\t\t\t\t<Icon\n\t\t\t\t\tname=\"cross-1\"\n\t\t\t\t\tclassName=\"text-destructive-foreground\"\n\t\t\t\t\ttitle=\"error\"\n\t\t\t\t/>\n\t\t\t</div>\n\t\t),\n\t\tidle: null,\n\t}[status]\n\n\treturn (\n\t\t<Button className={cn('flex justify-center gap-4', className)} {...props}>\n\t\t\t<div>{children}</div>\n\t\t\t{message ? (\n\t\t\t\t<TooltipProvider>\n\t\t\t\t\t<Tooltip>\n\t\t\t\t\t\t<TooltipTrigger>{companion}</TooltipTrigger>\n\t\t\t\t\t\t<TooltipContent>{message}</TooltipContent>\n\t\t\t\t\t</Tooltip>\n\t\t\t\t</TooltipProvider>\n\t\t\t) : (\n\t\t\t\tcompanion\n\t\t\t)}\n\t\t</Button>\n\t)\n}\nStatusButton.displayName = 'Button'\n","import { useId } from 'react'\nimport { Form, useSearchParams, useSubmit } from 'react-router'\nimport { useDebounce, useIsPending } from '#app/utils/misc.tsx'\nimport { Icon } from './ui/icon.tsx'\nimport { Input } from './ui/input.tsx'\nimport { Label } from './ui/label.tsx'\nimport { StatusButton } from './ui/status-button.tsx'\n\nexport function SearchBar({\n\tstatus,\n\tautoFocus = false,\n\tautoSubmit = false,\n}: {\n\tstatus: 'idle' | 'pending' | 'success' | 'error'\n\tautoFocus?: boolean\n\tautoSubmit?: boolean\n}) {\n\tconst id = useId()\n\tconst [searchParams] = useSearchParams()\n\tconst submit = useSubmit()\n\tconst isSubmitting = useIsPending({\n\t\tformMethod: 'GET',\n\t\tformAction: '/users',\n\t})\n\n\tconst handleFormChange = useDebounce(async (form: HTMLFormElement) => {\n\t\tawait submit(form)\n\t}, 400)\n\n\treturn (\n\t\t<Form\n\t\t\tmethod=\"GET\"\n\t\t\taction=\"/users\"\n\t\t\tclassName=\"flex flex-wrap items-center justify-center gap-2\"\n\t\t\tonChange={(e) => autoSubmit && handleFormChange(e.currentTarget)}\n\t\t>\n\t\t\t<div className=\"flex-1\">\n\t\t\t\t<Label htmlFor={id} className=\"sr-only\">\n\t\t\t\t\tSearch\n\t\t\t\t</Label>\n\t\t\t\t<Input\n\t\t\t\t\ttype=\"search\"\n\t\t\t\t\tname=\"search\"\n\t\t\t\t\tid={id}\n\t\t\t\t\tdefaultValue={searchParams.get('search') ?? ''}\n\t\t\t\t\tplaceholder=\"Search\"\n\t\t\t\t\tclassName=\"w-full\"\n\t\t\t\t\tautoFocus={autoFocus}\n\t\t\t\t/>\n\t\t\t</div>\n\t\t\t<div>\n\t\t\t\t<StatusButton\n\t\t\t\t\ttype=\"submit\"\n\t\t\t\t\tstatus={isSubmitting ? 'pending' : status}\n\t\t\t\t\tclassName=\"flex w-full items-center justify-center\"\n\t\t\t\t>\n\t\t\t\t\t<Icon name=\"magnifying-glass\" size=\"md\" />\n\t\t\t\t\t<span className=\"sr-only\">Search</span>\n\t\t\t\t</StatusButton>\n\t\t\t</div>\n\t\t</Form>\n\t)\n}\n","import { useEffect } from 'react'\nimport { toast as showToast } from 'sonner'\nimport { type Toast } from '#app/utils/toast.server.ts'\n\nexport function useToast(toast?: Toast | null) {\n\tuseEffect(() => {\n\t\tif (toast) {\n\t\t\tsetTimeout(() => {\n\t\t\t\tshowToast[toast.type](toast.title, {\n\t\t\t\t\tid: toast.id,\n\t\t\t\t\tdescription: toast.description,\n\t\t\t\t})\n\t\t\t}, 0)\n\t\t}\n\t}, [toast])\n}\n","import { Toaster as Sonner } from 'sonner'\n\ntype ToasterProps = React.ComponentProps<typeof Sonner>\n\nconst EpicToaster = ({ theme, ...props }: ToasterProps) => {\n\treturn (\n\t\t<Sonner\n\t\t\ttheme={theme}\n\t\t\tclassName=\"toaster group\"\n\t\t\ttoastOptions={{\n\t\t\t\tclassNames: {\n\t\t\t\t\ttoast:\n\t\t\t\t\t\t'group toast group-[.toaster]:bg-background group-[.toaster]:text-foreground group-[.toaster]:border-border group-[.toaster]:shadow-lg',\n\t\t\t\t\tdescription: 'group-[.toast]:text-muted-foreground',\n\t\t\t\t\tactionButton:\n\t\t\t\t\t\t'group-[.toast]:bg-primary group-[.toast]:text-primary-foreground',\n\t\t\t\t\tcancelButton:\n\t\t\t\t\t\t'group-[.toast]:bg-muted group-[.toast]:text-muted-foreground',\n\t\t\t\t},\n\t\t\t}}\n\t\t\t{...props}\n\t\t/>\n\t)\n}\n\nexport { EpicToaster }\n","import { useRouteLoaderData } from 'react-router'\nimport { type loader as rootLoader } from '#app/root.tsx'\n\nfunction isUser(\n\tuser: any,\n): user is Awaited<ReturnType<typeof rootLoader>>['data']['user'] {\n\treturn user && typeof user === 'object' && typeof user.id === 'string'\n}\n\nexport function useOptionalUser() {\n\tconst data = useRouteLoaderData<typeof rootLoader>('root')\n\tif (!data || !isUser(data.user)) {\n\t\treturn undefined\n\t}\n\treturn data.user\n}\n\nexport function useUser() {\n\tconst maybeUser = useOptionalUser()\n\tif (!maybeUser) {\n\t\tthrow new Error(\n\t\t\t'No user found in root loader, but user is required by useUser. If user is optional, try useOptionalUser instead.',\n\t\t)\n\t}\n\treturn maybeUser\n}\n\ntype Action = 'create' | 'read' | 'update' | 'delete'\ntype Entity = 'user' | 'note'\ntype Access = 'own' | 'any' | 'own,any' | 'any,own'\nexport type PermissionString =\n\t| `${Action}:${Entity}`\n\t| `${Action}:${Entity}:${Access}`\n\nexport function parsePermissionString(permissionString: PermissionString) {\n\tconst [action, entity, access] = permissionString.split(':') as [\n\t\tAction,\n\t\tEntity,\n\t\tAccess | undefined,\n\t]\n\treturn {\n\t\taction,\n\t\tentity,\n\t\taccess: access ? (access.split(',') as Array<Access>) : undefined,\n\t}\n}\n\nexport function userHasPermission(\n\tuser: Pick<ReturnType<typeof useUser>, 'roles'> | null | undefined,\n\tpermission: PermissionString,\n) {\n\tif (!user) return false\n\tconst { action, entity, access } = parsePermissionString(permission)\n\treturn user.roles.some((role) =>\n\t\trole.permissions.some(\n\t\t\t(permission) =>\n\t\t\t\tpermission.entity === entity &&\n\t\t\t\tpermission.action === action &&\n\t\t\t\t(!access || access.includes(permission.access)),\n\t\t),\n\t)\n}\n\nexport function userHasRole(\n\tuser: Pick<ReturnType<typeof useUser>, 'roles'> | null,\n\trole: string,\n) {\n\tif (!user) return false\n\treturn user.roles.some((r) => r.name === role)\n}\n","import * as DropdownMenuPrimitive from '@radix-ui/react-dropdown-menu'\nimport * as React from 'react'\n\nimport { cn } from '#app/utils/misc.tsx'\n\nfunction DropdownMenu(\n\tprops: React.ComponentProps<typeof DropdownMenuPrimitive.Root>,\n) {\n\treturn <DropdownMenuPrimitive.Root data-slot=\"dropdown-menu\" {...props} />\n}\n\nfunction DropdownMenuPortal(\n\tprops: React.ComponentProps<typeof DropdownMenuPrimitive.Portal>,\n) {\n\treturn (\n\t\t<DropdownMenuPrimitive.Portal data-slot=\"dropdown-menu-portal\" {...props} />\n\t)\n}\n\nfunction DropdownMenuTrigger(\n\tprops: React.ComponentProps<typeof DropdownMenuPrimitive.Trigger>,\n) {\n\treturn (\n\t\t<DropdownMenuPrimitive.Trigger\n\t\t\tdata-slot=\"dropdown-menu-trigger\"\n\t\t\t{...props}\n\t\t/>\n\t)\n}\n\nfunction DropdownMenuGroup(\n\tprops: React.ComponentProps<typeof DropdownMenuPrimitive.Group>,\n) {\n\treturn (\n\t\t<DropdownMenuPrimitive.Group data-slot=\"dropdown-menu-group\" {...props} />\n\t)\n}\n\nfunction DropdownMenuSub(\n\tprops: React.ComponentProps<typeof DropdownMenuPrimitive.Sub>,\n) {\n\treturn <DropdownMenuPrimitive.Sub data-slot=\"dropdown-menu-sub\" {...props} />\n}\n\nfunction DropdownMenuRadioGroup(\n\tprops: React.ComponentProps<typeof DropdownMenuPrimitive.RadioGroup>,\n) {\n\treturn (\n\t\t<DropdownMenuPrimitive.RadioGroup\n\t\t\tdata-slot=\"dropdown-menu-radio-group\"\n\t\t\t{...props}\n\t\t/>\n\t)\n}\n\nconst DropdownMenuContent = ({\n\tclassName,\n\tsideOffset = 4,\n\t...props\n}: React.ComponentProps<typeof DropdownMenuPrimitive.Content>) => (\n\t<DropdownMenuPrimitive.Portal>\n\t\t<DropdownMenuPrimitive.Content\n\t\t\tdata-slot=\"dropdown-menu-content\"\n\t\t\tsideOffset={sideOffset}\n\t\t\tclassName={cn(\n\t\t\t\t'bg-popover text-popover-foreground data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 z-50 min-w-[8rem] overflow-hidden rounded-md border p-1 shadow-md',\n\t\t\t\tclassName,\n\t\t\t)}\n\t\t\t{...props}\n\t\t/>\n\t</DropdownMenuPrimitive.Portal>\n)\n\nconst DropdownMenuSubTrigger = ({\n\tclassName,\n\tinset,\n\tchildren,\n\t...props\n}: React.ComponentProps<typeof DropdownMenuPrimitive.SubTrigger> & {\n\tinset?: boolean\n}) => (\n\t<DropdownMenuPrimitive.SubTrigger\n\t\tdata-slot=\"dropdown-menu-sub-trigger\"\n\t\tdata-inset={inset}\n\t\tclassName={cn(\n\t\t\t'focus:bg-accent data-[state=open]:bg-accent flex items-center rounded-sm px-2 py-1.5 text-sm outline-hidden select-none',\n\t\t\tinset && 'pl-8',\n\t\t\tclassName,\n\t\t)}\n\t\t{...props}\n\t>\n\t\t{children}\n\t\t<span className=\"ml-auto size-4\">‚ñ∂Ô∏è</span>\n\t</DropdownMenuPrimitive.SubTrigger>\n)\n\nconst DropdownMenuSubContent = ({\n\tclassName,\n\t...props\n}: React.ComponentProps<typeof DropdownMenuPrimitive.SubContent>) => (\n\t<DropdownMenuPrimitive.SubContent\n\t\tdata-slot=\"dropdown-menu-sub-content\"\n\t\tclassName={cn(\n\t\t\t'bg-popover text-popover-foreground data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 z-50 min-w-[8rem] overflow-hidden rounded-md border p-1 shadow-lg',\n\t\t\tclassName,\n\t\t)}\n\t\t{...props}\n\t/>\n)\n\nconst DropdownMenuItem = ({\n\tclassName,\n\tinset,\n\t...props\n}: React.ComponentProps<typeof DropdownMenuPrimitive.Item> & {\n\tinset?: boolean\n}) => (\n\t<DropdownMenuPrimitive.Item\n\t\tdata-slot=\"dropdown-menu-item\"\n\t\tdata-inset={inset}\n\t\tclassName={cn(\n\t\t\t'focus:bg-accent focus:text-accent-foreground relative flex items-center rounded-sm px-2 py-1.5 text-sm outline-hidden transition-colors select-none data-disabled:pointer-events-none data-disabled:opacity-50',\n\t\t\tinset && 'pl-8',\n\t\t\tclassName,\n\t\t)}\n\t\t{...props}\n\t/>\n)\n\nconst DropdownMenuCheckboxItem = ({\n\tclassName,\n\tchildren,\n\tchecked,\n\t...props\n}: React.ComponentProps<typeof DropdownMenuPrimitive.CheckboxItem>) => (\n\t<DropdownMenuPrimitive.CheckboxItem\n\t\tdata-slot=\"dropdown-menu-checkbox-item\"\n\t\tclassName={cn(\n\t\t\t'focus:bg-accent focus:text-accent-foreground relative flex items-center rounded-sm py-1.5 pr-2 pl-8 text-sm outline-hidden transition-colors select-none data-disabled:pointer-events-none data-disabled:opacity-50',\n\t\t\tclassName,\n\t\t)}\n\t\tchecked={checked}\n\t\t{...props}\n\t>\n\t\t<span className=\"absolute left-2 flex size-3.5 items-center justify-center\">\n\t\t\t<DropdownMenuPrimitive.ItemIndicator>\n\t\t\t\t<span className=\"size-4\">\n\t\t\t\t\t<svg viewBox=\"0 0 8 8\">\n\t\t\t\t\t\t<path\n\t\t\t\t\t\t\td=\"M1,4 L3,6 L7,2\"\n\t\t\t\t\t\t\tstroke=\"black\"\n\t\t\t\t\t\t\tstrokeWidth=\"1\"\n\t\t\t\t\t\t\tfill=\"none\"\n\t\t\t\t\t\t/>\n\t\t\t\t\t</svg>\n\t\t\t\t</span>\n\t\t\t</DropdownMenuPrimitive.ItemIndicator>\n\t\t</span>\n\t\t{children}\n\t</DropdownMenuPrimitive.CheckboxItem>\n)\n\nconst DropdownMenuRadioItem = ({\n\tclassName,\n\tchildren,\n\t...props\n}: React.ComponentProps<typeof DropdownMenuPrimitive.RadioItem>) => (\n\t<DropdownMenuPrimitive.RadioItem\n\t\tdata-slot=\"dropdown-menu-radio-item\"\n\t\tclassName={cn(\n\t\t\t'focus:bg-accent focus:text-accent-foreground relative flex items-center rounded-sm py-1.5 pr-2 pl-8 text-sm outline-hidden transition-colors select-none data-disabled:pointer-events-none data-disabled:opacity-50',\n\t\t\tclassName,\n\t\t)}\n\t\t{...props}\n\t>\n\t\t<span className=\"absolute left-2 flex size-3.5 items-center justify-center\">\n\t\t\t<DropdownMenuPrimitive.ItemIndicator>\n\t\t\t\t<span className=\"size-2\">‚ö™</span>\n\t\t\t</DropdownMenuPrimitive.ItemIndicator>\n\t\t</span>\n\t\t{children}\n\t</DropdownMenuPrimitive.RadioItem>\n)\n\nconst DropdownMenuLabel = ({\n\tclassName,\n\tinset,\n\t...props\n}: React.ComponentProps<typeof DropdownMenuPrimitive.Label> & {\n\tinset?: boolean\n}) => (\n\t<DropdownMenuPrimitive.Label\n\t\tdata-slot=\"dropdown-menu-label\"\n\t\tdata-inset={inset}\n\t\tclassName={cn(\n\t\t\t'px-2 py-1.5 text-sm font-semibold',\n\t\t\tinset && 'pl-8',\n\t\t\tclassName,\n\t\t)}\n\t\t{...props}\n\t/>\n)\n\nconst DropdownMenuSeparator = ({\n\tclassName,\n\t...props\n}: React.ComponentProps<typeof DropdownMenuPrimitive.Separator>) => (\n\t<DropdownMenuPrimitive.Separator\n\t\tdata-slot=\"dropdown-menu-separator\"\n\t\tclassName={cn('bg-muted -mx-1 my-1 h-px', className)}\n\t\t{...props}\n\t/>\n)\n\nconst DropdownMenuShortcut = ({\n\tclassName,\n\t...props\n}: React.HTMLAttributes<HTMLSpanElement>) => {\n\treturn (\n\t\t<span\n\t\t\tclassName={cn('ml-auto text-xs tracking-widest opacity-60', className)}\n\t\t\t{...props}\n\t\t/>\n\t)\n}\n\nexport {\n\tDropdownMenu,\n\tDropdownMenuTrigger,\n\tDropdownMenuContent,\n\tDropdownMenuItem,\n\tDropdownMenuCheckboxItem,\n\tDropdownMenuRadioItem,\n\tDropdownMenuLabel,\n\tDropdownMenuSeparator,\n\tDropdownMenuShortcut,\n\tDropdownMenuGroup,\n\tDropdownMenuPortal,\n\tDropdownMenuSub,\n\tDropdownMenuSubContent,\n\tDropdownMenuSubTrigger,\n\tDropdownMenuRadioGroup,\n}\n","import { Img } from 'openimg/react'\nimport { useRef } from 'react'\nimport { Link, Form } from 'react-router'\nimport { getUserImgSrc } from '#app/utils/misc.tsx'\nimport { useUser } from '#app/utils/user.ts'\nimport { Button } from './ui/button'\nimport {\n\tDropdownMenu,\n\tDropdownMenuTrigger,\n\tDropdownMenuPortal,\n\tDropdownMenuContent,\n\tDropdownMenuItem,\n} from './ui/dropdown-menu'\nimport { Icon } from './ui/icon'\n\nexport function UserDropdown() {\n\tconst user = useUser()\n\tconst formRef = useRef<HTMLFormElement>(null)\n\treturn (\n\t\t<DropdownMenu>\n\t\t\t<DropdownMenuTrigger asChild>\n\t\t\t\t<Button asChild variant=\"secondary\">\n\t\t\t\t\t<Link\n\t\t\t\t\t\tto={`/users/${user.username}`}\n\t\t\t\t\t\t// this is for progressive enhancement\n\t\t\t\t\t\tonClick={(e) => e.preventDefault()}\n\t\t\t\t\t\tclassName=\"flex items-center gap-2\"\n\t\t\t\t\t\taria-label=\"User menu\"\n\t\t\t\t\t>\n\t\t\t\t\t\t<Img\n\t\t\t\t\t\t\tclassName=\"size-8 rounded-full object-cover\"\n\t\t\t\t\t\t\talt={user.name ?? user.username}\n\t\t\t\t\t\t\tsrc={getUserImgSrc(user.image?.objectKey)}\n\t\t\t\t\t\t\twidth={256}\n\t\t\t\t\t\t\theight={256}\n\t\t\t\t\t\t\taria-hidden=\"true\"\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<span className=\"text-body-sm font-bold\">\n\t\t\t\t\t\t\t{user.name ?? user.username}\n\t\t\t\t\t\t</span>\n\t\t\t\t\t</Link>\n\t\t\t\t</Button>\n\t\t\t</DropdownMenuTrigger>\n\t\t\t<DropdownMenuPortal>\n\t\t\t\t<DropdownMenuContent sideOffset={8} align=\"end\">\n\t\t\t\t\t<DropdownMenuItem asChild>\n\t\t\t\t\t\t<Link prefetch=\"intent\" to={`/users/${user.username}`}>\n\t\t\t\t\t\t\t<Icon className=\"text-body-md\" name=\"avatar\">\n\t\t\t\t\t\t\t\tProfile\n\t\t\t\t\t\t\t</Icon>\n\t\t\t\t\t\t</Link>\n\t\t\t\t\t</DropdownMenuItem>\n\t\t\t\t\t<DropdownMenuItem asChild>\n\t\t\t\t\t\t<Link prefetch=\"intent\" to={`/users/${user.username}/notes`}>\n\t\t\t\t\t\t\t<Icon className=\"text-body-md\" name=\"pencil-2\">\n\t\t\t\t\t\t\t\tNotes\n\t\t\t\t\t\t\t</Icon>\n\t\t\t\t\t\t</Link>\n\t\t\t\t\t</DropdownMenuItem>\n\t\t\t\t\t<Form action=\"/logout\" method=\"POST\" ref={formRef}>\n\t\t\t\t\t\t<DropdownMenuItem asChild>\n\t\t\t\t\t\t\t<button type=\"submit\" className=\"w-full\">\n\t\t\t\t\t\t\t\t<Icon className=\"text-body-md\" name=\"exit\">\n\t\t\t\t\t\t\t\t\tLogout\n\t\t\t\t\t\t\t\t</Icon>\n\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t</DropdownMenuItem>\n\t\t\t\t\t</Form>\n\t\t\t\t</DropdownMenuContent>\n\t\t\t</DropdownMenuPortal>\n\t\t</DropdownMenu>\n\t)\n}\n","import { invariant } from '@epic-web/invariant'\nimport { useRouteLoaderData } from 'react-router'\nimport { type loader as rootLoader } from '#app/root.tsx'\n\n/**\n * @returns the request info from the root loader (throws an error if it does not exist)\n */\nexport function useRequestInfo() {\n\tconst maybeRequestInfo = useOptionalRequestInfo()\n\tinvariant(maybeRequestInfo, 'No requestInfo found in root loader')\n\n\treturn maybeRequestInfo\n}\n\nexport function useOptionalRequestInfo() {\n\tconst data = useRouteLoaderData<typeof rootLoader>('root')\n\n\treturn data?.requestInfo\n}\n","/**\n * This file contains utilities for using client hints for user preference which\n * are needed by the server, but are only known by the browser.\n */\nimport { getHintUtils } from '@epic-web/client-hints'\nimport {\n\tclientHint as colorSchemeHint,\n\tsubscribeToSchemeChange,\n} from '@epic-web/client-hints/color-scheme'\nimport { clientHint as timeZoneHint } from '@epic-web/client-hints/time-zone'\nimport * as React from 'react'\nimport { useRevalidator } from 'react-router'\nimport { useOptionalRequestInfo, useRequestInfo } from './request-info.ts'\n\nconst hintsUtils = getHintUtils({\n\ttheme: colorSchemeHint,\n\ttimeZone: timeZoneHint,\n\t// add other hints here\n})\n\nexport const { getHints } = hintsUtils\n\n/**\n * @returns an object with the client hints and their values\n */\nexport function useHints() {\n\tconst requestInfo = useRequestInfo()\n\treturn requestInfo.hints\n}\n\nexport function useOptionalHints() {\n\tconst requestInfo = useOptionalRequestInfo()\n\treturn requestInfo?.hints\n}\n\n/**\n * @returns inline script element that checks for client hints and sets cookies\n * if they are not set then reloads the page if any cookie was set to an\n * inaccurate value.\n */\nexport function ClientHintCheck({ nonce }: { nonce: string }) {\n\tconst { revalidate } = useRevalidator()\n\tReact.useEffect(\n\t\t() => subscribeToSchemeChange(() => revalidate()),\n\t\t[revalidate],\n\t)\n\n\treturn (\n\t\t<script\n\t\t\tnonce={nonce}\n\t\t\tdangerouslySetInnerHTML={{\n\t\t\t\t__html: hintsUtils.getClientHintCheckScript(),\n\t\t\t}}\n\t\t/>\n\t)\n}\n","import * as cookie from 'cookie'\n\nconst cookieName = 'en_theme'\nexport type Theme = 'light' | 'dark'\n\nexport function getTheme(request: Request): Theme | null {\n\tconst cookieHeader = request.headers.get('cookie')\n\tconst parsed = cookieHeader ? cookie.parse(cookieHeader)[cookieName] : 'light'\n\tif (parsed === 'light' || parsed === 'dark') return parsed\n\treturn null\n}\n\nexport function setTheme(theme: Theme | 'system') {\n\tif (theme === 'system') {\n\t\treturn cookie.serialize(cookieName, '', { path: '/', maxAge: -1 })\n\t} else {\n\t\treturn cookie.serialize(cookieName, theme, { path: '/', maxAge: 31536000 })\n\t}\n}\n","import { useForm, getFormProps } from '@conform-to/react'\nimport { parseWithZod } from '@conform-to/zod'\nimport { invariantResponse } from '@epic-web/invariant'\nimport { data, redirect, useFetcher, useFetchers } from 'react-router'\nimport { ServerOnly } from 'remix-utils/server-only'\nimport { z } from 'zod'\nimport { Icon } from '#app/components/ui/icon.tsx'\nimport { useHints, useOptionalHints } from '#app/utils/client-hints.tsx'\nimport {\n\tuseOptionalRequestInfo,\n\tuseRequestInfo,\n} from '#app/utils/request-info.ts'\nimport { type Theme, setTheme } from '#app/utils/theme.server.ts'\nimport { type Route } from './+types/theme-switch.ts'\nconst ThemeFormSchema = z.object({\n\ttheme: z.enum(['system', 'light', 'dark']),\n\t// this is useful for progressive enhancement\n\tredirectTo: z.string().optional(),\n})\n\nexport async function action({ request }: Route.ActionArgs) {\n\tconst formData = await request.formData()\n\tconst submission = parseWithZod(formData, {\n\t\tschema: ThemeFormSchema,\n\t})\n\n\tinvariantResponse(submission.status === 'success', 'Invalid theme received')\n\n\tconst { theme, redirectTo } = submission.value\n\n\tconst responseInit = {\n\t\theaders: { 'set-cookie': setTheme(theme) },\n\t}\n\tif (redirectTo) {\n\t\treturn redirect(redirectTo, responseInit)\n\t} else {\n\t\treturn data({ result: submission.reply() }, responseInit)\n\t}\n}\n\nexport function ThemeSwitch({\n\tuserPreference,\n}: {\n\tuserPreference?: Theme | null\n}) {\n\tconst fetcher = useFetcher<typeof action>()\n\tconst requestInfo = useRequestInfo()\n\n\tconst [form] = useForm({\n\t\tid: 'theme-switch',\n\t\tlastResult: fetcher.data?.result,\n\t})\n\n\tconst optimisticMode = useOptimisticThemeMode()\n\tconst mode = optimisticMode ?? userPreference ?? 'system'\n\tconst nextMode =\n\t\tmode === 'system' ? 'light' : mode === 'light' ? 'dark' : 'system'\n\tconst modeLabel = {\n\t\tlight: (\n\t\t\t<Icon name=\"sun\">\n\t\t\t\t<span className=\"sr-only\">Light</span>\n\t\t\t</Icon>\n\t\t),\n\t\tdark: (\n\t\t\t<Icon name=\"moon\">\n\t\t\t\t<span className=\"sr-only\">Dark</span>\n\t\t\t</Icon>\n\t\t),\n\t\tsystem: (\n\t\t\t<Icon name=\"laptop\">\n\t\t\t\t<span className=\"sr-only\">System</span>\n\t\t\t</Icon>\n\t\t),\n\t}\n\n\treturn (\n\t\t<fetcher.Form\n\t\t\tmethod=\"POST\"\n\t\t\t{...getFormProps(form)}\n\t\t\taction=\"/resources/theme-switch\"\n\t\t>\n\t\t\t<ServerOnly>\n\t\t\t\t{() => (\n\t\t\t\t\t<input type=\"hidden\" name=\"redirectTo\" value={requestInfo.path} />\n\t\t\t\t)}\n\t\t\t</ServerOnly>\n\t\t\t<input type=\"hidden\" name=\"theme\" value={nextMode} />\n\t\t\t<div className=\"flex gap-2\">\n\t\t\t\t<button\n\t\t\t\t\ttype=\"submit\"\n\t\t\t\t\tclassName=\"flex size-8 cursor-pointer items-center justify-center\"\n\t\t\t\t>\n\t\t\t\t\t{modeLabel[mode]}\n\t\t\t\t</button>\n\t\t\t</div>\n\t\t</fetcher.Form>\n\t)\n}\n\n/**\n * If the user's changing their theme mode preference, this will return the\n * value it's being changed to.\n */\nexport function useOptimisticThemeMode() {\n\tconst fetchers = useFetchers()\n\tconst themeFetcher = fetchers.find(\n\t\t(f) => f.formAction === '/resources/theme-switch',\n\t)\n\n\tif (themeFetcher && themeFetcher.formData) {\n\t\tconst submission = parseWithZod(themeFetcher.formData, {\n\t\t\tschema: ThemeFormSchema,\n\t\t})\n\n\t\tif (submission.status === 'success') {\n\t\t\treturn submission.value.theme\n\t\t}\n\t}\n}\n\n/**\n * @returns the user's theme preference, or the client hint theme if the user\n * has not set a preference.\n */\nexport function useTheme() {\n\tconst hints = useHints()\n\tconst requestInfo = useRequestInfo()\n\tconst optimisticMode = useOptimisticThemeMode()\n\tif (optimisticMode) {\n\t\treturn optimisticMode === 'system' ? hints.theme : optimisticMode\n\t}\n\treturn requestInfo.userPrefs.theme ?? hints.theme\n}\n\nexport function useOptionalTheme() {\n\tconst optionalHints = useOptionalHints()\n\tconst optionalRequestInfo = useOptionalRequestInfo()\n\tconst optimisticMode = useOptimisticThemeMode()\n\tif (optimisticMode) {\n\t\treturn optimisticMode === 'system' ? optionalHints?.theme : optimisticMode\n\t}\n\treturn optionalRequestInfo?.userPrefs.theme ?? optionalHints?.theme\n}\n","import \"C:/Users/ehags6/Sites/bsc/2025-26/epic-news-2026/app/styles/tailwind.css?transform-only\";export default \"__VITE_CSS_URL__433a2f55736572732f6568616773362f53697465732f6273632f323032352d32362f657069632d6e6577732d323032362f6170702f7374796c65732f7461696c77696e642e6373733f7472616e73666f726d2d6f6e6c79__\"","import fs from 'node:fs'\nimport path from 'node:path'\nimport { DatabaseSync } from 'node:sqlite'\nimport {\n\tcachified as baseCachified,\n\tverboseReporter,\n\tmergeReporters,\n\ttype CacheEntry,\n\ttype Cache as CachifiedCache,\n\ttype CachifiedOptions,\n\ttype Cache,\n\ttotalTtl,\n\ttype CreateReporter,\n} from '@epic-web/cachified'\nimport { remember } from '@epic-web/remember'\nimport { LRUCache } from 'lru-cache'\nimport { z } from 'zod'\nimport { cachifiedTimingReporter, type Timings } from './timing.server.ts'\n\nconst CACHE_DATABASE_PATH = process.env.CACHE_DATABASE_PATH\n\nconst cacheDb = remember('cacheDb', createDatabase)\n\nfunction createDatabase(tryAgain = true): DatabaseSync {\n\tconst parentDir = path.dirname(CACHE_DATABASE_PATH)\n\tfs.mkdirSync(parentDir, { recursive: true })\n\n\tconst db = new DatabaseSync(CACHE_DATABASE_PATH)\n\n\ttry {\n\t\t// create cache table with metadata JSON column and value JSON column if it does not exist already\n\t\tdb.exec(`\n\t\t\tCREATE TABLE IF NOT EXISTS cache (\n\t\t\t\tkey TEXT PRIMARY KEY,\n\t\t\t\tmetadata TEXT,\n\t\t\t\tvalue TEXT\n\t\t\t)\n\t\t`)\n\t} catch (error: unknown) {\n\t\tfs.unlinkSync(CACHE_DATABASE_PATH)\n\t\tif (tryAgain) {\n\t\t\tconsole.error(\n\t\t\t\t`Error creating cache database, deleting the file at \"${CACHE_DATABASE_PATH}\" and trying again...`,\n\t\t\t)\n\t\t\treturn createDatabase(false)\n\t\t}\n\t\tthrow error\n\t}\n\n\treturn db\n}\n\nconst lru = remember(\n\t'lru-cache',\n\t() => new LRUCache<string, CacheEntry<unknown>>({ max: 5000 }),\n)\n\nexport const lruCache = {\n\tname: 'app-memory-cache',\n\tset: (key, value) => {\n\t\tconst ttl = totalTtl(value?.metadata)\n\t\tlru.set(key, value, {\n\t\t\tttl: ttl === Infinity ? undefined : ttl,\n\t\t\tstart: value?.metadata?.createdTime,\n\t\t})\n\t\treturn value\n\t},\n\tget: (key) => lru.get(key),\n\tdelete: (key) => lru.delete(key),\n} satisfies Cache\n\nconst isBuffer = (obj: unknown): obj is Buffer =>\n\tBuffer.isBuffer(obj) || obj instanceof Uint8Array\n\nfunction bufferReplacer(_key: string, value: unknown) {\n\tif (isBuffer(value)) {\n\t\treturn {\n\t\t\t__isBuffer: true,\n\t\t\tdata: value.toString('base64'),\n\t\t}\n\t}\n\treturn value\n}\n\nfunction bufferReviver(_key: string, value: unknown) {\n\tif (\n\t\tvalue &&\n\t\ttypeof value === 'object' &&\n\t\t'__isBuffer' in value &&\n\t\t(value as any).data\n\t) {\n\t\treturn Buffer.from((value as any).data, 'base64')\n\t}\n\treturn value\n}\n\nconst cacheEntrySchema = z.object({\n\tmetadata: z.object({\n\t\tcreatedTime: z.number(),\n\t\tttl: z.number().nullable().optional(),\n\t\tswr: z.number().nullable().optional(),\n\t}),\n\tvalue: z.unknown(),\n})\nconst cacheQueryResultSchema = z.object({\n\tmetadata: z.string(),\n\tvalue: z.string(),\n})\n\nconst getStatement = cacheDb.prepare(\n\t'SELECT value, metadata FROM cache WHERE key = ?',\n)\nconst setStatement = cacheDb.prepare(\n\t'INSERT OR REPLACE INTO cache (key, value, metadata) VALUES (?, ?, ?)',\n)\nconst deleteStatement = cacheDb.prepare('DELETE FROM cache WHERE key = ?')\nconst getAllKeysStatement = cacheDb.prepare('SELECT key FROM cache LIMIT ?')\nconst searchKeysStatement = cacheDb.prepare(\n\t'SELECT key FROM cache WHERE key LIKE ? LIMIT ?',\n)\n\nexport const cache: CachifiedCache = {\n\tname: 'SQLite cache',\n\tasync get(key) {\n\t\tconst result = getStatement.get(key)\n\t\tconst parseResult = cacheQueryResultSchema.safeParse(result)\n\t\tif (!parseResult.success) return null\n\n\t\tconst parsedEntry = cacheEntrySchema.safeParse({\n\t\t\tmetadata: JSON.parse(parseResult.data.metadata),\n\t\t\tvalue: JSON.parse(parseResult.data.value, bufferReviver),\n\t\t})\n\t\tif (!parsedEntry.success) return null\n\t\tconst { metadata, value } = parsedEntry.data\n\t\tif (!value) return null\n\t\treturn { metadata, value }\n\t},\n\tasync set(key, entry) {\n\t\tconst value = JSON.stringify(entry.value, bufferReplacer)\n\t\tsetStatement.run(key, value, JSON.stringify(entry.metadata))\n\t},\n\tasync delete(key) {\n\t\tdeleteStatement.run(key)\n\t},\n}\n\nexport async function getAllCacheKeys(limit: number) {\n\treturn {\n\t\tsqlite: getAllKeysStatement\n\t\t\t.all(limit)\n\t\t\t.map((row) => (row as { key: string }).key),\n\t\tlru: [...lru.keys()],\n\t}\n}\n\nexport async function searchCacheKeys(search: string, limit: number) {\n\treturn {\n\t\tsqlite: searchKeysStatement\n\t\t\t.all(`%${search}%`, limit)\n\t\t\t.map((row) => (row as { key: string }).key),\n\t\tlru: [...lru.keys()].filter((key) => key.includes(search)),\n\t}\n}\n\nexport async function cachified<Value>(\n\t{\n\t\ttimings,\n\t\t...options\n\t}: CachifiedOptions<Value> & {\n\t\ttimings?: Timings\n\t},\n\treporter: CreateReporter<Value> = verboseReporter<Value>(),\n): Promise<Value> {\n\treturn baseCachified(\n\t\toptions,\n\t\tmergeReporters(cachifiedTimingReporter(timings), reporter),\n\t)\n}\n","export const MOCK_CODE_GITHUB = 'MOCK_CODE_GITHUB_KODY'\n\nexport const MOCK_CODE_GITHUB_HEADER = 'x-mock-code-github'\n","import { SetCookie } from '@mjackson/headers'\nimport { createId as cuid } from '@paralleldrive/cuid2'\nimport { redirect } from 'react-router'\nimport { GitHubStrategy } from 'remix-auth-github'\nimport { z } from 'zod'\nimport { cache, cachified } from '../cache.server.ts'\nimport { type Timings } from '../timing.server.ts'\nimport { MOCK_CODE_GITHUB_HEADER, MOCK_CODE_GITHUB } from './constants.ts'\nimport { type AuthProvider } from './provider.ts'\n\nconst GitHubUserSchema = z.object({ login: z.string() })\nconst GitHubUserParseResult = z\n\t.object({\n\t\tsuccess: z.literal(true),\n\t\tdata: GitHubUserSchema,\n\t})\n\t.or(\n\t\tz.object({\n\t\t\tsuccess: z.literal(false),\n\t\t}),\n\t)\n\nconst shouldMock =\n\tprocess.env.GITHUB_CLIENT_ID?.startsWith('MOCK_') ||\n\tprocess.env.NODE_ENV === 'test'\n\nconst GitHubEmailSchema = z.object({\n\temail: z.string(),\n\tverified: z.boolean(),\n\tprimary: z.boolean(),\n\tvisibility: z.string().nullable(),\n})\n\nconst GitHubEmailsResponseSchema = z.array(GitHubEmailSchema)\n\nconst GitHubUserResponseSchema = z.object({\n\tlogin: z.string(),\n\tid: z.number().or(z.string()),\n\tname: z.string().optional(),\n\tavatar_url: z.string().optional(),\n})\n\nexport class GitHubProvider implements AuthProvider {\n\tgetAuthStrategy() {\n\t\tif (\n\t\t\t!process.env.GITHUB_CLIENT_ID ||\n\t\t\t!process.env.GITHUB_CLIENT_SECRET ||\n\t\t\t!process.env.GITHUB_REDIRECT_URI\n\t\t) {\n\t\t\tconsole.log(\n\t\t\t\t'GitHub OAuth strategy not available because environment variables are not set',\n\t\t\t)\n\t\t\treturn null\n\t\t}\n\t\treturn new GitHubStrategy(\n\t\t\t{\n\t\t\t\tclientId: process.env.GITHUB_CLIENT_ID,\n\t\t\t\tclientSecret: process.env.GITHUB_CLIENT_SECRET,\n\t\t\t\tredirectURI: process.env.GITHUB_REDIRECT_URI,\n\t\t\t},\n\t\t\tasync ({ tokens }) => {\n\t\t\t\t// we need to fetch the user and the emails separately, this is a change in remix-auth-github\n\t\t\t\t// from the previous version that supported fetching both in one call\n\t\t\t\tconst userResponse = await fetch('https://api.github.com/user', {\n\t\t\t\t\theaders: {\n\t\t\t\t\t\tAccept: 'application/vnd.github+json',\n\t\t\t\t\t\tAuthorization: `Bearer ${tokens.accessToken()}`,\n\t\t\t\t\t\t'X-GitHub-Api-Version': '2022-11-28',\n\t\t\t\t\t},\n\t\t\t\t})\n\t\t\t\tconst rawUser = await userResponse.json()\n\t\t\t\tconst user = GitHubUserResponseSchema.parse(rawUser)\n\n\t\t\t\tconst emailsResponse = await fetch(\n\t\t\t\t\t'https://api.github.com/user/emails',\n\t\t\t\t\t{\n\t\t\t\t\t\theaders: {\n\t\t\t\t\t\t\tAccept: 'application/vnd.github+json',\n\t\t\t\t\t\t\tAuthorization: `Bearer ${tokens.accessToken()}`,\n\t\t\t\t\t\t\t'X-GitHub-Api-Version': '2022-11-28',\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t)\n\t\t\t\tconst rawEmails = await emailsResponse.json()\n\t\t\t\tconst emails = GitHubEmailsResponseSchema.parse(rawEmails)\n\t\t\t\tconst email = emails.find((e) => e.primary)?.email\n\t\t\t\tif (!email) {\n\t\t\t\t\tthrow new Error('Email not found')\n\t\t\t\t}\n\n\t\t\t\treturn {\n\t\t\t\t\tid: user.id,\n\t\t\t\t\temail,\n\t\t\t\t\tname: user.name,\n\t\t\t\t\tusername: user.login,\n\t\t\t\t\timageUrl: user.avatar_url,\n\t\t\t\t}\n\t\t\t},\n\t\t)\n\t}\n\n\tasync resolveConnectionData(\n\t\tproviderId: string,\n\t\t{ timings }: { timings?: Timings } = {},\n\t) {\n\t\tconst result = await cachified({\n\t\t\tkey: `connection-data:github:${providerId}`,\n\t\t\tcache,\n\t\t\ttimings,\n\t\t\tttl: 1000 * 60,\n\t\t\tswr: 1000 * 60 * 60 * 24 * 7,\n\t\t\tasync getFreshValue(context) {\n\t\t\t\tconst response = await fetch(\n\t\t\t\t\t`https://api.github.com/user/${providerId}`,\n\t\t\t\t\t{ headers: { Authorization: `token ${process.env.GITHUB_TOKEN}` } },\n\t\t\t\t)\n\t\t\t\tconst rawJson = await response.json()\n\t\t\t\tconst result = GitHubUserSchema.safeParse(rawJson)\n\t\t\t\tif (!result.success) {\n\t\t\t\t\t// if it was unsuccessful, then we should kick it out of the cache\n\t\t\t\t\t// asap and try again.\n\t\t\t\t\tcontext.metadata.ttl = 0\n\t\t\t\t}\n\t\t\t\treturn result\n\t\t\t},\n\t\t\tcheckValue: GitHubUserParseResult,\n\t\t})\n\t\treturn {\n\t\t\tdisplayName: result.success ? result.data.login : 'Unknown',\n\t\t\tlink: result.success ? `https://github.com/${result.data.login}` : null,\n\t\t} as const\n\t}\n\n\tasync handleMockAction(request: Request) {\n\t\tif (!shouldMock) return\n\n\t\tconst state = cuid()\n\t\t// allows us to inject a code when running e2e tests,\n\t\t// but falls back to a pre-defined üê® constant\n\t\tconst code =\n\t\t\trequest.headers.get(MOCK_CODE_GITHUB_HEADER) || MOCK_CODE_GITHUB\n\t\tconst searchParams = new URLSearchParams({ code, state })\n\t\tlet cookie = new SetCookie({\n\t\t\tname: 'github',\n\t\t\tvalue: searchParams.toString(),\n\t\t\tpath: '/',\n\t\t\tsameSite: 'Lax',\n\t\t\thttpOnly: true,\n\t\t\tmaxAge: 60 * 10,\n\t\t\tsecure: process.env.NODE_ENV === 'production' || undefined,\n\t\t})\n\t\tthrow redirect(`/auth/github/callback?${searchParams}`, {\n\t\t\theaders: {\n\t\t\t\t'Set-Cookie': cookie.toString(),\n\t\t\t},\n\t\t})\n\t}\n}\n","// import { createCookieSessionStorage } from 'react-router'\nimport { type ProviderName } from './connections.tsx'\nimport { GitHubProvider } from './providers/github.server.ts'\nimport { type AuthProvider } from './providers/provider.ts'\nimport { type Timings } from './timing.server.ts'\n\nexport const providers: Record<ProviderName, AuthProvider> = {\n\tgithub: new GitHubProvider(),\n}\n\nexport function handleMockAction(providerName: ProviderName, request: Request) {\n\treturn providers[providerName].handleMockAction(request)\n}\n\nexport function resolveConnectionData(\n\tproviderName: ProviderName,\n\tproviderId: string,\n\toptions?: { timings?: Timings },\n) {\n\treturn providers[providerName].resolveConnectionData(providerId, options)\n}\n","import { styleText } from 'node:util'\nimport { remember } from '@epic-web/remember'\n// Changed import due to issue: https://github.com/remix-run/react-router/pull/12644\nimport { PrismaClient } from '@prisma/client/index.js'\n\nexport const prisma = remember('prisma', () => {\n\t// NOTE: if you change anything in this function you'll need to restart\n\t// the dev server to see your changes.\n\n\t// Feel free to change this log threshold to something that makes sense for you\n\tconst logThreshold = 20\n\n\tconst client = new PrismaClient({\n\t\tlog: [\n\t\t\t{ level: 'query', emit: 'event' },\n\t\t\t{ level: 'error', emit: 'stdout' },\n\t\t\t{ level: 'warn', emit: 'stdout' },\n\t\t],\n\t})\n\tclient.$on('query', async (e) => {\n\t\tif (e.duration < logThreshold) return\n\t\tconst color =\n\t\t\te.duration < logThreshold * 1.1\n\t\t\t\t? 'green'\n\t\t\t\t: e.duration < logThreshold * 1.2\n\t\t\t\t\t? 'blue'\n\t\t\t\t\t: e.duration < logThreshold * 1.3\n\t\t\t\t\t\t? 'yellow'\n\t\t\t\t\t\t: e.duration < logThreshold * 1.4\n\t\t\t\t\t\t\t? 'redBright'\n\t\t\t\t\t\t\t: 'red'\n\t\tconst dur = styleText(color, `${e.duration}ms`)\n\t\tconsole.info(`prisma:query - ${dur} - ${e.query}`)\n\t})\n\tvoid client.$connect()\n\treturn client\n})\n","import { createCookieSessionStorage } from 'react-router'\n\nexport const authSessionStorage = createCookieSessionStorage({\n\tcookie: {\n\t\tname: 'en_session',\n\t\tsameSite: 'lax', // CSRF protection is advised if changing to 'none'\n\t\tpath: '/',\n\t\thttpOnly: true,\n\t\tsecrets: process.env.SESSION_SECRET.split(','),\n\t\tsecure: process.env.NODE_ENV === 'production',\n\t},\n})\n\n// we have to do this because every time you commit the session you overwrite it\n// so we store the expiration time in the cookie and reset it every time we commit\nconst originalCommitSession = authSessionStorage.commitSession\n\nObject.defineProperty(authSessionStorage, 'commitSession', {\n\tvalue: async function commitSession(\n\t\t...args: Parameters<typeof originalCommitSession>\n\t) {\n\t\tconst [session, options] = args\n\t\tif (options?.expires) {\n\t\t\tsession.set('expires', options.expires)\n\t\t}\n\t\tif (options?.maxAge) {\n\t\t\tsession.set('expires', new Date(Date.now() + options.maxAge * 1000))\n\t\t}\n\t\tconst expires = session.has('expires')\n\t\t\t? new Date(session.get('expires'))\n\t\t\t: undefined\n\t\tconst setCookieHeader = await originalCommitSession(session, {\n\t\t\t...options,\n\t\t\texpires,\n\t\t})\n\t\treturn setCookieHeader\n\t},\n})\n","import { createHash, createHmac } from 'crypto'\nimport { type FileUpload } from '@mjackson/form-data-parser'\nimport { createId } from '@paralleldrive/cuid2'\n\nconst STORAGE_ENDPOINT = process.env.AWS_ENDPOINT_URL_S3\nconst STORAGE_BUCKET = process.env.BUCKET_NAME\nconst STORAGE_ACCESS_KEY = process.env.AWS_ACCESS_KEY_ID\nconst STORAGE_SECRET_KEY = process.env.AWS_SECRET_ACCESS_KEY\nconst STORAGE_REGION = process.env.AWS_REGION\n\nasync function uploadToStorage(file: File | FileUpload, key: string) {\n\tconst { url, headers } = getSignedPutRequestInfo(file, key)\n\n\tconst uploadResponse = await fetch(url, {\n\t\tmethod: 'PUT',\n\t\theaders,\n\t\tbody: file instanceof File ? file : file.stream(),\n\t})\n\n\tif (!uploadResponse.ok) {\n\t\tconst errorMessage = `Failed to upload file to storage. Server responded with ${uploadResponse.status}: ${uploadResponse.statusText}`\n\t\tconsole.error(errorMessage)\n\t\tthrow new Error(`Failed to upload object: ${key}`)\n\t}\n\n\treturn key\n}\n\nexport async function uploadProfileImage(\n\tuserId: string,\n\tfile: File | FileUpload,\n) {\n\tconst fileId = createId()\n\tconst fileExtension = file.name.split('.').pop() || ''\n\tconst timestamp = Date.now()\n\tconst key = `users/${userId}/profile-images/${timestamp}-${fileId}.${fileExtension}`\n\treturn uploadToStorage(file, key)\n}\n\nexport async function uploadNoteImage(\n\tuserId: string,\n\tnoteId: string,\n\tfile: File | FileUpload,\n) {\n\tconst fileId = createId()\n\tconst fileExtension = file.name.split('.').pop() || ''\n\tconst timestamp = Date.now()\n\tconst key = `users/${userId}/notes/${noteId}/images/${timestamp}-${fileId}.${fileExtension}`\n\treturn uploadToStorage(file, key)\n}\n\nfunction hmacSha256(key: string | Buffer, message: string) {\n\tconst hmac = createHmac('sha256', key)\n\thmac.update(message)\n\treturn hmac.digest()\n}\n\nfunction sha256(message: string) {\n\tconst hash = createHash('sha256')\n\thash.update(message)\n\treturn hash.digest('hex')\n}\n\nfunction getSignatureKey(\n\tkey: string,\n\tdateStamp: string,\n\tregionName: string,\n\tserviceName: string,\n) {\n\tconst kDate = hmacSha256(`AWS4${key}`, dateStamp)\n\tconst kRegion = hmacSha256(kDate, regionName)\n\tconst kService = hmacSha256(kRegion, serviceName)\n\tconst kSigning = hmacSha256(kService, 'aws4_request')\n\treturn kSigning\n}\n\nfunction getBaseSignedRequestInfo({\n\tmethod,\n\tkey,\n\tcontentType,\n\tuploadDate,\n}: {\n\tmethod: 'GET' | 'PUT'\n\tkey: string\n\tcontentType?: string\n\tuploadDate?: string\n}) {\n\tconst url = `${STORAGE_ENDPOINT}/${STORAGE_BUCKET}/${key}`\n\tconst endpoint = new URL(url)\n\n\t// Prepare date strings\n\tconst amzDate = new Date().toISOString().replace(/[:-]|\\.\\d{3}/g, '')\n\tconst dateStamp = amzDate.slice(0, 8)\n\n\t// Build headers array conditionally\n\tconst headers = [\n\t\t...(contentType ? [`content-type:${contentType}`] : []),\n\t\t`host:${endpoint.host}`,\n\t\t`x-amz-content-sha256:UNSIGNED-PAYLOAD`,\n\t\t`x-amz-date:${amzDate}`,\n\t\t...(uploadDate ? [`x-amz-meta-upload-date:${uploadDate}`] : []),\n\t]\n\n\tconst canonicalHeaders = headers.join('\\n') + '\\n'\n\tconst signedHeaders = headers.map((h) => h.split(':')[0]).join(';')\n\n\tconst canonicalRequest = [\n\t\tmethod,\n\t\t`/${STORAGE_BUCKET}/${key}`,\n\t\t'', // canonicalQueryString\n\t\tcanonicalHeaders,\n\t\tsignedHeaders,\n\t\t'UNSIGNED-PAYLOAD',\n\t].join('\\n')\n\n\t// Prepare string to sign\n\tconst algorithm = 'AWS4-HMAC-SHA256'\n\tconst credentialScope = `${dateStamp}/${STORAGE_REGION}/s3/aws4_request`\n\tconst stringToSign = [\n\t\talgorithm,\n\t\tamzDate,\n\t\tcredentialScope,\n\t\tsha256(canonicalRequest),\n\t].join('\\n')\n\n\t// Calculate signature\n\tconst signingKey = getSignatureKey(\n\t\tSTORAGE_SECRET_KEY,\n\t\tdateStamp,\n\t\tSTORAGE_REGION,\n\t\t's3',\n\t)\n\tconst signature = createHmac('sha256', signingKey)\n\t\t.update(stringToSign)\n\t\t.digest('hex')\n\n\tconst baseHeaders = {\n\t\t'X-Amz-Date': amzDate,\n\t\t'X-Amz-Content-SHA256': 'UNSIGNED-PAYLOAD',\n\t\tAuthorization: [\n\t\t\t`${algorithm} Credential=${STORAGE_ACCESS_KEY}/${credentialScope}`,\n\t\t\t`SignedHeaders=${signedHeaders}`,\n\t\t\t`Signature=${signature}`,\n\t\t].join(', '),\n\t}\n\n\treturn { url, baseHeaders }\n}\n\nfunction getSignedPutRequestInfo(file: File | FileUpload, key: string) {\n\tconst uploadDate = new Date().toISOString()\n\tconst { url, baseHeaders } = getBaseSignedRequestInfo({\n\t\tmethod: 'PUT',\n\t\tkey,\n\t\tcontentType: file.type,\n\t\tuploadDate,\n\t})\n\n\treturn {\n\t\turl,\n\t\theaders: {\n\t\t\t...baseHeaders,\n\t\t\t'Content-Type': file.type,\n\t\t\t'X-Amz-Meta-Upload-Date': uploadDate,\n\t\t},\n\t}\n}\n\nexport function getSignedGetRequestInfo(key: string) {\n\tconst { url, baseHeaders } = getBaseSignedRequestInfo({\n\t\tmethod: 'GET',\n\t\tkey,\n\t})\n\n\treturn {\n\t\turl,\n\t\theaders: baseHeaders,\n\t}\n}\n","import crypto from 'node:crypto'\nimport { type Connection, type Password, type User } from '@prisma/client'\nimport bcrypt from 'bcryptjs'\nimport { redirect } from 'react-router'\nimport { Authenticator } from 'remix-auth'\nimport { safeRedirect } from 'remix-utils/safe-redirect'\nimport { providers } from './connections.server.ts'\nimport { prisma } from './db.server.ts'\nimport { combineHeaders, downloadFile } from './misc.tsx'\nimport { type ProviderUser } from './providers/provider.ts'\nimport { authSessionStorage } from './session.server.ts'\nimport { uploadProfileImage } from './storage.server.ts'\n\nexport const SESSION_EXPIRATION_TIME = 1000 * 60 * 60 * 24 * 30\nexport const getSessionExpirationDate = () =>\n\tnew Date(Date.now() + SESSION_EXPIRATION_TIME)\n\nexport const sessionKey = 'sessionId'\n\nexport const authenticator = new Authenticator<ProviderUser>()\n\nfor (const [providerName, provider] of Object.entries(providers)) {\n\tconst strategy = provider.getAuthStrategy()\n\tif (strategy) {\n\t\tauthenticator.use(strategy, providerName)\n\t}\n}\n\nexport async function getUserId(request: Request) {\n\tconst authSession = await authSessionStorage.getSession(\n\t\trequest.headers.get('cookie'),\n\t)\n\tconst sessionId = authSession.get(sessionKey)\n\tif (!sessionId) return null\n\tconst session = await prisma.session.findUnique({\n\t\tselect: { userId: true },\n\t\twhere: { id: sessionId, expirationDate: { gt: new Date() } },\n\t})\n\tif (!session?.userId) {\n\t\tthrow redirect('/', {\n\t\t\theaders: {\n\t\t\t\t'set-cookie': await authSessionStorage.destroySession(authSession),\n\t\t\t},\n\t\t})\n\t}\n\treturn session.userId\n}\n\nexport async function requireUserId(\n\trequest: Request,\n\t{ redirectTo }: { redirectTo?: string | null } = {},\n) {\n\tconst userId = await getUserId(request)\n\tif (!userId) {\n\t\tconst requestUrl = new URL(request.url)\n\t\tredirectTo =\n\t\t\tredirectTo === null\n\t\t\t\t? null\n\t\t\t\t: (redirectTo ?? `${requestUrl.pathname}${requestUrl.search}`)\n\t\tconst loginParams = redirectTo ? new URLSearchParams({ redirectTo }) : null\n\t\tconst loginRedirect = ['/login', loginParams?.toString()]\n\t\t\t.filter(Boolean)\n\t\t\t.join('?')\n\t\tthrow redirect(loginRedirect)\n\t}\n\treturn userId\n}\n\nexport async function requireAnonymous(request: Request) {\n\tconst userId = await getUserId(request)\n\tif (userId) {\n\t\tthrow redirect('/')\n\t}\n}\n\nexport async function login({\n\tusername,\n\tpassword,\n}: {\n\tusername: User['username']\n\tpassword: string\n}) {\n\tconst user = await verifyUserPassword({ username }, password)\n\tif (!user) return null\n\tconst session = await prisma.session.create({\n\t\tselect: { id: true, expirationDate: true, userId: true },\n\t\tdata: {\n\t\t\texpirationDate: getSessionExpirationDate(),\n\t\t\tuserId: user.id,\n\t\t},\n\t})\n\treturn session\n}\n\nexport async function resetUserPassword({\n\tusername,\n\tpassword,\n}: {\n\tusername: User['username']\n\tpassword: string\n}) {\n\tconst hashedPassword = await getPasswordHash(password)\n\treturn prisma.user.update({\n\t\twhere: { username },\n\t\tdata: {\n\t\t\tpassword: {\n\t\t\t\tupdate: {\n\t\t\t\t\thash: hashedPassword,\n\t\t\t\t},\n\t\t\t},\n\t\t},\n\t})\n}\n\nexport async function signup({\n\temail,\n\tusername,\n\tpassword,\n\tname,\n}: {\n\temail: User['email']\n\tusername: User['username']\n\tname: User['name']\n\tpassword: string\n}) {\n\tconst hashedPassword = await getPasswordHash(password)\n\n\tconst session = await prisma.session.create({\n\t\tdata: {\n\t\t\texpirationDate: getSessionExpirationDate(),\n\t\t\tuser: {\n\t\t\t\tcreate: {\n\t\t\t\t\temail: email.toLowerCase(),\n\t\t\t\t\tusername: username.toLowerCase(),\n\t\t\t\t\tname,\n\t\t\t\t\troles: { connect: { name: 'user' } },\n\t\t\t\t\tpassword: {\n\t\t\t\t\t\tcreate: {\n\t\t\t\t\t\t\thash: hashedPassword,\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t},\n\t\t},\n\t\tselect: { id: true, expirationDate: true },\n\t})\n\n\treturn session\n}\n\nexport async function signupWithConnection({\n\temail,\n\tusername,\n\tname,\n\tproviderId,\n\tproviderName,\n\timageUrl,\n}: {\n\temail: User['email']\n\tusername: User['username']\n\tname: User['name']\n\tproviderId: Connection['providerId']\n\tproviderName: Connection['providerName']\n\timageUrl?: string\n}) {\n\tconst user = await prisma.user.create({\n\t\tdata: {\n\t\t\temail: email.toLowerCase(),\n\t\t\tusername: username.toLowerCase(),\n\t\t\tname,\n\t\t\troles: { connect: { name: 'user' } },\n\t\t\tconnections: { create: { providerId, providerName } },\n\t\t},\n\t\tselect: { id: true },\n\t})\n\n\tif (imageUrl) {\n\t\tconst imageFile = await downloadFile(imageUrl)\n\t\tawait prisma.user.update({\n\t\t\twhere: { id: user.id },\n\t\t\tdata: {\n\t\t\t\timage: {\n\t\t\t\t\tcreate: {\n\t\t\t\t\t\tobjectKey: await uploadProfileImage(user.id, imageFile),\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t},\n\t\t})\n\t}\n\n\t// Create and return the session\n\tconst session = await prisma.session.create({\n\t\tdata: {\n\t\t\texpirationDate: getSessionExpirationDate(),\n\t\t\tuserId: user.id,\n\t\t},\n\t\tselect: { id: true, expirationDate: true },\n\t})\n\n\treturn session\n}\n\nexport async function logout(\n\t{\n\t\trequest,\n\t\tredirectTo = '/',\n\t}: {\n\t\trequest: Request\n\t\tredirectTo?: string\n\t},\n\tresponseInit?: ResponseInit,\n) {\n\tconst authSession = await authSessionStorage.getSession(\n\t\trequest.headers.get('cookie'),\n\t)\n\tconst sessionId = authSession.get(sessionKey)\n\t// if this fails, we still need to delete the session from the user's browser\n\t// and it doesn't do any harm staying in the db anyway.\n\tif (sessionId) {\n\t\t// the .catch is important because that's what triggers the query.\n\t\t// learn more about PrismaPromise: https://www.prisma.io/docs/orm/reference/prisma-client-reference#prismapromise-behavior\n\t\tvoid prisma.session.deleteMany({ where: { id: sessionId } }).catch(() => {})\n\t}\n\tthrow redirect(safeRedirect(redirectTo), {\n\t\t...responseInit,\n\t\theaders: combineHeaders(\n\t\t\t{ 'set-cookie': await authSessionStorage.destroySession(authSession) },\n\t\t\tresponseInit?.headers,\n\t\t),\n\t})\n}\n\nexport async function getPasswordHash(password: string) {\n\tconst hash = await bcrypt.hash(password, 10)\n\treturn hash\n}\n\nexport async function verifyUserPassword(\n\twhere: Pick<User, 'username'> | Pick<User, 'id'>,\n\tpassword: Password['hash'],\n) {\n\tconst userWithPassword = await prisma.user.findUnique({\n\t\twhere,\n\t\tselect: { id: true, password: { select: { hash: true } } },\n\t})\n\n\tif (!userWithPassword || !userWithPassword.password) {\n\t\treturn null\n\t}\n\n\tconst isValid = await bcrypt.compare(password, userWithPassword.password.hash)\n\n\tif (!isValid) {\n\t\treturn null\n\t}\n\n\treturn { id: userWithPassword.id }\n}\n\nexport function getPasswordHashParts(password: string) {\n\tconst hash = crypto\n\t\t.createHash('sha1')\n\t\t.update(password, 'utf8')\n\t\t.digest('hex')\n\t\t.toUpperCase()\n\treturn [hash.slice(0, 5), hash.slice(5)] as const\n}\n\nexport async function checkIsCommonPassword(password: string) {\n\tconst [prefix, suffix] = getPasswordHashParts(password)\n\n\ttry {\n\t\tconst response = await fetch(\n\t\t\t`https://api.pwnedpasswords.com/range/${prefix}`,\n\t\t\t{ signal: AbortSignal.timeout(1000) },\n\t\t)\n\n\t\tif (!response.ok) return false\n\n\t\tconst data = await response.text()\n\t\treturn data.split(/\\r?\\n/).some((line) => {\n\t\t\tconst [hashSuffix, ignoredPrevalenceCount] = line.split(':')\n\t\t\treturn hashSuffix === suffix\n\t\t})\n\t} catch (error) {\n\t\tif (error instanceof DOMException && error.name === 'TimeoutError') {\n\t\t\tconsole.warn('Password check timed out')\n\t\t\treturn false\n\t\t}\n\n\t\tconsole.warn('Unknown error during password check', error)\n\t\treturn false\n\t}\n}\n","import { type CacheControlValue, parse, format } from '@tusbar/cache-control'\nimport { type HeadersArgs } from 'react-router'\n\n/**\n * A utility for handling route headers, merging common use-case headers.\n *\n * This function combines headers by:\n * 1. Forwarding headers from the route's loader or action.\n * 2. Inheriting headers from the parent.\n * 3. Falling back to parent headers (if any) when headers are missing.\n */\nexport function pipeHeaders({\n\tparentHeaders,\n\tloaderHeaders,\n\tactionHeaders,\n\terrorHeaders,\n}: HeadersArgs) {\n\tconst headers = new Headers()\n\n\t// get the one that's actually in use\n\tlet currentHeaders: Headers\n\tif (errorHeaders !== undefined) {\n\t\tcurrentHeaders = errorHeaders\n\t} else if (loaderHeaders.entries().next().done) {\n\t\tcurrentHeaders = actionHeaders\n\t} else {\n\t\tcurrentHeaders = loaderHeaders\n\t}\n\n\t// take in useful headers route loader/action\n\t// pass this point currentHeaders can be ignored\n\tconst forwardHeaders = ['Cache-Control', 'Vary', 'Server-Timing']\n\tfor (const headerName of forwardHeaders) {\n\t\tconst header = currentHeaders.get(headerName)\n\t\tif (header) {\n\t\t\theaders.set(headerName, header)\n\t\t}\n\t}\n\n\theaders.set(\n\t\t'Cache-Control',\n\t\tgetConservativeCacheControl(\n\t\t\tparentHeaders.get('Cache-Control'),\n\t\t\theaders.get('Cache-Control'),\n\t\t),\n\t)\n\n\t// append useful parent headers\n\tconst inheritHeaders = ['Vary', 'Server-Timing']\n\tfor (const headerName of inheritHeaders) {\n\t\tconst header = parentHeaders.get(headerName)\n\t\tif (header) {\n\t\t\theaders.append(headerName, header)\n\t\t}\n\t}\n\n\t// fallback to parent headers if loader don't have\n\tconst fallbackHeaders = ['Cache-Control', 'Vary']\n\tfor (const headerName of fallbackHeaders) {\n\t\tif (headers.has(headerName)) {\n\t\t\tcontinue\n\t\t}\n\t\tconst fallbackHeader = parentHeaders.get(headerName)\n\t\tif (fallbackHeader) {\n\t\t\theaders.set(headerName, fallbackHeader)\n\t\t}\n\t}\n\n\treturn headers\n}\n\n/**\n * Given multiple Cache-Control headers, merge them and get the most conservative one.\n */\nexport function getConservativeCacheControl(\n\t...cacheControlHeaders: Array<string | null>\n): string {\n\treturn format(\n\t\tcacheControlHeaders\n\t\t\t.filter(Boolean)\n\t\t\t.map((header) => parse(header))\n\t\t\t.reduce<CacheControlValue>((acc, current) => {\n\t\t\t\tfor (const key in current) {\n\t\t\t\t\tconst directive = key as keyof Required<CacheControlValue> // keyof CacheControl includes functions\n\n\t\t\t\t\tconst currentValue = current[directive]\n\n\t\t\t\t\tswitch (typeof currentValue) {\n\t\t\t\t\t\tcase 'boolean': {\n\t\t\t\t\t\t\tif (currentValue) {\n\t\t\t\t\t\t\t\tacc[directive] = true as any\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tbreak\n\t\t\t\t\t\t}\n\t\t\t\t\t\tcase 'number': {\n\t\t\t\t\t\t\tconst accValue = acc[directive] as number | undefined\n\n\t\t\t\t\t\t\tif (accValue === undefined) {\n\t\t\t\t\t\t\t\tacc[directive] = currentValue as any\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tconst result = Math.min(accValue, currentValue)\n\t\t\t\t\t\t\t\tacc[directive] = result as any\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tbreak\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\treturn acc\n\t\t\t}, {}),\n\t)\n}\n","import { Honeypot, SpamError } from 'remix-utils/honeypot/server'\n\nexport const honeypot = new Honeypot({\n\tvalidFromFieldName: process.env.NODE_ENV === 'test' ? null : undefined,\n\tencryptionSeed: process.env.HONEYPOT_SECRET,\n})\n\nexport async function checkHoneypot(formData: FormData) {\n\ttry {\n\t\tawait honeypot.check(formData)\n\t} catch (error) {\n\t\tif (error instanceof SpamError) {\n\t\t\tthrow new Response('Form not submitted properly', { status: 400 })\n\t\t}\n\t\tthrow error\n\t}\n}\n","import { createId as cuid } from '@paralleldrive/cuid2'\nimport { createCookieSessionStorage, redirect } from 'react-router'\nimport { z } from 'zod'\nimport { combineHeaders } from './misc.tsx'\n\nexport const toastKey = 'toast'\n\nconst ToastSchema = z.object({\n\tdescription: z.string(),\n\tid: z.string().default(() => cuid()),\n\ttitle: z.string().optional(),\n\ttype: z.enum(['message', 'success', 'error']).default('message'),\n})\n\nexport type Toast = z.infer<typeof ToastSchema>\nexport type ToastInput = z.input<typeof ToastSchema>\n\nexport const toastSessionStorage = createCookieSessionStorage({\n\tcookie: {\n\t\tname: 'en_toast',\n\t\tsameSite: 'lax',\n\t\tpath: '/',\n\t\thttpOnly: true,\n\t\tsecrets: process.env.SESSION_SECRET.split(','),\n\t\tsecure: process.env.NODE_ENV === 'production',\n\t},\n})\n\nexport async function redirectWithToast(\n\turl: string,\n\ttoast: ToastInput,\n\tinit?: ResponseInit,\n) {\n\treturn redirect(url, {\n\t\t...init,\n\t\theaders: combineHeaders(init?.headers, await createToastHeaders(toast)),\n\t})\n}\n\nexport async function createToastHeaders(toastInput: ToastInput) {\n\tconst session = await toastSessionStorage.getSession()\n\tconst toast = ToastSchema.parse(toastInput)\n\tsession.flash(toastKey, toast)\n\tconst cookie = await toastSessionStorage.commitSession(session)\n\treturn new Headers({ 'set-cookie': cookie })\n}\n\nexport async function getToast(request: Request) {\n\tconst session = await toastSessionStorage.getSession(\n\t\trequest.headers.get('cookie'),\n\t)\n\tconst result = ToastSchema.safeParse(session.get(toastKey))\n\tconst toast = result.success ? result.data : null\n\treturn {\n\t\ttoast,\n\t\theaders: toast\n\t\t\t? new Headers({\n\t\t\t\t\t'set-cookie': await toastSessionStorage.destroySession(session),\n\t\t\t\t})\n\t\t\t: null,\n\t}\n}\n","import { OpenImgContextProvider } from 'openimg/react'\nimport {\n\tdata,\n\tLink,\n\tLinks,\n\tMeta,\n\tOutlet,\n\tScripts,\n\tScrollRestoration,\n\tuseLoaderData,\n\tuseMatches,\n} from 'react-router'\nimport { HoneypotProvider } from 'remix-utils/honeypot/react'\nimport { type Route } from './+types/root.ts'\nimport appleTouchIconAssetUrl from './assets/favicons/apple-touch-icon.png'\nimport faviconAssetUrl from './assets/favicons/favicon.svg'\nimport { GeneralErrorBoundary } from './components/error-boundary.tsx'\nimport { EpicProgress } from './components/progress-bar.tsx'\nimport { SearchBar } from './components/search-bar.tsx'\nimport { useToast } from './components/toaster.tsx'\nimport { Button } from './components/ui/button.tsx'\nimport { href as iconsHref } from './components/ui/icon.tsx'\nimport { EpicToaster } from './components/ui/sonner.tsx'\nimport { UserDropdown } from './components/user-dropdown.tsx'\nimport {\n\tThemeSwitch,\n\tuseOptionalTheme,\n\tuseTheme,\n} from './routes/resources+/theme-switch.tsx'\nimport tailwindStyleSheetUrl from './styles/tailwind.css?url'\nimport { getUserId, logout } from './utils/auth.server.ts'\nimport { ClientHintCheck, getHints } from './utils/client-hints.tsx'\nimport { prisma } from './utils/db.server.ts'\nimport { getEnv } from './utils/env.server.ts'\nimport { pipeHeaders } from './utils/headers.server.ts'\nimport { honeypot } from './utils/honeypot.server.ts'\nimport { combineHeaders, getDomainUrl, getImgSrc } from './utils/misc.tsx'\nimport { useNonce } from './utils/nonce-provider.ts'\nimport { type Theme, getTheme } from './utils/theme.server.ts'\nimport { makeTimings, time } from './utils/timing.server.ts'\nimport { getToast } from './utils/toast.server.ts'\nimport { useOptionalUser } from './utils/user.ts'\n\nexport const links: Route.LinksFunction = () => {\n\treturn [\n\t\t// Preload svg sprite as a resource to avoid render blocking\n\t\t{ rel: 'preload', href: iconsHref, as: 'image' },\n\t\t{\n\t\t\trel: 'icon',\n\t\t\thref: '/favicon.ico',\n\t\t\tsizes: '48x48',\n\t\t},\n\t\t{ rel: 'icon', type: 'image/svg+xml', href: faviconAssetUrl },\n\t\t{ rel: 'apple-touch-icon', href: appleTouchIconAssetUrl },\n\t\t{\n\t\t\trel: 'manifest',\n\t\t\thref: '/site.webmanifest',\n\t\t\tcrossOrigin: 'use-credentials',\n\t\t} as const, // necessary to make typescript happy\n\t\t{ rel: 'stylesheet', href: tailwindStyleSheetUrl },\n\t].filter(Boolean)\n}\n\nexport const meta: Route.MetaFunction = ({ data }) => {\n\treturn [\n\t\t{ title: data ? 'Epic Notes' : 'Error | Epic Notes' },\n\t\t{ name: 'description', content: `Your own captain's log` },\n\t]\n}\n\nexport async function loader({ request }: Route.LoaderArgs) {\n\tconst timings = makeTimings('root loader')\n\tconst userId = await time(() => getUserId(request), {\n\t\ttimings,\n\t\ttype: 'getUserId',\n\t\tdesc: 'getUserId in root',\n\t})\n\n\tconst user = userId\n\t\t? await time(\n\t\t\t\t() =>\n\t\t\t\t\tprisma.user.findUnique({\n\t\t\t\t\t\tselect: {\n\t\t\t\t\t\t\tid: true,\n\t\t\t\t\t\t\tname: true,\n\t\t\t\t\t\t\tusername: true,\n\t\t\t\t\t\t\timage: { select: { objectKey: true } },\n\t\t\t\t\t\t\troles: {\n\t\t\t\t\t\t\t\tselect: {\n\t\t\t\t\t\t\t\t\tname: true,\n\t\t\t\t\t\t\t\t\tpermissions: {\n\t\t\t\t\t\t\t\t\t\tselect: { entity: true, action: true, access: true },\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t},\n\t\t\t\t\t\twhere: { id: userId },\n\t\t\t\t\t}),\n\t\t\t\t{ timings, type: 'find user', desc: 'find user in root' },\n\t\t\t)\n\t\t: null\n\tif (userId && !user) {\n\t\tconsole.info('something weird happened')\n\t\t// something weird happened... The user is authenticated but we can't find\n\t\t// them in the database. Maybe they were deleted? Let's log them out.\n\t\tawait logout({ request, redirectTo: '/' })\n\t}\n\tconst { toast, headers: toastHeaders } = await getToast(request)\n\tconst honeyProps = await honeypot.getInputProps()\n\n\treturn data(\n\t\t{\n\t\t\tuser,\n\t\t\trequestInfo: {\n\t\t\t\thints: getHints(request),\n\t\t\t\torigin: getDomainUrl(request),\n\t\t\t\tpath: new URL(request.url).pathname,\n\t\t\t\tuserPrefs: {\n\t\t\t\t\ttheme: getTheme(request),\n\t\t\t\t},\n\t\t\t},\n\t\t\tENV: getEnv(),\n\t\t\ttoast,\n\t\t\thoneyProps,\n\t\t},\n\t\t{\n\t\t\theaders: combineHeaders(\n\t\t\t\t{ 'Server-Timing': timings.toString() },\n\t\t\t\ttoastHeaders,\n\t\t\t),\n\t\t},\n\t)\n}\n\nexport const headers: Route.HeadersFunction = pipeHeaders\n\nfunction Document({\n\tchildren,\n\tnonce,\n\ttheme = 'light',\n\tenv = {},\n}: {\n\tchildren: React.ReactNode\n\tnonce: string\n\ttheme?: Theme\n\tenv?: Record<string, string | undefined>\n}) {\n\tconst allowIndexing = ENV.ALLOW_INDEXING !== 'false'\n\treturn (\n\t\t<html lang=\"en\" className={`${theme} h-full overflow-x-hidden`}>\n\t\t\t<head>\n\t\t\t\t<ClientHintCheck nonce={nonce} />\n\t\t\t\t<Meta />\n\t\t\t\t<meta charSet=\"utf-8\" />\n\t\t\t\t<meta name=\"viewport\" content=\"width=device-width,initial-scale=1\" />\n\t\t\t\t{allowIndexing ? null : (\n\t\t\t\t\t<meta name=\"robots\" content=\"noindex, nofollow\" />\n\t\t\t\t)}\n\t\t\t\t<Links />\n\t\t\t</head>\n\t\t\t<body className=\"bg-background text-foreground\">\n\t\t\t\t{children}\n\t\t\t\t<script\n\t\t\t\t\tnonce={nonce}\n\t\t\t\t\tdangerouslySetInnerHTML={{\n\t\t\t\t\t\t__html: `window.ENV = ${JSON.stringify(env)}`,\n\t\t\t\t\t}}\n\t\t\t\t/>\n\t\t\t\t<ScrollRestoration nonce={nonce} />\n\t\t\t\t<Scripts nonce={nonce} />\n\t\t\t</body>\n\t\t</html>\n\t)\n}\n\nexport function Layout({ children }: { children: React.ReactNode }) {\n\t// if there was an error running the loader, data could be missing\n\tconst data = useLoaderData<typeof loader | null>()\n\tconst nonce = useNonce()\n\tconst theme = useOptionalTheme()\n\treturn (\n\t\t<Document nonce={nonce} theme={theme} env={data?.ENV}>\n\t\t\t{children}\n\t\t</Document>\n\t)\n}\n\nfunction App() {\n\tconst data = useLoaderData<typeof loader>()\n\tconst user = useOptionalUser()\n\tconst theme = useTheme()\n\tconst matches = useMatches()\n\tconst isOnSearchPage = matches.find((m) => m.id === 'routes/users+/index')\n\tconst searchBar = isOnSearchPage ? null : <SearchBar status=\"idle\" />\n\tuseToast(data.toast)\n\n\treturn (\n\t\t<OpenImgContextProvider\n\t\t\toptimizerEndpoint=\"/resources/images\"\n\t\t\tgetSrc={getImgSrc}\n\t\t>\n\t\t\t<div className=\"flex min-h-screen flex-col justify-between\">\n\t\t\t\t<header className=\"container py-6\">\n\t\t\t\t\t<nav className=\"flex flex-wrap items-center justify-between gap-4 sm:flex-nowrap md:gap-8\">\n\t\t\t\t\t\t<Logo />\n\t\t\t\t\t\t<div className=\"ml-auto hidden max-w-sm flex-1 sm:block\">\n\t\t\t\t\t\t\t{searchBar}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div className=\"flex items-center gap-10\">\n\t\t\t\t\t\t\t{user ? (\n\t\t\t\t\t\t\t\t<UserDropdown />\n\t\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t\t<Button asChild variant=\"default\" size=\"lg\">\n\t\t\t\t\t\t\t\t\t<Link to=\"/login\">Log In</Link>\n\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div className=\"block w-full sm:hidden\">{searchBar}</div>\n\t\t\t\t\t</nav>\n\t\t\t\t</header>\n\n\t\t\t\t<div className=\"flex flex-1 flex-col\">\n\t\t\t\t\t<Outlet />\n\t\t\t\t</div>\n\n\t\t\t\t<div className=\"container flex justify-between pb-5\">\n\t\t\t\t\t<Logo />\n\t\t\t\t\t<ThemeSwitch userPreference={data.requestInfo.userPrefs.theme} />\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t<EpicToaster closeButton position=\"top-center\" theme={theme} />\n\t\t\t<EpicProgress />\n\t\t</OpenImgContextProvider>\n\t)\n}\n\nfunction Logo() {\n\treturn (\n\t\t<Link to=\"/\" className=\"group grid leading-snug\">\n\t\t\t<span className=\"font-light transition group-hover:-translate-x-1\">\n\t\t\t\tepic\n\t\t\t</span>\n\t\t\t<span className=\"font-bold transition group-hover:translate-x-1\">\n\t\t\t\tnotes\n\t\t\t</span>\n\t\t</Link>\n\t)\n}\n\nfunction AppWithProviders() {\n\tconst data = useLoaderData<typeof loader>()\n\treturn (\n\t\t<HoneypotProvider {...data.honeyProps}>\n\t\t\t<App />\n\t\t</HoneypotProvider>\n\t)\n}\n\nexport default AppWithProviders\n\n// this is a last resort error boundary. There's not much useful information we\n// can offer at this level.\nexport const ErrorBoundary = GeneralErrorBoundary\n","// This is called a \"splat route\" and as it's in the root `/app/routes/`\n// directory, it's a catchall. If no other routes match, this one will and we\n// can know that the user is hitting a URL that doesn't exist. By throwing a\n// 404 from the loader, we can force the error boundary to render which will\n// ensure the user gets the right status code and we can display a nicer error\n// message for them than the Remix and/or browser default.\n\nimport { Link, useLocation } from 'react-router'\nimport { GeneralErrorBoundary } from '#app/components/error-boundary.tsx'\nimport { Icon } from '#app/components/ui/icon.tsx'\n\nexport function loader() {\n\tthrow new Response('Not found', { status: 404 })\n}\n\nexport function action() {\n\tthrow new Response('Not found', { status: 404 })\n}\n\nexport default function NotFound() {\n\t// due to the loader, this component will never be rendered, but we'll return\n\t// the error boundary just in case.\n\treturn <ErrorBoundary />\n}\n\nexport function ErrorBoundary() {\n\tconst location = useLocation()\n\treturn (\n\t\t<GeneralErrorBoundary\n\t\t\tstatusHandlers={{\n\t\t\t\t404: () => (\n\t\t\t\t\t<div className=\"flex flex-col gap-6\">\n\t\t\t\t\t\t<div className=\"flex flex-col gap-3\">\n\t\t\t\t\t\t\t<h1>We can't find this page:</h1>\n\t\t\t\t\t\t\t<pre className=\"text-body-lg break-all whitespace-pre-wrap\">\n\t\t\t\t\t\t\t\t{location.pathname}\n\t\t\t\t\t\t\t</pre>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<Link to=\"/\" className=\"text-body-md underline\">\n\t\t\t\t\t\t\t<Icon name=\"arrow-left\">Back to home</Icon>\n\t\t\t\t\t\t</Link>\n\t\t\t\t\t</div>\n\t\t\t\t),\n\t\t\t}}\n\t\t/>\n\t)\n}\n","import * as CheckboxPrimitive from '@radix-ui/react-checkbox'\nimport * as React from 'react'\n\nimport { cn } from '#app/utils/misc.tsx'\n\nexport type CheckboxProps = Omit<\n\tReact.ComponentPropsWithoutRef<typeof CheckboxPrimitive.Root>,\n\t'type'\n> & {\n\ttype?: string\n}\n\nconst Checkbox = ({\n\tclassName,\n\t...props\n}: React.ComponentProps<typeof CheckboxPrimitive.Root>) => (\n\t<CheckboxPrimitive.Root\n\t\tdata-slot=\"checkbox\"\n\t\tclassName={cn(\n\t\t\t'peer border-primary ring-offset-background focus-visible:ring-ring data-[state=checked]:bg-primary data-[state=checked]:text-primary-foreground size-4 shrink-0 rounded-sm border focus-visible:ring-2 focus-visible:ring-offset-2 focus-visible:outline-hidden disabled:cursor-not-allowed disabled:opacity-50',\n\t\t\tclassName,\n\t\t)}\n\t\t{...props}\n\t>\n\t\t<CheckboxPrimitive.Indicator\n\t\t\tdata-slot=\"checkbox-indicator\"\n\t\t\tclassName={cn('flex items-center justify-center text-current')}\n\t\t>\n\t\t\t<svg viewBox=\"0 0 8 8\">\n\t\t\t\t<path\n\t\t\t\t\td=\"M1,4 L3,6 L7,2\"\n\t\t\t\t\tstroke=\"currentcolor\"\n\t\t\t\t\tstrokeWidth=\"1\"\n\t\t\t\t\tfill=\"none\"\n\t\t\t\t/>\n\t\t\t</svg>\n\t\t</CheckboxPrimitive.Indicator>\n\t</CheckboxPrimitive.Root>\n)\n\nexport { Checkbox }\n","import { OTPInput, OTPInputContext } from 'input-otp'\nimport * as React from 'react'\n\nimport { cn } from '#app/utils/misc.tsx'\n\nconst InputOTP = ({\n\tclassName,\n\tcontainerClassName,\n\t...props\n}: React.ComponentProps<typeof OTPInput>) => (\n\t<OTPInput\n\t\tdata-slot=\"input-otp\"\n\t\tcontainerClassName={cn(\n\t\t\t'flex items-center gap-2 has-disabled:opacity-50',\n\t\t\tcontainerClassName,\n\t\t)}\n\t\tclassName={cn('disabled:cursor-not-allowed', className)}\n\t\t{...props}\n\t/>\n)\n\nconst InputOTPGroup = ({\n\tclassName,\n\t...props\n}: React.ComponentProps<'div'>) => (\n\t<div\n\t\tdata-slot=\"input-otp-group\"\n\t\tclassName={cn('flex items-center', className)}\n\t\t{...props}\n\t/>\n)\n\nconst InputOTPSlot = ({\n\tindex,\n\tclassName,\n\t...props\n}: React.ComponentProps<'div'> & {\n\tindex: number\n}) => {\n\tconst inputOTPContext = React.useContext(OTPInputContext)\n\tconst slot = inputOTPContext.slots[index]\n\tif (!slot) throw new Error('Invalid slot index')\n\tconst { char, hasFakeCaret, isActive } = slot\n\n\treturn (\n\t\t<div\n\t\t\tdata-slot=\"input-otp-slot\"\n\t\t\tclassName={cn(\n\t\t\t\t'border-input relative flex size-10 items-center justify-center border-y border-r text-base transition-all first:rounded-l-md first:border-l last:rounded-r-md md:text-sm',\n\t\t\t\tisActive && 'ring-ring ring-offset-background z-10 ring-2',\n\t\t\t\tclassName,\n\t\t\t)}\n\t\t\t{...props}\n\t\t>\n\t\t\t{char}\n\t\t\t{hasFakeCaret && (\n\t\t\t\t<div className=\"pointer-events-none absolute inset-0 flex items-center justify-center\">\n\t\t\t\t\t<div className=\"animate-caret-blink bg-foreground h-4 w-px duration-1000\" />\n\t\t\t\t</div>\n\t\t\t)}\n\t\t</div>\n\t)\n}\n\nconst InputOTPSeparator = (props: React.ComponentProps<'div'>) => (\n\t<div data-slot=\"input-otp-separator\" className=\"flex-1\" {...props}></div>\n)\n\nexport { InputOTP, InputOTPGroup, InputOTPSlot, InputOTPSeparator }\n","import * as React from 'react'\n\nimport { cn } from '#app/utils/misc.tsx'\n\nconst Textarea = ({\n\tclassName,\n\t...props\n}: React.ComponentProps<'textarea'>) => {\n\treturn (\n\t\t<textarea\n\t\t\tclassName={cn(\n\t\t\t\t'border-input bg-background ring-offset-background placeholder:text-muted-foreground focus-visible:ring-ring aria-[invalid]:border-input-invalid flex min-h-[80px] w-full rounded-md border px-3 py-2 text-base focus-visible:ring-2 focus-visible:ring-offset-2 focus-visible:outline-hidden disabled:cursor-not-allowed disabled:opacity-50 md:text-sm',\n\t\t\t\tclassName,\n\t\t\t)}\n\t\t\t{...props}\n\t\t/>\n\t)\n}\n\nexport { Textarea }\n","import { useInputControl } from '@conform-to/react'\nimport { REGEXP_ONLY_DIGITS_AND_CHARS, type OTPInputProps } from 'input-otp'\nimport React, { useId } from 'react'\nimport { Checkbox, type CheckboxProps } from './ui/checkbox.tsx'\nimport {\n\tInputOTP,\n\tInputOTPGroup,\n\tInputOTPSeparator,\n\tInputOTPSlot,\n} from './ui/input-otp.tsx'\nimport { Input } from './ui/input.tsx'\nimport { Label } from './ui/label.tsx'\nimport { Textarea } from './ui/textarea.tsx'\n\nexport type ListOfErrors = Array<string | null | undefined> | null | undefined\n\nexport function ErrorList({\n\tid,\n\terrors,\n}: {\n\terrors?: ListOfErrors\n\tid?: string\n}) {\n\tconst errorsToRender = errors?.filter(Boolean)\n\tif (!errorsToRender?.length) return null\n\treturn (\n\t\t<ul id={id} className=\"flex flex-col gap-1\">\n\t\t\t{errorsToRender.map((e) => (\n\t\t\t\t<li key={e} className=\"text-foreground-destructive text-[10px]\">\n\t\t\t\t\t{e}\n\t\t\t\t</li>\n\t\t\t))}\n\t\t</ul>\n\t)\n}\n\nexport function Field({\n\tlabelProps,\n\tinputProps,\n\terrors,\n\tclassName,\n}: {\n\tlabelProps: React.LabelHTMLAttributes<HTMLLabelElement>\n\tinputProps: React.InputHTMLAttributes<HTMLInputElement>\n\terrors?: ListOfErrors\n\tclassName?: string\n}) {\n\tconst fallbackId = useId()\n\tconst id = inputProps.id ?? fallbackId\n\tconst errorId = errors?.length ? `${id}-error` : undefined\n\treturn (\n\t\t<div className={className}>\n\t\t\t<Label htmlFor={id} {...labelProps} />\n\t\t\t<Input\n\t\t\t\tid={id}\n\t\t\t\taria-invalid={errorId ? true : undefined}\n\t\t\t\taria-describedby={errorId}\n\t\t\t\t{...inputProps}\n\t\t\t/>\n\t\t\t<div className=\"min-h-[32px] px-4 pt-1 pb-3\">\n\t\t\t\t{errorId ? <ErrorList id={errorId} errors={errors} /> : null}\n\t\t\t</div>\n\t\t</div>\n\t)\n}\n\nexport function OTPField({\n\tlabelProps,\n\tinputProps,\n\terrors,\n\tclassName,\n}: {\n\tlabelProps: React.LabelHTMLAttributes<HTMLLabelElement>\n\tinputProps: Partial<OTPInputProps & { render: never }>\n\terrors?: ListOfErrors\n\tclassName?: string\n}) {\n\tconst fallbackId = useId()\n\tconst id = inputProps.id ?? fallbackId\n\tconst errorId = errors?.length ? `${id}-error` : undefined\n\treturn (\n\t\t<div className={className}>\n\t\t\t<Label htmlFor={id} {...labelProps} />\n\t\t\t<InputOTP\n\t\t\t\tpattern={REGEXP_ONLY_DIGITS_AND_CHARS}\n\t\t\t\tmaxLength={6}\n\t\t\t\tid={id}\n\t\t\t\taria-invalid={errorId ? true : undefined}\n\t\t\t\taria-describedby={errorId}\n\t\t\t\t{...inputProps}\n\t\t\t>\n\t\t\t\t<InputOTPGroup>\n\t\t\t\t\t<InputOTPSlot index={0} />\n\t\t\t\t\t<InputOTPSlot index={1} />\n\t\t\t\t\t<InputOTPSlot index={2} />\n\t\t\t\t</InputOTPGroup>\n\t\t\t\t<InputOTPSeparator />\n\t\t\t\t<InputOTPGroup>\n\t\t\t\t\t<InputOTPSlot index={3} />\n\t\t\t\t\t<InputOTPSlot index={4} />\n\t\t\t\t\t<InputOTPSlot index={5} />\n\t\t\t\t</InputOTPGroup>\n\t\t\t</InputOTP>\n\t\t\t<div className=\"min-h-[32px] px-4 pt-1 pb-3\">\n\t\t\t\t{errorId ? <ErrorList id={errorId} errors={errors} /> : null}\n\t\t\t</div>\n\t\t</div>\n\t)\n}\n\nexport function TextareaField({\n\tlabelProps,\n\ttextareaProps,\n\terrors,\n\tclassName,\n}: {\n\tlabelProps: React.LabelHTMLAttributes<HTMLLabelElement>\n\ttextareaProps: React.TextareaHTMLAttributes<HTMLTextAreaElement>\n\terrors?: ListOfErrors\n\tclassName?: string\n}) {\n\tconst fallbackId = useId()\n\tconst id = textareaProps.id ?? textareaProps.name ?? fallbackId\n\tconst errorId = errors?.length ? `${id}-error` : undefined\n\treturn (\n\t\t<div className={className}>\n\t\t\t<Label htmlFor={id} {...labelProps} />\n\t\t\t<Textarea\n\t\t\t\tid={id}\n\t\t\t\taria-invalid={errorId ? true : undefined}\n\t\t\t\taria-describedby={errorId}\n\t\t\t\t{...textareaProps}\n\t\t\t/>\n\t\t\t<div className=\"min-h-[32px] px-4 pt-1 pb-3\">\n\t\t\t\t{errorId ? <ErrorList id={errorId} errors={errors} /> : null}\n\t\t\t</div>\n\t\t</div>\n\t)\n}\n\nexport function CheckboxField({\n\tlabelProps,\n\tbuttonProps,\n\terrors,\n\tclassName,\n}: {\n\tlabelProps: React.ComponentProps<'label'>\n\tbuttonProps: CheckboxProps & {\n\t\tname: string\n\t\tform: string\n\t\tvalue?: string\n\t}\n\terrors?: ListOfErrors\n\tclassName?: string\n}) {\n\tconst { key, defaultChecked, ...checkboxProps } = buttonProps\n\tconst fallbackId = useId()\n\tconst checkedValue = buttonProps.value ?? 'on'\n\tconst input = useInputControl({\n\t\tkey,\n\t\tname: buttonProps.name,\n\t\tformId: buttonProps.form,\n\t\tinitialValue: defaultChecked ? checkedValue : undefined,\n\t})\n\tconst id = buttonProps.id ?? fallbackId\n\tconst errorId = errors?.length ? `${id}-error` : undefined\n\n\treturn (\n\t\t<div className={className}>\n\t\t\t<div className=\"flex gap-2\">\n\t\t\t\t<Checkbox\n\t\t\t\t\t{...checkboxProps}\n\t\t\t\t\tid={id}\n\t\t\t\t\taria-invalid={errorId ? true : undefined}\n\t\t\t\t\taria-describedby={errorId}\n\t\t\t\t\tchecked={input.value === checkedValue}\n\t\t\t\t\tonCheckedChange={(state) => {\n\t\t\t\t\t\tinput.change(state.valueOf() ? checkedValue : '')\n\t\t\t\t\t\tbuttonProps.onCheckedChange?.(state)\n\t\t\t\t\t}}\n\t\t\t\t\tonFocus={(event) => {\n\t\t\t\t\t\tinput.focus()\n\t\t\t\t\t\tbuttonProps.onFocus?.(event)\n\t\t\t\t\t}}\n\t\t\t\t\tonBlur={(event) => {\n\t\t\t\t\t\tinput.blur()\n\t\t\t\t\t\tbuttonProps.onBlur?.(event)\n\t\t\t\t\t}}\n\t\t\t\t\ttype=\"button\"\n\t\t\t\t/>\n\t\t\t\t<label\n\t\t\t\t\thtmlFor={id}\n\t\t\t\t\t{...labelProps}\n\t\t\t\t\tclassName=\"text-body-xs text-muted-foreground self-center\"\n\t\t\t\t/>\n\t\t\t</div>\n\t\t\t<div className=\"px-4 pt-1 pb-3\">\n\t\t\t\t{errorId ? <ErrorList id={errorId} errors={errors} /> : null}\n\t\t\t</div>\n\t\t</div>\n\t)\n}\n","export function Spacer({\n\tsize,\n}: {\n\t/**\n\t * The size of the space\n\t *\n\t * 4xs: h-4 (16px)\n\t *\n\t * 3xs: h-8 (32px)\n\t *\n\t * 2xs: h-12 (48px)\n\t *\n\t * xs: h-16 (64px)\n\t *\n\t * sm: h-20 (80px)\n\t *\n\t * md: h-24 (96px)\n\t *\n\t * lg: h-28 (112px)\n\t *\n\t * xl: h-32 (128px)\n\t *\n\t * 2xl: h-36 (144px)\n\t *\n\t * 3xl: h-40 (160px)\n\t *\n\t * 4xl: h-44 (176px)\n\t */\n\tsize:\n\t\t| '4xs'\n\t\t| '3xs'\n\t\t| '2xs'\n\t\t| 'xs'\n\t\t| 'sm'\n\t\t| 'md'\n\t\t| 'lg'\n\t\t| 'xl'\n\t\t| '2xl'\n\t\t| '3xl'\n\t\t| '4xl'\n}) {\n\tconst options: Record<typeof size, string> = {\n\t\t'4xs': 'h-4',\n\t\t'3xs': 'h-8',\n\t\t'2xs': 'h-12',\n\t\txs: 'h-16',\n\t\tsm: 'h-20',\n\t\tmd: 'h-24',\n\t\tlg: 'h-28',\n\t\txl: 'h-32',\n\t\t'2xl': 'h-36',\n\t\t'3xl': 'h-40',\n\t\t'4xl': 'h-44',\n\t}\n\tconst className = options[size]\n\treturn <div className={className} />\n}\n","import { data } from 'react-router'\nimport { requireUserId } from './auth.server.ts'\nimport { prisma } from './db.server.ts'\nimport { type PermissionString, parsePermissionString } from './user.ts'\n\nexport async function requireUserWithPermission(\n\trequest: Request,\n\tpermission: PermissionString,\n) {\n\tconst userId = await requireUserId(request)\n\tconst permissionData = parsePermissionString(permission)\n\tconst user = await prisma.user.findFirst({\n\t\tselect: { id: true },\n\t\twhere: {\n\t\t\tid: userId,\n\t\t\troles: {\n\t\t\t\tsome: {\n\t\t\t\t\tpermissions: {\n\t\t\t\t\t\tsome: {\n\t\t\t\t\t\t\t...permissionData,\n\t\t\t\t\t\t\taccess: permissionData.access\n\t\t\t\t\t\t\t\t? { in: permissionData.access }\n\t\t\t\t\t\t\t\t: undefined,\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t},\n\t\t},\n\t})\n\tif (!user) {\n\t\tthrow data(\n\t\t\t{\n\t\t\t\terror: 'Unauthorized',\n\t\t\t\trequiredPermission: permissionData,\n\t\t\t\tmessage: `Unauthorized: required permissions: ${permission}`,\n\t\t\t},\n\t\t\t{ status: 403 },\n\t\t)\n\t}\n\treturn user.id\n}\n\nexport async function requireUserWithRole(request: Request, name: string) {\n\tconst userId = await requireUserId(request)\n\tconst user = await prisma.user.findFirst({\n\t\tselect: { id: true },\n\t\twhere: { id: userId, roles: { some: { name } } },\n\t})\n\tif (!user) {\n\t\tthrow data(\n\t\t\t{\n\t\t\t\terror: 'Unauthorized',\n\t\t\t\trequiredRole: name,\n\t\t\t\tmessage: `Unauthorized: required role: ${name}`,\n\t\t\t},\n\t\t\t{ status: 403 },\n\t\t)\n\t}\n\treturn user.id\n}\n","import { invariantResponse } from '@epic-web/invariant'\nimport { type SEOHandle } from '@nasa-gcn/remix-seo'\nimport {\n\tredirect,\n\tForm,\n\tLink,\n\tuseFetcher,\n\tuseSearchParams,\n\tuseSubmit,\n} from 'react-router'\nimport { GeneralErrorBoundary } from '#app/components/error-boundary'\nimport { Field } from '#app/components/forms.tsx'\nimport { Spacer } from '#app/components/spacer.tsx'\nimport { Button } from '#app/components/ui/button.tsx'\nimport {\n\tcache,\n\tgetAllCacheKeys,\n\tlruCache,\n\tsearchCacheKeys,\n} from '#app/utils/cache.server.ts'\nimport {\n\tensureInstance,\n\tgetAllInstances,\n\tgetInstanceInfo,\n} from '#app/utils/litefs.server.ts'\nimport { useDebounce, useDoubleCheck } from '#app/utils/misc.tsx'\nimport { requireUserWithRole } from '#app/utils/permissions.server.ts'\nimport { type Route } from './+types/cache.ts'\n\nexport const handle: SEOHandle = {\n\tgetSitemapEntries: () => null,\n}\n\nexport async function loader({ request }: Route.LoaderArgs) {\n\tawait requireUserWithRole(request, 'admin')\n\tconst searchParams = new URL(request.url).searchParams\n\tconst query = searchParams.get('query')\n\tif (query === '') {\n\t\tsearchParams.delete('query')\n\t\treturn redirect(`/admin/cache?${searchParams.toString()}`)\n\t}\n\tconst limit = Number(searchParams.get('limit') ?? 100)\n\n\tconst currentInstanceInfo = await getInstanceInfo()\n\tconst instance =\n\t\tsearchParams.get('instance') ?? currentInstanceInfo.currentInstance\n\tconst instances = await getAllInstances()\n\tawait ensureInstance(instance)\n\n\tlet cacheKeys: { sqlite: Array<string>; lru: Array<string> }\n\tif (typeof query === 'string') {\n\t\tcacheKeys = await searchCacheKeys(query, limit)\n\t} else {\n\t\tcacheKeys = await getAllCacheKeys(limit)\n\t}\n\treturn { cacheKeys, instance, instances, currentInstanceInfo }\n}\n\nexport async function action({ request }: Route.ActionArgs) {\n\tawait requireUserWithRole(request, 'admin')\n\tconst formData = await request.formData()\n\tconst key = formData.get('cacheKey')\n\tconst { currentInstance } = await getInstanceInfo()\n\tconst instance = formData.get('instance') ?? currentInstance\n\tconst type = formData.get('type')\n\n\tinvariantResponse(typeof key === 'string', 'cacheKey must be a string')\n\tinvariantResponse(typeof type === 'string', 'type must be a string')\n\tinvariantResponse(typeof instance === 'string', 'instance must be a string')\n\tawait ensureInstance(instance)\n\n\tswitch (type) {\n\t\tcase 'sqlite': {\n\t\t\tawait cache.delete(key)\n\t\t\tbreak\n\t\t}\n\t\tcase 'lru': {\n\t\t\tlruCache.delete(key)\n\t\t\tbreak\n\t\t}\n\t\tdefault: {\n\t\t\tthrow new Error(`Unknown cache type: ${type}`)\n\t\t}\n\t}\n\treturn { success: true }\n}\n\nexport default function CacheAdminRoute({ loaderData }: Route.ComponentProps) {\n\tconst [searchParams] = useSearchParams()\n\tconst submit = useSubmit()\n\tconst query = searchParams.get('query') ?? ''\n\tconst limit = searchParams.get('limit') ?? '100'\n\tconst instance = searchParams.get('instance') ?? loaderData.instance\n\n\tconst handleFormChange = useDebounce(async (form: HTMLFormElement) => {\n\t\tawait submit(form)\n\t}, 400)\n\n\treturn (\n\t\t<div className=\"container\">\n\t\t\t<h1 className=\"text-h1\">Cache Admin</h1>\n\t\t\t<Spacer size=\"2xs\" />\n\t\t\t<Form\n\t\t\t\tmethod=\"get\"\n\t\t\t\tclassName=\"flex flex-col gap-4\"\n\t\t\t\tonChange={(e) => handleFormChange(e.currentTarget)}\n\t\t\t>\n\t\t\t\t<div className=\"flex-1\">\n\t\t\t\t\t<div className=\"flex flex-1 gap-4\">\n\t\t\t\t\t\t<button\n\t\t\t\t\t\t\ttype=\"submit\"\n\t\t\t\t\t\t\tclassName=\"flex h-16 items-center justify-center\"\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\tüîé\n\t\t\t\t\t\t</button>\n\t\t\t\t\t\t<Field\n\t\t\t\t\t\t\tclassName=\"flex-1\"\n\t\t\t\t\t\t\tlabelProps={{ children: 'Search' }}\n\t\t\t\t\t\t\tinputProps={{\n\t\t\t\t\t\t\t\ttype: 'search',\n\t\t\t\t\t\t\t\tname: 'query',\n\t\t\t\t\t\t\t\tdefaultValue: query,\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<div className=\"text-muted-foreground flex h-16 w-14 items-center text-lg font-medium\">\n\t\t\t\t\t\t\t<span title=\"Total results shown\">\n\t\t\t\t\t\t\t\t{loaderData.cacheKeys.sqlite.length +\n\t\t\t\t\t\t\t\t\tloaderData.cacheKeys.lru.length}\n\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t<div className=\"flex flex-wrap items-center gap-4\">\n\t\t\t\t\t<Field\n\t\t\t\t\t\tlabelProps={{\n\t\t\t\t\t\t\tchildren: 'Limit',\n\t\t\t\t\t\t}}\n\t\t\t\t\t\tinputProps={{\n\t\t\t\t\t\t\tname: 'limit',\n\t\t\t\t\t\t\tdefaultValue: limit,\n\t\t\t\t\t\t\ttype: 'number',\n\t\t\t\t\t\t\tstep: '1',\n\t\t\t\t\t\t\tmin: '1',\n\t\t\t\t\t\t\tmax: '10000',\n\t\t\t\t\t\t\tplaceholder: 'results limit',\n\t\t\t\t\t\t}}\n\t\t\t\t\t/>\n\t\t\t\t\t<select name=\"instance\" defaultValue={instance}>\n\t\t\t\t\t\t{Object.entries(loaderData.instances).map(([inst, region]) => (\n\t\t\t\t\t\t\t<option key={inst} value={inst}>\n\t\t\t\t\t\t\t\t{[\n\t\t\t\t\t\t\t\t\tinst,\n\t\t\t\t\t\t\t\t\t`(${region})`,\n\t\t\t\t\t\t\t\t\tinst === loaderData.currentInstanceInfo.currentInstance\n\t\t\t\t\t\t\t\t\t\t? '(current)'\n\t\t\t\t\t\t\t\t\t\t: '',\n\t\t\t\t\t\t\t\t\tinst === loaderData.currentInstanceInfo.primaryInstance\n\t\t\t\t\t\t\t\t\t\t? ' (primary)'\n\t\t\t\t\t\t\t\t\t\t: '',\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t.filter(Boolean)\n\t\t\t\t\t\t\t\t\t.join(' ')}\n\t\t\t\t\t\t\t</option>\n\t\t\t\t\t\t))}\n\t\t\t\t\t</select>\n\t\t\t\t</div>\n\t\t\t</Form>\n\t\t\t<Spacer size=\"2xs\" />\n\t\t\t<div className=\"flex flex-col gap-4\">\n\t\t\t\t<h2 className=\"text-h2\">LRU Cache:</h2>\n\t\t\t\t{loaderData.cacheKeys.lru.map((key) => (\n\t\t\t\t\t<CacheKeyRow\n\t\t\t\t\t\tkey={key}\n\t\t\t\t\t\tcacheKey={key}\n\t\t\t\t\t\tinstance={instance}\n\t\t\t\t\t\ttype=\"lru\"\n\t\t\t\t\t/>\n\t\t\t\t))}\n\t\t\t</div>\n\t\t\t<Spacer size=\"3xs\" />\n\t\t\t<div className=\"flex flex-col gap-4\">\n\t\t\t\t<h2 className=\"text-h2\">SQLite Cache:</h2>\n\t\t\t\t{loaderData.cacheKeys.sqlite.map((key) => (\n\t\t\t\t\t<CacheKeyRow\n\t\t\t\t\t\tkey={key}\n\t\t\t\t\t\tcacheKey={key}\n\t\t\t\t\t\tinstance={instance}\n\t\t\t\t\t\ttype=\"sqlite\"\n\t\t\t\t\t/>\n\t\t\t\t))}\n\t\t\t</div>\n\t\t</div>\n\t)\n}\n\nfunction CacheKeyRow({\n\tcacheKey,\n\tinstance,\n\ttype,\n}: {\n\tcacheKey: string\n\tinstance?: string\n\ttype: 'sqlite' | 'lru'\n}) {\n\tconst fetcher = useFetcher<typeof action>()\n\tconst dc = useDoubleCheck()\n\tconst encodedKey = encodeURIComponent(cacheKey)\n\tconst valuePage = `/admin/cache/${type}/${encodedKey}?instance=${instance}`\n\treturn (\n\t\t<div className=\"flex items-center gap-2 font-mono\">\n\t\t\t<fetcher.Form method=\"POST\">\n\t\t\t\t<input type=\"hidden\" name=\"cacheKey\" value={cacheKey} />\n\t\t\t\t<input type=\"hidden\" name=\"instance\" value={instance} />\n\t\t\t\t<input type=\"hidden\" name=\"type\" value={type} />\n\t\t\t\t<Button\n\t\t\t\t\tsize=\"sm\"\n\t\t\t\t\tvariant=\"secondary\"\n\t\t\t\t\t{...dc.getButtonProps({ type: 'submit' })}\n\t\t\t\t>\n\t\t\t\t\t{fetcher.state === 'idle'\n\t\t\t\t\t\t? dc.doubleCheck\n\t\t\t\t\t\t\t? 'You sure?'\n\t\t\t\t\t\t\t: 'Delete'\n\t\t\t\t\t\t: 'Deleting...'}\n\t\t\t\t</Button>\n\t\t\t</fetcher.Form>\n\t\t\t<Link reloadDocument to={valuePage}>\n\t\t\t\t{cacheKey}\n\t\t\t</Link>\n\t\t</div>\n\t)\n}\n\nexport function ErrorBoundary() {\n\treturn (\n\t\t<GeneralErrorBoundary\n\t\t\tstatusHandlers={{\n\t\t\t\t403: ({ error }) => (\n\t\t\t\t\t<p>You are not allowed to do that: {error?.data.message}</p>\n\t\t\t\t),\n\t\t\t}}\n\t\t/>\n\t)\n}\n","import { invariantResponse } from '@epic-web/invariant'\nimport { lruCache } from '#app/utils/cache.server.ts'\nimport {\n\tgetAllInstances,\n\tgetInstanceInfo,\n\tensureInstance,\n} from '#app/utils/litefs.server.ts'\nimport { requireUserWithRole } from '#app/utils/permissions.server.ts'\nimport { type Route } from './+types/cache_.lru.$cacheKey.ts'\n\nexport async function loader({ request, params }: Route.LoaderArgs) {\n\tawait requireUserWithRole(request, 'admin')\n\tconst searchParams = new URL(request.url).searchParams\n\tconst currentInstanceInfo = await getInstanceInfo()\n\tconst allInstances = await getAllInstances()\n\tconst instance =\n\t\tsearchParams.get('instance') ?? currentInstanceInfo.currentInstance\n\tawait ensureInstance(instance)\n\n\tconst { cacheKey } = params\n\tinvariantResponse(cacheKey, 'cacheKey is required')\n\treturn {\n\t\tinstance: {\n\t\t\thostname: instance,\n\t\t\tregion: allInstances[instance],\n\t\t\tisPrimary: currentInstanceInfo.primaryInstance === instance,\n\t\t},\n\t\tcacheKey,\n\t\tvalue: lruCache.get(cacheKey),\n\t}\n}\n","import { redirect } from 'react-router'\nimport { z } from 'zod'\nimport { cache } from '#app/utils/cache.server.ts'\nimport {\n\tgetInstanceInfo,\n\tgetInternalInstanceDomain,\n} from '#app/utils/litefs.server'\nimport { type Route } from './+types/cache_.sqlite.ts'\n\nexport async function updatePrimaryCacheValue({\n\tkey,\n\tcacheValue,\n}: {\n\tkey: string\n\tcacheValue: any\n}) {\n\tconst { currentIsPrimary, primaryInstance } = await getInstanceInfo()\n\tif (currentIsPrimary) {\n\t\tthrow new Error(\n\t\t\t`updatePrimaryCacheValue should not be called on the primary instance (${primaryInstance})}`,\n\t\t)\n\t}\n\tconst domain = getInternalInstanceDomain(primaryInstance)\n\tconst token = process.env.INTERNAL_COMMAND_TOKEN\n\treturn fetch(`${domain}/admin/cache/sqlite`, {\n\t\tmethod: 'POST',\n\t\theaders: {\n\t\t\tAuthorization: `Bearer ${token}`,\n\t\t\t'Content-Type': 'application/json',\n\t\t},\n\t\tbody: JSON.stringify({ key, cacheValue }),\n\t})\n}\n\nexport async function action({ request }: Route.ActionArgs) {\n\tconst { currentIsPrimary, primaryInstance } = await getInstanceInfo()\n\tif (!currentIsPrimary) {\n\t\tthrow new Error(\n\t\t\t`${request.url} should only be called on the primary instance (${primaryInstance})}`,\n\t\t)\n\t}\n\tconst token = process.env.INTERNAL_COMMAND_TOKEN\n\tconst isAuthorized =\n\t\trequest.headers.get('Authorization') === `Bearer ${token}`\n\tif (!isAuthorized) {\n\t\t// nah, you can't be here...\n\t\treturn redirect('https://www.youtube.com/watch?v=dQw4w9WgXcQ')\n\t}\n\tconst { key, cacheValue } = z\n\t\t.object({ key: z.string(), cacheValue: z.unknown().optional() })\n\t\t.parse(await request.json())\n\tif (cacheValue === undefined) {\n\t\tawait cache.delete(key)\n\t} else {\n\t\t// @ts-expect-error - we don't reliably know the type of cacheValue\n\t\tawait cache.set(key, cacheValue)\n\t}\n\treturn { success: true }\n}\n","import { invariantResponse } from '@epic-web/invariant'\nimport { cache } from '#app/utils/cache.server.ts'\nimport {\n\tgetAllInstances,\n\tgetInstanceInfo,\n\tensureInstance,\n} from '#app/utils/litefs.server.ts'\nimport { requireUserWithRole } from '#app/utils/permissions.server.ts'\nimport { type Route } from './+types/cache_.sqlite.$cacheKey.ts'\n\nexport async function loader({ request, params }: Route.LoaderArgs) {\n\tawait requireUserWithRole(request, 'admin')\n\tconst searchParams = new URL(request.url).searchParams\n\tconst currentInstanceInfo = await getInstanceInfo()\n\tconst allInstances = await getAllInstances()\n\tconst instance =\n\t\tsearchParams.get('instance') ?? currentInstanceInfo.currentInstance\n\tawait ensureInstance(instance)\n\n\tconst { cacheKey } = params\n\tinvariantResponse(cacheKey, 'cacheKey is required')\n\treturn {\n\t\tinstance: {\n\t\t\thostname: instance,\n\t\t\tregion: allInstances[instance],\n\t\t\tisPrimary: currentInstanceInfo.primaryInstance === instance,\n\t\t},\n\t\tcacheKey,\n\t\tvalue: cache.get(cacheKey),\n\t}\n}\n","import { redirect } from 'react-router'\nimport { requireUserId, logout } from '#app/utils/auth.server.ts'\nimport { prisma } from '#app/utils/db.server.ts'\nimport { type Route } from './+types/me.ts'\n\nexport async function loader({ request }: Route.LoaderArgs) {\n\tconst userId = await requireUserId(request)\n\tconst user = await prisma.user.findUnique({ where: { id: userId } })\n\tif (!user) {\n\t\tconst requestUrl = new URL(request.url)\n\t\tconst loginParams = new URLSearchParams([\n\t\t\t['redirectTo', `${requestUrl.pathname}${requestUrl.search}`],\n\t\t])\n\t\tconst redirectTo = `/login?${loginParams}`\n\t\tawait logout({ request, redirectTo })\n\t\treturn redirect(redirectTo)\n\t}\n\treturn redirect(`/users/${user.username}`)\n}\n","import { requireUserId } from '#app/utils/auth.server.ts'\nimport { prisma } from '#app/utils/db.server.ts'\nimport { getDomainUrl, getNoteImgSrc, getUserImgSrc } from '#app/utils/misc.tsx'\nimport { type Route } from './+types/download-user-data.ts'\n\nexport async function loader({ request }: Route.LoaderArgs) {\n\tconst userId = await requireUserId(request)\n\tconst user = await prisma.user.findUniqueOrThrow({\n\t\twhere: { id: userId },\n\t\t// this is one of the *few* instances where you can use \"include\" because\n\t\t// the goal is to literally get *everything*. Normally you should be\n\t\t// explicit with \"select\". We're using select for images because we don't\n\t\t// want to send back the entire blob of the image. We'll send a URL they can\n\t\t// use to download it instead.\n\t\tinclude: {\n\t\t\timage: {\n\t\t\t\tselect: {\n\t\t\t\t\tid: true,\n\t\t\t\t\tcreatedAt: true,\n\t\t\t\t\tupdatedAt: true,\n\t\t\t\t\tobjectKey: true,\n\t\t\t\t},\n\t\t\t},\n\t\t\tnotes: {\n\t\t\t\tinclude: {\n\t\t\t\t\timages: {\n\t\t\t\t\t\tselect: {\n\t\t\t\t\t\t\tid: true,\n\t\t\t\t\t\t\tcreatedAt: true,\n\t\t\t\t\t\t\tupdatedAt: true,\n\t\t\t\t\t\t\tobjectKey: true,\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t},\n\t\t\tpassword: false, // <-- intentionally omit password\n\t\t\tsessions: true,\n\t\t\troles: true,\n\t\t},\n\t})\n\n\tconst domain = getDomainUrl(request)\n\n\treturn Response.json({\n\t\tuser: {\n\t\t\t...user,\n\t\t\timage: user.image\n\t\t\t\t? {\n\t\t\t\t\t\t...user.image,\n\t\t\t\t\t\turl: domain + getUserImgSrc(user.image.objectKey),\n\t\t\t\t\t}\n\t\t\t\t: null,\n\t\t\tnotes: user.notes.map((note) => ({\n\t\t\t\t...note,\n\t\t\t\timages: note.images.map((image) => ({\n\t\t\t\t\t...image,\n\t\t\t\t\turl: domain + getNoteImgSrc(image.objectKey),\n\t\t\t\t})),\n\t\t\t})),\n\t\t},\n\t})\n}\n","// learn more: https://fly.io/docs/reference/configuration/#services-http_checks\nimport { prisma } from '#app/utils/db.server.ts'\nimport { type Route } from './+types/healthcheck.ts'\n\nexport async function loader({ request }: Route.LoaderArgs) {\n\tconst host =\n\t\trequest.headers.get('X-Forwarded-Host') ?? request.headers.get('host')\n\n\ttry {\n\t\t// if we can connect to the database and make a simple query\n\t\t// and make a HEAD request to ourselves, then we're good.\n\t\tawait Promise.all([\n\t\t\tprisma.user.count(),\n\t\t\tfetch(`${new URL(request.url).protocol}${host}`, {\n\t\t\t\tmethod: 'HEAD',\n\t\t\t\theaders: { 'X-Healthcheck': 'true' },\n\t\t\t}).then((r) => {\n\t\t\t\tif (!r.ok) return Promise.reject(r)\n\t\t\t}),\n\t\t])\n\t\treturn new Response('OK')\n\t} catch (error: unknown) {\n\t\tconsole.log('healthcheck ‚ùå', { error })\n\t\treturn new Response('ERROR', { status: 500 })\n\t}\n}\n","import { promises as fs, constants } from 'node:fs'\nimport { invariantResponse } from '@epic-web/invariant'\nimport { getImgResponse } from 'openimg/node'\nimport { getDomainUrl } from '#app/utils/misc.tsx'\nimport { getSignedGetRequestInfo } from '#app/utils/storage.server.ts'\nimport { type Route } from './+types/images'\n\nlet cacheDir: string | null = null\n\nasync function getCacheDir() {\n\tif (cacheDir) return cacheDir\n\n\tlet dir = './tests/fixtures/openimg'\n\tif (process.env.NODE_ENV === 'production') {\n\t\tconst isAccessible = await fs\n\t\t\t.access('/data', constants.W_OK)\n\t\t\t.then(() => true)\n\t\t\t.catch(() => false)\n\n\t\tif (isAccessible) {\n\t\t\tdir = '/data/images'\n\t\t}\n\t}\n\n\treturn (cacheDir = dir)\n}\n\nexport async function loader({ request }: Route.LoaderArgs) {\n\tconst url = new URL(request.url)\n\tconst searchParams = url.searchParams\n\n\tconst headers = new Headers()\n\theaders.set('Cache-Control', 'public, max-age=31536000, immutable')\n\n\tconst objectKey = searchParams.get('objectKey')\n\n\treturn getImgResponse(request, {\n\t\theaders,\n\t\tallowlistedOrigins: [\n\t\t\tgetDomainUrl(request),\n\t\t\tprocess.env.AWS_ENDPOINT_URL_S3,\n\t\t].filter(Boolean),\n\t\tcacheFolder: await getCacheDir(),\n\t\tgetImgSource: () => {\n\t\t\tif (objectKey) {\n\t\t\t\tconst { url: signedUrl, headers: signedHeaders } =\n\t\t\t\t\tgetSignedGetRequestInfo(objectKey)\n\t\t\t\treturn {\n\t\t\t\t\ttype: 'fetch',\n\t\t\t\t\turl: signedUrl,\n\t\t\t\t\theaders: signedHeaders,\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tconst src = searchParams.get('src')\n\t\t\tinvariantResponse(src, 'src query parameter is required', { status: 400 })\n\n\t\t\tif (URL.canParse(src)) {\n\t\t\t\t// Fetch image from external URL; will be matched against allowlist\n\t\t\t\treturn {\n\t\t\t\t\ttype: 'fetch',\n\t\t\t\t\turl: src,\n\t\t\t\t}\n\t\t\t}\n\t\t\t// Retrieve image from filesystem (public folder)\n\t\t\tif (src.startsWith('/assets')) {\n\t\t\t\t// Files managed by Vite\n\t\t\t\treturn {\n\t\t\t\t\ttype: 'fs',\n\t\t\t\t\tpath: '.' + src,\n\t\t\t\t}\n\t\t\t}\n\t\t\t// Fallback to files in public folder\n\t\t\treturn {\n\t\t\t\ttype: 'fs',\n\t\t\t\tpath: './public' + src,\n\t\t\t}\n\t\t},\n\t})\n}\n","import { invariantResponse } from '@epic-web/invariant'\nimport { type SEOHandle } from '@nasa-gcn/remix-seo'\nimport { Link, Outlet, useMatches } from 'react-router'\nimport { z } from 'zod'\nimport { Spacer } from '#app/components/spacer.tsx'\nimport { Icon } from '#app/components/ui/icon.tsx'\nimport { requireUserId } from '#app/utils/auth.server.ts'\nimport { prisma } from '#app/utils/db.server.ts'\nimport { cn } from '#app/utils/misc.tsx'\nimport { useUser } from '#app/utils/user.ts'\nimport { type Route } from './+types/profile.ts'\n\nexport const BreadcrumbHandle = z.object({ breadcrumb: z.any() })\nexport type BreadcrumbHandle = z.infer<typeof BreadcrumbHandle>\n\nexport const handle: BreadcrumbHandle & SEOHandle = {\n\tbreadcrumb: <Icon name=\"file-text\">Edit Profile</Icon>,\n\tgetSitemapEntries: () => null,\n}\n\nexport async function loader({ request }: Route.LoaderArgs) {\n\tconst userId = await requireUserId(request)\n\tconst user = await prisma.user.findUnique({\n\t\twhere: { id: userId },\n\t\tselect: { username: true },\n\t})\n\tinvariantResponse(user, 'User not found', { status: 404 })\n\treturn {}\n}\n\nconst BreadcrumbHandleMatch = z.object({\n\thandle: BreadcrumbHandle,\n})\n\nexport default function EditUserProfile() {\n\tconst user = useUser()\n\tconst matches = useMatches()\n\tconst breadcrumbs = matches\n\t\t.map((m) => {\n\t\t\tconst result = BreadcrumbHandleMatch.safeParse(m)\n\t\t\tif (!result.success || !result.data.handle.breadcrumb) return null\n\t\t\treturn (\n\t\t\t\t<Link key={m.id} to={m.pathname} className=\"flex items-center\">\n\t\t\t\t\t{result.data.handle.breadcrumb}\n\t\t\t\t</Link>\n\t\t\t)\n\t\t})\n\t\t.filter(Boolean)\n\n\treturn (\n\t\t<div className=\"m-auto mt-16 mb-24 max-w-3xl\">\n\t\t\t<div className=\"container\">\n\t\t\t\t<ul className=\"flex gap-3\">\n\t\t\t\t\t<li>\n\t\t\t\t\t\t<Link\n\t\t\t\t\t\t\tclassName=\"text-muted-foreground\"\n\t\t\t\t\t\t\tto={`/users/${user.username}`}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\tProfile\n\t\t\t\t\t\t</Link>\n\t\t\t\t\t</li>\n\t\t\t\t\t{breadcrumbs.map((breadcrumb, i, arr) => (\n\t\t\t\t\t\t<li\n\t\t\t\t\t\t\tkey={i}\n\t\t\t\t\t\t\tclassName={cn('flex items-center gap-3', {\n\t\t\t\t\t\t\t\t'text-muted-foreground': i < arr.length - 1,\n\t\t\t\t\t\t\t})}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<Icon name=\"arrow-right\" size=\"sm\">\n\t\t\t\t\t\t\t\t{breadcrumb}\n\t\t\t\t\t\t\t</Icon>\n\t\t\t\t\t\t</li>\n\t\t\t\t\t))}\n\t\t\t\t</ul>\n\t\t\t</div>\n\t\t\t<Spacer size=\"xs\" />\n\t\t\t<main className=\"bg-muted mx-auto px-6 py-8 md:container md:rounded-3xl\">\n\t\t\t\t<Outlet />\n\t\t\t</main>\n\t\t</div>\n\t)\n}\n","import { render } from '@react-email/components'\nimport { type ReactElement } from 'react'\nimport { z } from 'zod'\n\nconst resendErrorSchema = z.union([\n\tz.object({\n\t\tname: z.string(),\n\t\tmessage: z.string(),\n\t\tstatusCode: z.number(),\n\t}),\n\tz.object({\n\t\tname: z.literal('UnknownError'),\n\t\tmessage: z.literal('Unknown Error'),\n\t\tstatusCode: z.literal(500),\n\t\tcause: z.any(),\n\t}),\n])\ntype ResendError = z.infer<typeof resendErrorSchema>\n\nconst resendSuccessSchema = z.object({\n\tid: z.string(),\n})\n\nexport async function sendEmail({\n\treact,\n\t...options\n}: {\n\tto: string\n\tsubject: string\n} & (\n\t| { html: string; text: string; react?: never }\n\t| { react: ReactElement; html?: never; text?: never }\n)) {\n\tconst from = 'hello@epicstack.dev'\n\n\tconst email = {\n\t\tfrom,\n\t\t...options,\n\t\t...(react ? await renderReactEmail(react) : null),\n\t}\n\n\t// feel free to remove this condition once you've set up resend\n\tif (!process.env.RESEND_API_KEY && !process.env.MOCKS) {\n\t\tconsole.error(`RESEND_API_KEY not set and we're not in mocks mode.`)\n\t\tconsole.error(\n\t\t\t`To send emails, set the RESEND_API_KEY environment variable.`,\n\t\t)\n\t\tconsole.error(`Would have sent the following email:`, JSON.stringify(email))\n\t\treturn {\n\t\t\tstatus: 'success',\n\t\t\tdata: { id: 'mocked' },\n\t\t} as const\n\t}\n\n\tconst response = await fetch('https://api.resend.com/emails', {\n\t\tmethod: 'POST',\n\t\tbody: JSON.stringify(email),\n\t\theaders: {\n\t\t\tAuthorization: `Bearer ${process.env.RESEND_API_KEY}`,\n\t\t\t'Content-Type': 'application/json',\n\t\t},\n\t})\n\tconst data = await response.json()\n\tconst parsedData = resendSuccessSchema.safeParse(data)\n\n\tif (response.ok && parsedData.success) {\n\t\treturn {\n\t\t\tstatus: 'success',\n\t\t\tdata: parsedData,\n\t\t} as const\n\t} else {\n\t\tconst parseResult = resendErrorSchema.safeParse(data)\n\t\tif (parseResult.success) {\n\t\t\treturn {\n\t\t\t\tstatus: 'error',\n\t\t\t\terror: parseResult.data,\n\t\t\t} as const\n\t\t} else {\n\t\t\treturn {\n\t\t\t\tstatus: 'error',\n\t\t\t\terror: {\n\t\t\t\t\tname: 'UnknownError',\n\t\t\t\t\tmessage: 'Unknown Error',\n\t\t\t\t\tstatusCode: 500,\n\t\t\t\t\tcause: data,\n\t\t\t\t} satisfies ResendError,\n\t\t\t} as const\n\t\t}\n\t}\n}\n\nasync function renderReactEmail(react: ReactElement) {\n\tconst [html, text] = await Promise.all([\n\t\trender(react),\n\t\trender(react, { plainText: true }),\n\t])\n\treturn { html, text }\n}\n","import { createCookieSessionStorage } from 'react-router'\n\nexport const verifySessionStorage = createCookieSessionStorage({\n\tcookie: {\n\t\tname: 'en_verification',\n\t\tsameSite: 'lax', // CSRF protection is advised if changing to 'none'\n\t\tpath: '/',\n\t\thttpOnly: true,\n\t\tmaxAge: 60 * 10, // 10 minutes\n\t\tsecrets: process.env.SESSION_SECRET.split(','),\n\t\tsecure: process.env.NODE_ENV === 'production',\n\t},\n})\n","import { invariant } from '@epic-web/invariant'\nimport * as E from '@react-email/components'\nimport { data } from 'react-router'\nimport {\n\trequireRecentVerification,\n\ttype VerifyFunctionArgs,\n} from '#app/routes/_auth+/verify.server.ts'\nimport { prisma } from '#app/utils/db.server.ts'\nimport { sendEmail } from '#app/utils/email.server.ts'\nimport { redirectWithToast } from '#app/utils/toast.server.ts'\nimport { verifySessionStorage } from '#app/utils/verification.server.ts'\nimport { newEmailAddressSessionKey } from './profile.change-email'\n\nexport async function handleVerification({\n\trequest,\n\tsubmission,\n}: VerifyFunctionArgs) {\n\tawait requireRecentVerification(request)\n\tinvariant(\n\t\tsubmission.status === 'success',\n\t\t'Submission should be successful by now',\n\t)\n\n\tconst verifySession = await verifySessionStorage.getSession(\n\t\trequest.headers.get('cookie'),\n\t)\n\tconst newEmail = verifySession.get(newEmailAddressSessionKey)\n\tif (!newEmail) {\n\t\treturn data(\n\t\t\t{\n\t\t\t\tresult: submission.reply({\n\t\t\t\t\tformErrors: [\n\t\t\t\t\t\t'You must submit the code on the same device that requested the email change.',\n\t\t\t\t\t],\n\t\t\t\t}),\n\t\t\t},\n\t\t\t{ status: 400 },\n\t\t)\n\t}\n\tconst preUpdateUser = await prisma.user.findFirstOrThrow({\n\t\tselect: { email: true },\n\t\twhere: { id: submission.value.target },\n\t})\n\tconst user = await prisma.user.update({\n\t\twhere: { id: submission.value.target },\n\t\tselect: { id: true, email: true, username: true },\n\t\tdata: { email: newEmail },\n\t})\n\n\tvoid sendEmail({\n\t\tto: preUpdateUser.email,\n\t\tsubject: 'Epic Stack email changed',\n\t\treact: <EmailChangeNoticeEmail userId={user.id} />,\n\t})\n\n\treturn redirectWithToast(\n\t\t'/settings/profile',\n\t\t{\n\t\t\ttitle: 'Email Changed',\n\t\t\ttype: 'success',\n\t\t\tdescription: `Your email has been changed to ${user.email}`,\n\t\t},\n\t\t{\n\t\t\theaders: {\n\t\t\t\t'set-cookie': await verifySessionStorage.destroySession(verifySession),\n\t\t\t},\n\t\t},\n\t)\n}\n\nexport function EmailChangeEmail({\n\tverifyUrl,\n\totp,\n}: {\n\tverifyUrl: string\n\totp: string\n}) {\n\treturn (\n\t\t<E.Html lang=\"en\" dir=\"ltr\">\n\t\t\t<E.Container>\n\t\t\t\t<h1>\n\t\t\t\t\t<E.Text>Epic Notes Email Change</E.Text>\n\t\t\t\t</h1>\n\t\t\t\t<p>\n\t\t\t\t\t<E.Text>\n\t\t\t\t\t\tHere's your verification code: <strong>{otp}</strong>\n\t\t\t\t\t</E.Text>\n\t\t\t\t</p>\n\t\t\t\t<p>\n\t\t\t\t\t<E.Text>Or click the link:</E.Text>\n\t\t\t\t</p>\n\t\t\t\t<E.Link href={verifyUrl}>{verifyUrl}</E.Link>\n\t\t\t</E.Container>\n\t\t</E.Html>\n\t)\n}\n\nfunction EmailChangeNoticeEmail({ userId }: { userId: string }) {\n\treturn (\n\t\t<E.Html lang=\"en\" dir=\"ltr\">\n\t\t\t<E.Container>\n\t\t\t\t<h1>\n\t\t\t\t\t<E.Text>Your Epic Notes email has been changed</E.Text>\n\t\t\t\t</h1>\n\t\t\t\t<p>\n\t\t\t\t\t<E.Text>\n\t\t\t\t\t\tWe're writing to let you know that your Epic Notes email has been\n\t\t\t\t\t\tchanged.\n\t\t\t\t\t</E.Text>\n\t\t\t\t</p>\n\t\t\t\t<p>\n\t\t\t\t\t<E.Text>\n\t\t\t\t\t\tIf you changed your email address, then you can safely ignore this.\n\t\t\t\t\t\tBut if you did not change your email address, then please contact\n\t\t\t\t\t\tsupport immediately.\n\t\t\t\t\t</E.Text>\n\t\t\t\t</p>\n\t\t\t\t<p>\n\t\t\t\t\t<E.Text>Your Account ID: {userId}</E.Text>\n\t\t\t\t</p>\n\t\t\t</E.Container>\n\t\t</E.Html>\n\t)\n}\n","import { type SEOHandle } from '@nasa-gcn/remix-seo'\nimport { Outlet } from 'react-router'\nimport { Icon } from '#app/components/ui/icon.tsx'\nimport { type VerificationTypes } from '#app/routes/_auth+/verify.tsx'\nimport { type BreadcrumbHandle } from './profile.tsx'\n\nexport const handle: BreadcrumbHandle & SEOHandle = {\n\tbreadcrumb: <Icon name=\"lock-closed\">2FA</Icon>,\n\tgetSitemapEntries: () => null,\n}\n\nexport const twoFAVerificationType = '2fa' satisfies VerificationTypes\n\nexport default function TwoFactorRoute() {\n\treturn <Outlet />\n}\n","import { invariant } from '@epic-web/invariant'\nimport { redirect } from 'react-router'\nimport { safeRedirect } from 'remix-utils/safe-redirect'\nimport { twoFAVerificationType } from '#app/routes/settings+/profile.two-factor.tsx'\nimport { getUserId, sessionKey } from '#app/utils/auth.server.ts'\nimport { prisma } from '#app/utils/db.server.ts'\nimport { combineResponseInits } from '#app/utils/misc.tsx'\nimport { authSessionStorage } from '#app/utils/session.server.ts'\nimport { redirectWithToast } from '#app/utils/toast.server.ts'\nimport { verifySessionStorage } from '#app/utils/verification.server.ts'\nimport { getRedirectToUrl, type VerifyFunctionArgs } from './verify.server.ts'\n\nconst verifiedTimeKey = 'verified-time'\nconst unverifiedSessionIdKey = 'unverified-session-id'\nconst rememberKey = 'remember'\n\nexport async function handleNewSession(\n\t{\n\t\trequest,\n\t\tsession,\n\t\tredirectTo,\n\t\tremember,\n\t}: {\n\t\trequest: Request\n\t\tsession: { userId: string; id: string; expirationDate: Date }\n\t\tredirectTo?: string\n\t\tremember: boolean\n\t},\n\tresponseInit?: ResponseInit,\n) {\n\tconst verification = await prisma.verification.findUnique({\n\t\tselect: { id: true },\n\t\twhere: {\n\t\t\ttarget_type: { target: session.userId, type: twoFAVerificationType },\n\t\t},\n\t})\n\tconst userHasTwoFactor = Boolean(verification)\n\n\tif (userHasTwoFactor) {\n\t\tconst verifySession = await verifySessionStorage.getSession()\n\t\tverifySession.set(unverifiedSessionIdKey, session.id)\n\t\tverifySession.set(rememberKey, remember)\n\t\tconst redirectUrl = getRedirectToUrl({\n\t\t\trequest,\n\t\t\ttype: twoFAVerificationType,\n\t\t\ttarget: session.userId,\n\t\t\tredirectTo,\n\t\t})\n\t\treturn redirect(\n\t\t\t`${redirectUrl.pathname}?${redirectUrl.searchParams}`,\n\t\t\tcombineResponseInits(\n\t\t\t\t{\n\t\t\t\t\theaders: {\n\t\t\t\t\t\t'set-cookie':\n\t\t\t\t\t\t\tawait verifySessionStorage.commitSession(verifySession),\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\tresponseInit,\n\t\t\t),\n\t\t)\n\t} else {\n\t\tconst authSession = await authSessionStorage.getSession(\n\t\t\trequest.headers.get('cookie'),\n\t\t)\n\t\tauthSession.set(sessionKey, session.id)\n\n\t\treturn redirect(\n\t\t\tsafeRedirect(redirectTo),\n\t\t\tcombineResponseInits(\n\t\t\t\t{\n\t\t\t\t\theaders: {\n\t\t\t\t\t\t'set-cookie': await authSessionStorage.commitSession(authSession, {\n\t\t\t\t\t\t\texpires: remember ? session.expirationDate : undefined,\n\t\t\t\t\t\t}),\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\tresponseInit,\n\t\t\t),\n\t\t)\n\t}\n}\n\nexport async function handleVerification({\n\trequest,\n\tsubmission,\n}: VerifyFunctionArgs) {\n\tinvariant(\n\t\tsubmission.status === 'success',\n\t\t'Submission should be successful by now',\n\t)\n\tconst authSession = await authSessionStorage.getSession(\n\t\trequest.headers.get('cookie'),\n\t)\n\tconst verifySession = await verifySessionStorage.getSession(\n\t\trequest.headers.get('cookie'),\n\t)\n\n\tconst remember = verifySession.get(rememberKey)\n\tconst { redirectTo } = submission.value\n\tconst headers = new Headers()\n\tauthSession.set(verifiedTimeKey, Date.now())\n\n\tconst unverifiedSessionId = verifySession.get(unverifiedSessionIdKey)\n\tif (unverifiedSessionId) {\n\t\tconst session = await prisma.session.findUnique({\n\t\t\tselect: { expirationDate: true },\n\t\t\twhere: { id: unverifiedSessionId },\n\t\t})\n\t\tif (!session) {\n\t\t\tthrow await redirectWithToast('/login', {\n\t\t\t\ttype: 'error',\n\t\t\t\ttitle: 'Invalid session',\n\t\t\t\tdescription: 'Could not find session to verify. Please try again.',\n\t\t\t})\n\t\t}\n\t\tauthSession.set(sessionKey, unverifiedSessionId)\n\n\t\theaders.append(\n\t\t\t'set-cookie',\n\t\t\tawait authSessionStorage.commitSession(authSession, {\n\t\t\t\texpires: remember ? session.expirationDate : undefined,\n\t\t\t}),\n\t\t)\n\t} else {\n\t\theaders.append(\n\t\t\t'set-cookie',\n\t\t\tawait authSessionStorage.commitSession(authSession),\n\t\t)\n\t}\n\n\theaders.append(\n\t\t'set-cookie',\n\t\tawait verifySessionStorage.destroySession(verifySession),\n\t)\n\n\treturn redirect(safeRedirect(redirectTo), { headers })\n}\n\nexport async function shouldRequestTwoFA(request: Request) {\n\tconst authSession = await authSessionStorage.getSession(\n\t\trequest.headers.get('cookie'),\n\t)\n\tconst verifySession = await verifySessionStorage.getSession(\n\t\trequest.headers.get('cookie'),\n\t)\n\tif (verifySession.has(unverifiedSessionIdKey)) return true\n\tconst userId = await getUserId(request)\n\tif (!userId) return false\n\t// if it's over two hours since they last verified, we should request 2FA again\n\tconst userHasTwoFA = await prisma.verification.findUnique({\n\t\tselect: { id: true },\n\t\twhere: { target_type: { target: userId, type: twoFAVerificationType } },\n\t})\n\tif (!userHasTwoFA) return false\n\tconst verifiedTime = authSession.get(verifiedTimeKey) ?? new Date(0)\n\tconst twoHours = 1000 * 60 * 2\n\treturn Date.now() - verifiedTime > twoHours\n}\n","import { z } from 'zod'\n\nexport const USERNAME_MIN_LENGTH = 3\nexport const USERNAME_MAX_LENGTH = 20\n\nexport const UsernameSchema = z\n\t.string({ required_error: 'Username is required' })\n\t.min(USERNAME_MIN_LENGTH, { message: 'Username is too short' })\n\t.max(USERNAME_MAX_LENGTH, { message: 'Username is too long' })\n\t.regex(/^[a-zA-Z0-9_]+$/, {\n\t\tmessage: 'Username can only include letters, numbers, and underscores',\n\t})\n\t// users can type the username in any case, but we store it in lowercase\n\t.transform((value) => value.toLowerCase())\n\nexport const PasswordSchema = z\n\t.string({ required_error: 'Password is required' })\n\t.min(6, { message: 'Password is too short' })\n\t// NOTE: bcrypt has a limit of 72 bytes (which should be plenty long)\n\t// https://github.com/epicweb-dev/epic-stack/issues/918\n\t.refine((val) => new TextEncoder().encode(val).length <= 72, {\n\t\tmessage: 'Password is too long',\n\t})\n\nexport const NameSchema = z\n\t.string({ required_error: 'Name is required' })\n\t.min(3, { message: 'Name is too short' })\n\t.max(40, { message: 'Name is too long' })\n\nexport const EmailSchema = z\n\t.string({ required_error: 'Email is required' })\n\t.email({ message: 'Email is invalid' })\n\t.min(3, { message: 'Email is too short' })\n\t.max(100, { message: 'Email is too long' })\n\t// users can type the email in any case, but we store it in lowercase\n\t.transform((value) => value.toLowerCase())\n\nexport const PasswordAndConfirmPasswordSchema = z\n\t.object({ password: PasswordSchema, confirmPassword: PasswordSchema })\n\t.superRefine(({ confirmPassword, password }, ctx) => {\n\t\tif (confirmPassword !== password) {\n\t\t\tctx.addIssue({\n\t\t\t\tpath: ['confirmPassword'],\n\t\t\t\tcode: 'custom',\n\t\t\t\tmessage: 'The passwords must match',\n\t\t\t})\n\t\t}\n\t})\n","import { getFormProps, getInputProps, useForm } from '@conform-to/react'\nimport { getZodConstraint, parseWithZod } from '@conform-to/zod'\nimport { data, redirect, Form, useSearchParams } from 'react-router'\nimport { HoneypotInputs } from 'remix-utils/honeypot/react'\nimport { safeRedirect } from 'remix-utils/safe-redirect'\nimport { z } from 'zod'\nimport { CheckboxField, ErrorList, Field } from '#app/components/forms.tsx'\nimport { Spacer } from '#app/components/spacer.tsx'\nimport { StatusButton } from '#app/components/ui/status-button.tsx'\nimport {\n\tcheckIsCommonPassword,\n\trequireAnonymous,\n\tsessionKey,\n\tsignup,\n} from '#app/utils/auth.server.ts'\nimport { prisma } from '#app/utils/db.server.ts'\nimport { checkHoneypot } from '#app/utils/honeypot.server.ts'\nimport { useIsPending } from '#app/utils/misc.tsx'\nimport { authSessionStorage } from '#app/utils/session.server.ts'\nimport { redirectWithToast } from '#app/utils/toast.server.ts'\nimport {\n\tNameSchema,\n\tPasswordAndConfirmPasswordSchema,\n\tUsernameSchema,\n} from '#app/utils/user-validation.ts'\nimport { verifySessionStorage } from '#app/utils/verification.server.ts'\nimport { type Route } from './+types/onboarding.ts'\n\nexport const onboardingEmailSessionKey = 'onboardingEmail'\n\nconst SignupFormSchema = z\n\t.object({\n\t\tusername: UsernameSchema,\n\t\tname: NameSchema,\n\t\tagreeToTermsOfServiceAndPrivacyPolicy: z.boolean({\n\t\t\trequired_error:\n\t\t\t\t'You must agree to the terms of service and privacy policy',\n\t\t}),\n\t\tremember: z.boolean().optional(),\n\t\tredirectTo: z.string().optional(),\n\t})\n\t.and(PasswordAndConfirmPasswordSchema)\n\nasync function requireOnboardingEmail(request: Request) {\n\tawait requireAnonymous(request)\n\tconst verifySession = await verifySessionStorage.getSession(\n\t\trequest.headers.get('cookie'),\n\t)\n\tconst email = verifySession.get(onboardingEmailSessionKey)\n\tif (typeof email !== 'string' || !email) {\n\t\tthrow redirect('/signup')\n\t}\n\treturn email\n}\n\nexport async function loader({ request }: Route.LoaderArgs) {\n\tconst email = await requireOnboardingEmail(request)\n\treturn { email }\n}\n\nexport async function action({ request }: Route.ActionArgs) {\n\tconst email = await requireOnboardingEmail(request)\n\tconst formData = await request.formData()\n\tawait checkHoneypot(formData)\n\tconst submission = await parseWithZod(formData, {\n\t\tschema: (intent) =>\n\t\t\tSignupFormSchema.superRefine(async (data, ctx) => {\n\t\t\t\tconst existingUser = await prisma.user.findUnique({\n\t\t\t\t\twhere: { username: data.username },\n\t\t\t\t\tselect: { id: true },\n\t\t\t\t})\n\t\t\t\tif (existingUser) {\n\t\t\t\t\tctx.addIssue({\n\t\t\t\t\t\tpath: ['username'],\n\t\t\t\t\t\tcode: z.ZodIssueCode.custom,\n\t\t\t\t\t\tmessage: 'A user already exists with this username',\n\t\t\t\t\t})\n\t\t\t\t\treturn\n\t\t\t\t}\n\t\t\t\tconst isCommonPassword = await checkIsCommonPassword(data.password)\n\t\t\t\tif (isCommonPassword) {\n\t\t\t\t\tctx.addIssue({\n\t\t\t\t\t\tpath: ['password'],\n\t\t\t\t\t\tcode: 'custom',\n\t\t\t\t\t\tmessage: 'Password is too common',\n\t\t\t\t\t})\n\t\t\t\t}\n\t\t\t}).transform(async (data) => {\n\t\t\t\tif (intent !== null) return { ...data, session: null }\n\n\t\t\t\tconst session = await signup({ ...data, email })\n\t\t\t\treturn { ...data, session }\n\t\t\t}),\n\t\tasync: true,\n\t})\n\n\tif (submission.status !== 'success' || !submission.value.session) {\n\t\treturn data(\n\t\t\t{ result: submission.reply() },\n\t\t\t{ status: submission.status === 'error' ? 400 : 200 },\n\t\t)\n\t}\n\n\tconst { session, remember, redirectTo } = submission.value\n\n\tconst authSession = await authSessionStorage.getSession(\n\t\trequest.headers.get('cookie'),\n\t)\n\tauthSession.set(sessionKey, session.id)\n\tconst verifySession = await verifySessionStorage.getSession()\n\tconst headers = new Headers()\n\theaders.append(\n\t\t'set-cookie',\n\t\tawait authSessionStorage.commitSession(authSession, {\n\t\t\texpires: remember ? session.expirationDate : undefined,\n\t\t}),\n\t)\n\theaders.append(\n\t\t'set-cookie',\n\t\tawait verifySessionStorage.destroySession(verifySession),\n\t)\n\n\treturn redirectWithToast(\n\t\tsafeRedirect(redirectTo),\n\t\t{ title: 'Welcome', description: 'Thanks for signing up!' },\n\t\t{ headers },\n\t)\n}\n\nexport const meta: Route.MetaFunction = () => {\n\treturn [{ title: 'Setup Epic Notes Account' }]\n}\n\nexport default function OnboardingRoute({\n\tloaderData,\n\tactionData,\n}: Route.ComponentProps) {\n\tconst isPending = useIsPending()\n\tconst [searchParams] = useSearchParams()\n\tconst redirectTo = searchParams.get('redirectTo')\n\n\tconst [form, fields] = useForm({\n\t\tid: 'onboarding-form',\n\t\tconstraint: getZodConstraint(SignupFormSchema),\n\t\tdefaultValue: { redirectTo },\n\t\tlastResult: actionData?.result,\n\t\tonValidate({ formData }) {\n\t\t\treturn parseWithZod(formData, { schema: SignupFormSchema })\n\t\t},\n\t\tshouldRevalidate: 'onBlur',\n\t})\n\n\treturn (\n\t\t<div className=\"container flex min-h-full flex-col justify-center pt-20 pb-32\">\n\t\t\t<div className=\"mx-auto w-full max-w-lg\">\n\t\t\t\t<div className=\"flex flex-col gap-3 text-center\">\n\t\t\t\t\t<h1 className=\"text-h1\">Welcome aboard {loaderData.email}!</h1>\n\t\t\t\t\t<p className=\"text-body-md text-muted-foreground\">\n\t\t\t\t\t\tPlease enter your details.\n\t\t\t\t\t</p>\n\t\t\t\t</div>\n\t\t\t\t<Spacer size=\"xs\" />\n\t\t\t\t<Form\n\t\t\t\t\tmethod=\"POST\"\n\t\t\t\t\tclassName=\"mx-auto max-w-sm min-w-full sm:min-w-[368px]\"\n\t\t\t\t\t{...getFormProps(form)}\n\t\t\t\t>\n\t\t\t\t\t<HoneypotInputs />\n\t\t\t\t\t<Field\n\t\t\t\t\t\tlabelProps={{ htmlFor: fields.username.id, children: 'Username' }}\n\t\t\t\t\t\tinputProps={{\n\t\t\t\t\t\t\t...getInputProps(fields.username, { type: 'text' }),\n\t\t\t\t\t\t\tautoComplete: 'username',\n\t\t\t\t\t\t\tclassName: 'lowercase',\n\t\t\t\t\t\t}}\n\t\t\t\t\t\terrors={fields.username.errors}\n\t\t\t\t\t/>\n\t\t\t\t\t<Field\n\t\t\t\t\t\tlabelProps={{ htmlFor: fields.name.id, children: 'Name' }}\n\t\t\t\t\t\tinputProps={{\n\t\t\t\t\t\t\t...getInputProps(fields.name, { type: 'text' }),\n\t\t\t\t\t\t\tautoComplete: 'name',\n\t\t\t\t\t\t}}\n\t\t\t\t\t\terrors={fields.name.errors}\n\t\t\t\t\t/>\n\t\t\t\t\t<Field\n\t\t\t\t\t\tlabelProps={{ htmlFor: fields.password.id, children: 'Password' }}\n\t\t\t\t\t\tinputProps={{\n\t\t\t\t\t\t\t...getInputProps(fields.password, { type: 'password' }),\n\t\t\t\t\t\t\tautoComplete: 'new-password',\n\t\t\t\t\t\t}}\n\t\t\t\t\t\terrors={fields.password.errors}\n\t\t\t\t\t/>\n\n\t\t\t\t\t<Field\n\t\t\t\t\t\tlabelProps={{\n\t\t\t\t\t\t\thtmlFor: fields.confirmPassword.id,\n\t\t\t\t\t\t\tchildren: 'Confirm Password',\n\t\t\t\t\t\t}}\n\t\t\t\t\t\tinputProps={{\n\t\t\t\t\t\t\t...getInputProps(fields.confirmPassword, { type: 'password' }),\n\t\t\t\t\t\t\tautoComplete: 'new-password',\n\t\t\t\t\t\t}}\n\t\t\t\t\t\terrors={fields.confirmPassword.errors}\n\t\t\t\t\t/>\n\n\t\t\t\t\t<CheckboxField\n\t\t\t\t\t\tlabelProps={{\n\t\t\t\t\t\t\thtmlFor: fields.agreeToTermsOfServiceAndPrivacyPolicy.id,\n\t\t\t\t\t\t\tchildren:\n\t\t\t\t\t\t\t\t'Do you agree to our Terms of Service and Privacy Policy?',\n\t\t\t\t\t\t}}\n\t\t\t\t\t\tbuttonProps={getInputProps(\n\t\t\t\t\t\t\tfields.agreeToTermsOfServiceAndPrivacyPolicy,\n\t\t\t\t\t\t\t{ type: 'checkbox' },\n\t\t\t\t\t\t)}\n\t\t\t\t\t\terrors={fields.agreeToTermsOfServiceAndPrivacyPolicy.errors}\n\t\t\t\t\t/>\n\t\t\t\t\t<CheckboxField\n\t\t\t\t\t\tlabelProps={{\n\t\t\t\t\t\t\thtmlFor: fields.remember.id,\n\t\t\t\t\t\t\tchildren: 'Remember me',\n\t\t\t\t\t\t}}\n\t\t\t\t\t\tbuttonProps={getInputProps(fields.remember, { type: 'checkbox' })}\n\t\t\t\t\t\terrors={fields.remember.errors}\n\t\t\t\t\t/>\n\n\t\t\t\t\t<input {...getInputProps(fields.redirectTo, { type: 'hidden' })} />\n\t\t\t\t\t<ErrorList errors={form.errors} id={form.errorId} />\n\n\t\t\t\t\t<div className=\"flex items-center justify-between gap-6\">\n\t\t\t\t\t\t<StatusButton\n\t\t\t\t\t\t\tclassName=\"w-full\"\n\t\t\t\t\t\t\tstatus={isPending ? 'pending' : (form.status ?? 'idle')}\n\t\t\t\t\t\t\ttype=\"submit\"\n\t\t\t\t\t\t\tdisabled={isPending}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\tCreate an account\n\t\t\t\t\t\t</StatusButton>\n\t\t\t\t\t</div>\n\t\t\t\t</Form>\n\t\t\t</div>\n\t\t</div>\n\t)\n}\n","import { invariant } from '@epic-web/invariant'\nimport { redirect } from 'react-router'\nimport { verifySessionStorage } from '#app/utils/verification.server.ts'\nimport { onboardingEmailSessionKey } from './onboarding.tsx'\nimport { type VerifyFunctionArgs } from './verify.server.ts'\n\nexport async function handleVerification({ submission }: VerifyFunctionArgs) {\n\tinvariant(\n\t\tsubmission.status === 'success',\n\t\t'Submission should be successful by now',\n\t)\n\tconst verifySession = await verifySessionStorage.getSession()\n\tverifySession.set(onboardingEmailSessionKey, submission.value.target)\n\treturn redirect('/onboarding', {\n\t\theaders: {\n\t\t\t'set-cookie': await verifySessionStorage.commitSession(verifySession),\n\t\t},\n\t})\n}\n","import { getFormProps, getInputProps, useForm } from '@conform-to/react'\nimport { getZodConstraint, parseWithZod } from '@conform-to/zod'\nimport { type SEOHandle } from '@nasa-gcn/remix-seo'\nimport { data, redirect, Form } from 'react-router'\nimport { GeneralErrorBoundary } from '#app/components/error-boundary.tsx'\nimport { ErrorList, Field } from '#app/components/forms.tsx'\nimport { StatusButton } from '#app/components/ui/status-button.tsx'\nimport {\n\tcheckIsCommonPassword,\n\trequireAnonymous,\n\tresetUserPassword,\n} from '#app/utils/auth.server.ts'\nimport { useIsPending } from '#app/utils/misc.tsx'\nimport { PasswordAndConfirmPasswordSchema } from '#app/utils/user-validation.ts'\nimport { verifySessionStorage } from '#app/utils/verification.server.ts'\nimport { type Route } from './+types/reset-password.ts'\n\nexport const handle: SEOHandle = {\n\tgetSitemapEntries: () => null,\n}\n\nexport const resetPasswordUsernameSessionKey = 'resetPasswordUsername'\n\nconst ResetPasswordSchema = PasswordAndConfirmPasswordSchema\n\nasync function requireResetPasswordUsername(request: Request) {\n\tawait requireAnonymous(request)\n\tconst verifySession = await verifySessionStorage.getSession(\n\t\trequest.headers.get('cookie'),\n\t)\n\tconst resetPasswordUsername = verifySession.get(\n\t\tresetPasswordUsernameSessionKey,\n\t)\n\tif (typeof resetPasswordUsername !== 'string' || !resetPasswordUsername) {\n\t\tthrow redirect('/login')\n\t}\n\treturn resetPasswordUsername\n}\n\nexport async function loader({ request }: Route.LoaderArgs) {\n\tconst resetPasswordUsername = await requireResetPasswordUsername(request)\n\treturn { resetPasswordUsername }\n}\n\nexport async function action({ request }: Route.ActionArgs) {\n\tconst resetPasswordUsername = await requireResetPasswordUsername(request)\n\tconst formData = await request.formData()\n\tconst submission = await parseWithZod(formData, {\n\t\tschema: ResetPasswordSchema.superRefine(async ({ password }, ctx) => {\n\t\t\tconst isCommonPassword = await checkIsCommonPassword(password)\n\t\t\tif (isCommonPassword) {\n\t\t\t\tctx.addIssue({\n\t\t\t\t\tpath: ['password'],\n\t\t\t\t\tcode: 'custom',\n\t\t\t\t\tmessage: 'Password is too common',\n\t\t\t\t})\n\t\t\t}\n\t\t}),\n\t\tasync: true,\n\t})\n\tif (submission.status !== 'success') {\n\t\treturn data(\n\t\t\t{ result: submission.reply() },\n\t\t\t{ status: submission.status === 'error' ? 400 : 200 },\n\t\t)\n\t}\n\tconst { password } = submission.value\n\n\tawait resetUserPassword({ username: resetPasswordUsername, password })\n\tconst verifySession = await verifySessionStorage.getSession()\n\treturn redirect('/login', {\n\t\theaders: {\n\t\t\t'set-cookie': await verifySessionStorage.destroySession(verifySession),\n\t\t},\n\t})\n}\n\nexport const meta: Route.MetaFunction = () => {\n\treturn [{ title: 'Reset Password | Epic Notes' }]\n}\n\nexport default function ResetPasswordPage({\n\tloaderData,\n\tactionData,\n}: Route.ComponentProps) {\n\tconst isPending = useIsPending()\n\n\tconst [form, fields] = useForm({\n\t\tid: 'reset-password',\n\t\tconstraint: getZodConstraint(ResetPasswordSchema),\n\t\tlastResult: actionData?.result,\n\t\tonValidate({ formData }) {\n\t\t\treturn parseWithZod(formData, { schema: ResetPasswordSchema })\n\t\t},\n\t\tshouldRevalidate: 'onBlur',\n\t})\n\n\treturn (\n\t\t<div className=\"container flex flex-col justify-center pt-20 pb-32\">\n\t\t\t<div className=\"text-center\">\n\t\t\t\t<h1 className=\"text-h1\">Password Reset</h1>\n\t\t\t\t<p className=\"text-body-md text-muted-foreground mt-3\">\n\t\t\t\t\tHi, {loaderData.resetPasswordUsername}. No worries. It happens all the\n\t\t\t\t\ttime.\n\t\t\t\t</p>\n\t\t\t</div>\n\t\t\t<div className=\"mx-auto mt-16 max-w-sm min-w-full sm:min-w-[368px]\">\n\t\t\t\t<Form method=\"POST\" {...getFormProps(form)}>\n\t\t\t\t\t<Field\n\t\t\t\t\t\tlabelProps={{\n\t\t\t\t\t\t\thtmlFor: fields.password.id,\n\t\t\t\t\t\t\tchildren: 'New Password',\n\t\t\t\t\t\t}}\n\t\t\t\t\t\tinputProps={{\n\t\t\t\t\t\t\t...getInputProps(fields.password, { type: 'password' }),\n\t\t\t\t\t\t\tautoComplete: 'new-password',\n\t\t\t\t\t\t\tautoFocus: true,\n\t\t\t\t\t\t}}\n\t\t\t\t\t\terrors={fields.password.errors}\n\t\t\t\t\t/>\n\t\t\t\t\t<Field\n\t\t\t\t\t\tlabelProps={{\n\t\t\t\t\t\t\thtmlFor: fields.confirmPassword.id,\n\t\t\t\t\t\t\tchildren: 'Confirm Password',\n\t\t\t\t\t\t}}\n\t\t\t\t\t\tinputProps={{\n\t\t\t\t\t\t\t...getInputProps(fields.confirmPassword, { type: 'password' }),\n\t\t\t\t\t\t\tautoComplete: 'new-password',\n\t\t\t\t\t\t}}\n\t\t\t\t\t\terrors={fields.confirmPassword.errors}\n\t\t\t\t\t/>\n\n\t\t\t\t\t<ErrorList errors={form.errors} id={form.errorId} />\n\n\t\t\t\t\t<StatusButton\n\t\t\t\t\t\tclassName=\"w-full\"\n\t\t\t\t\t\tstatus={isPending ? 'pending' : (form.status ?? 'idle')}\n\t\t\t\t\t\ttype=\"submit\"\n\t\t\t\t\t\tdisabled={isPending}\n\t\t\t\t\t>\n\t\t\t\t\t\tReset password\n\t\t\t\t\t</StatusButton>\n\t\t\t\t</Form>\n\t\t\t</div>\n\t\t</div>\n\t)\n}\n\nexport function ErrorBoundary() {\n\treturn <GeneralErrorBoundary />\n}\n","import { invariant } from '@epic-web/invariant'\nimport { data, redirect } from 'react-router'\nimport { prisma } from '#app/utils/db.server.ts'\nimport { verifySessionStorage } from '#app/utils/verification.server.ts'\nimport { resetPasswordUsernameSessionKey } from './reset-password.tsx'\nimport { type VerifyFunctionArgs } from './verify.server.ts'\n\nexport async function handleVerification({ submission }: VerifyFunctionArgs) {\n\tinvariant(\n\t\tsubmission.status === 'success',\n\t\t'Submission should be successful by now',\n\t)\n\tconst target = submission.value.target\n\tconst user = await prisma.user.findFirst({\n\t\twhere: { OR: [{ email: target }, { username: target }] },\n\t\tselect: { email: true, username: true },\n\t})\n\t// we don't want to say the user is not found if the email is not found\n\t// because that would allow an attacker to check if an email is registered\n\tif (!user) {\n\t\treturn data(\n\t\t\t{ result: submission.reply({ fieldErrors: { code: ['Invalid code'] } }) },\n\t\t\t{ status: 400 },\n\t\t)\n\t}\n\n\tconst verifySession = await verifySessionStorage.getSession()\n\tverifySession.set(resetPasswordUsernameSessionKey, user.username)\n\treturn redirect('/reset-password', {\n\t\theaders: {\n\t\t\t'set-cookie': await verifySessionStorage.commitSession(verifySession),\n\t\t},\n\t})\n}\n","import { getFormProps, getInputProps, useForm } from '@conform-to/react'\nimport { getZodConstraint, parseWithZod } from '@conform-to/zod'\nimport { type SEOHandle } from '@nasa-gcn/remix-seo'\nimport { Form, useSearchParams } from 'react-router'\nimport { HoneypotInputs } from 'remix-utils/honeypot/react'\nimport { z } from 'zod'\nimport { GeneralErrorBoundary } from '#app/components/error-boundary.tsx'\nimport { ErrorList, OTPField } from '#app/components/forms.tsx'\nimport { Spacer } from '#app/components/spacer.tsx'\nimport { StatusButton } from '#app/components/ui/status-button.tsx'\nimport { checkHoneypot } from '#app/utils/honeypot.server.ts'\nimport { useIsPending } from '#app/utils/misc.tsx'\nimport { type Route } from './+types/verify.ts'\nimport { validateRequest } from './verify.server.ts'\n\nexport const handle: SEOHandle = {\n\tgetSitemapEntries: () => null,\n}\n\nexport const codeQueryParam = 'code'\nexport const targetQueryParam = 'target'\nexport const typeQueryParam = 'type'\nexport const redirectToQueryParam = 'redirectTo'\nconst types = ['onboarding', 'reset-password', 'change-email', '2fa'] as const\nconst VerificationTypeSchema = z.enum(types)\nexport type VerificationTypes = z.infer<typeof VerificationTypeSchema>\n\nexport const VerifySchema = z.object({\n\t[codeQueryParam]: z.string().min(6).max(6),\n\t[typeQueryParam]: VerificationTypeSchema,\n\t[targetQueryParam]: z.string(),\n\t[redirectToQueryParam]: z.string().optional(),\n})\n\nexport async function action({ request }: Route.ActionArgs) {\n\tconst formData = await request.formData()\n\tawait checkHoneypot(formData)\n\treturn validateRequest(request, formData)\n}\n\nexport default function VerifyRoute({ actionData }: Route.ComponentProps) {\n\tconst [searchParams] = useSearchParams()\n\tconst isPending = useIsPending()\n\tconst parseWithZoddType = VerificationTypeSchema.safeParse(\n\t\tsearchParams.get(typeQueryParam),\n\t)\n\tconst type = parseWithZoddType.success ? parseWithZoddType.data : null\n\n\tconst checkEmail = (\n\t\t<>\n\t\t\t<h1 className=\"text-h1\">Check your email</h1>\n\t\t\t<p className=\"text-body-md text-muted-foreground mt-3\">\n\t\t\t\tWe've sent you a code to verify your email address.\n\t\t\t</p>\n\t\t</>\n\t)\n\n\tconst headings: Record<VerificationTypes, React.ReactNode> = {\n\t\tonboarding: checkEmail,\n\t\t'reset-password': checkEmail,\n\t\t'change-email': checkEmail,\n\t\t'2fa': (\n\t\t\t<>\n\t\t\t\t<h1 className=\"text-h1\">Check your 2FA app</h1>\n\t\t\t\t<p className=\"text-body-md text-muted-foreground mt-3\">\n\t\t\t\t\tPlease enter your 2FA code to verify your identity.\n\t\t\t\t</p>\n\t\t\t</>\n\t\t),\n\t}\n\n\tconst [form, fields] = useForm({\n\t\tid: 'verify-form',\n\t\tconstraint: getZodConstraint(VerifySchema),\n\t\tlastResult: actionData?.result,\n\t\tonValidate({ formData }) {\n\t\t\treturn parseWithZod(formData, { schema: VerifySchema })\n\t\t},\n\t\tdefaultValue: {\n\t\t\tcode: searchParams.get(codeQueryParam),\n\t\t\ttype: type,\n\t\t\ttarget: searchParams.get(targetQueryParam),\n\t\t\tredirectTo: searchParams.get(redirectToQueryParam),\n\t\t},\n\t})\n\n\treturn (\n\t\t<main className=\"container flex flex-col justify-center pt-20 pb-32\">\n\t\t\t<div className=\"text-center\">\n\t\t\t\t{type ? headings[type] : 'Invalid Verification Type'}\n\t\t\t</div>\n\n\t\t\t<Spacer size=\"xs\" />\n\n\t\t\t<div className=\"mx-auto flex w-72 max-w-full flex-col justify-center gap-1\">\n\t\t\t\t<div>\n\t\t\t\t\t<ErrorList errors={form.errors} id={form.errorId} />\n\t\t\t\t</div>\n\t\t\t\t<div className=\"flex w-full gap-2\">\n\t\t\t\t\t<Form method=\"POST\" {...getFormProps(form)} className=\"flex-1\">\n\t\t\t\t\t\t<HoneypotInputs />\n\t\t\t\t\t\t<div className=\"flex items-center justify-center\">\n\t\t\t\t\t\t\t<OTPField\n\t\t\t\t\t\t\t\tlabelProps={{\n\t\t\t\t\t\t\t\t\thtmlFor: fields[codeQueryParam].id,\n\t\t\t\t\t\t\t\t\tchildren: 'Code',\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\tinputProps={{\n\t\t\t\t\t\t\t\t\t...getInputProps(fields[codeQueryParam], { type: 'text' }),\n\t\t\t\t\t\t\t\t\tautoComplete: 'one-time-code',\n\t\t\t\t\t\t\t\t\tautoFocus: true,\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\terrors={fields[codeQueryParam].errors}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t{...getInputProps(fields[typeQueryParam], { type: 'hidden' })}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t{...getInputProps(fields[targetQueryParam], { type: 'hidden' })}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t{...getInputProps(fields[redirectToQueryParam], {\n\t\t\t\t\t\t\t\ttype: 'hidden',\n\t\t\t\t\t\t\t})}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<StatusButton\n\t\t\t\t\t\t\tclassName=\"w-full\"\n\t\t\t\t\t\t\tstatus={isPending ? 'pending' : (form.status ?? 'idle')}\n\t\t\t\t\t\t\ttype=\"submit\"\n\t\t\t\t\t\t\tdisabled={isPending}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\tSubmit\n\t\t\t\t\t\t</StatusButton>\n\t\t\t\t\t</Form>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</main>\n\t)\n}\n\nexport function ErrorBoundary() {\n\treturn <GeneralErrorBoundary />\n}\n","import { type Submission } from '@conform-to/react'\nimport { parseWithZod } from '@conform-to/zod'\nimport { data } from 'react-router'\nimport { z } from 'zod'\nimport { handleVerification as handleChangeEmailVerification } from '#app/routes/settings+/profile.change-email.server.tsx'\nimport { twoFAVerificationType } from '#app/routes/settings+/profile.two-factor.tsx'\nimport { requireUserId } from '#app/utils/auth.server.ts'\nimport { prisma } from '#app/utils/db.server.ts'\nimport { getDomainUrl } from '#app/utils/misc.tsx'\nimport { redirectWithToast } from '#app/utils/toast.server.ts'\nimport { generateTOTP, verifyTOTP } from '#app/utils/totp.server.ts'\nimport { type twoFAVerifyVerificationType } from '../settings+/profile.two-factor.verify.tsx'\nimport {\n\thandleVerification as handleLoginTwoFactorVerification,\n\tshouldRequestTwoFA,\n} from './login.server.ts'\nimport { handleVerification as handleOnboardingVerification } from './onboarding.server.ts'\nimport { handleVerification as handleResetPasswordVerification } from './reset-password.server.ts'\nimport {\n\tVerifySchema,\n\tcodeQueryParam,\n\tredirectToQueryParam,\n\ttargetQueryParam,\n\ttypeQueryParam,\n\ttype VerificationTypes,\n} from './verify.tsx'\n\nexport type VerifyFunctionArgs = {\n\trequest: Request\n\tsubmission: Submission<\n\t\tz.input<typeof VerifySchema>,\n\t\tstring[],\n\t\tz.output<typeof VerifySchema>\n\t>\n\tbody: FormData | URLSearchParams\n}\n\nexport function getRedirectToUrl({\n\trequest,\n\ttype,\n\ttarget,\n\tredirectTo,\n}: {\n\trequest: Request\n\ttype: VerificationTypes\n\ttarget: string\n\tredirectTo?: string\n}) {\n\tconst redirectToUrl = new URL(`${getDomainUrl(request)}/verify`)\n\tredirectToUrl.searchParams.set(typeQueryParam, type)\n\tredirectToUrl.searchParams.set(targetQueryParam, target)\n\tif (redirectTo) {\n\t\tredirectToUrl.searchParams.set(redirectToQueryParam, redirectTo)\n\t}\n\treturn redirectToUrl\n}\n\nexport async function requireRecentVerification(request: Request) {\n\tconst userId = await requireUserId(request)\n\tconst shouldReverify = await shouldRequestTwoFA(request)\n\tif (shouldReverify) {\n\t\tconst reqUrl = new URL(request.url)\n\t\tconst redirectUrl = getRedirectToUrl({\n\t\t\trequest,\n\t\t\ttarget: userId,\n\t\t\ttype: twoFAVerificationType,\n\t\t\tredirectTo: reqUrl.pathname + reqUrl.search,\n\t\t})\n\t\tthrow await redirectWithToast(redirectUrl.toString(), {\n\t\t\ttitle: 'Please Reverify',\n\t\t\tdescription: 'Please reverify your account before proceeding',\n\t\t})\n\t}\n}\n\nexport async function prepareVerification({\n\tperiod,\n\trequest,\n\ttype,\n\ttarget,\n}: {\n\tperiod: number\n\trequest: Request\n\ttype: VerificationTypes\n\ttarget: string\n}) {\n\tconst verifyUrl = getRedirectToUrl({ request, type, target })\n\tconst redirectTo = new URL(verifyUrl.toString())\n\n\tconst { otp, ...verificationConfig } = await generateTOTP({\n\t\talgorithm: 'SHA-256',\n\t\t// Leaving off 0, O, and I on purpose to avoid confusing users.\n\t\tcharSet: 'ABCDEFGHJKLMNPQRSTUVWXYZ123456789',\n\t\tperiod,\n\t})\n\tconst verificationData = {\n\t\ttype,\n\t\ttarget,\n\t\t...verificationConfig,\n\t\texpiresAt: new Date(Date.now() + verificationConfig.period * 1000),\n\t}\n\tawait prisma.verification.upsert({\n\t\twhere: { target_type: { target, type } },\n\t\tcreate: verificationData,\n\t\tupdate: verificationData,\n\t})\n\n\t// add the otp to the url we'll email the user.\n\tverifyUrl.searchParams.set(codeQueryParam, otp)\n\n\treturn { otp, redirectTo, verifyUrl }\n}\n\nexport async function isCodeValid({\n\tcode,\n\ttype,\n\ttarget,\n}: {\n\tcode: string\n\ttype: VerificationTypes | typeof twoFAVerifyVerificationType\n\ttarget: string\n}) {\n\tconst verification = await prisma.verification.findUnique({\n\t\twhere: {\n\t\t\ttarget_type: { target, type },\n\t\t\tOR: [{ expiresAt: { gt: new Date() } }, { expiresAt: null }],\n\t\t},\n\t\tselect: { algorithm: true, secret: true, period: true, charSet: true },\n\t})\n\tif (!verification) return false\n\tconst result = await verifyTOTP({\n\t\totp: code,\n\t\t...verification,\n\t})\n\tif (!result) return false\n\n\treturn true\n}\n\nexport async function validateRequest(\n\trequest: Request,\n\tbody: URLSearchParams | FormData,\n) {\n\tconst submission = await parseWithZod(body, {\n\t\tschema: VerifySchema.superRefine(async (data, ctx) => {\n\t\t\tconst codeIsValid = await isCodeValid({\n\t\t\t\tcode: data[codeQueryParam],\n\t\t\t\ttype: data[typeQueryParam],\n\t\t\t\ttarget: data[targetQueryParam],\n\t\t\t})\n\t\t\tif (!codeIsValid) {\n\t\t\t\tctx.addIssue({\n\t\t\t\t\tpath: ['code'],\n\t\t\t\t\tcode: z.ZodIssueCode.custom,\n\t\t\t\t\tmessage: `Invalid code`,\n\t\t\t\t})\n\t\t\t\treturn\n\t\t\t}\n\t\t}),\n\t\tasync: true,\n\t})\n\n\tif (submission.status !== 'success') {\n\t\treturn data(\n\t\t\t{ result: submission.reply() },\n\t\t\t{ status: submission.status === 'error' ? 400 : 200 },\n\t\t)\n\t}\n\n\tconst { value: submissionValue } = submission\n\n\tasync function deleteVerification() {\n\t\tawait prisma.verification.delete({\n\t\t\twhere: {\n\t\t\t\ttarget_type: {\n\t\t\t\t\ttype: submissionValue[typeQueryParam],\n\t\t\t\t\ttarget: submissionValue[targetQueryParam],\n\t\t\t\t},\n\t\t\t},\n\t\t})\n\t}\n\n\tswitch (submissionValue[typeQueryParam]) {\n\t\tcase 'reset-password': {\n\t\t\tawait deleteVerification()\n\t\t\treturn handleResetPasswordVerification({ request, body, submission })\n\t\t}\n\t\tcase 'onboarding': {\n\t\t\tawait deleteVerification()\n\t\t\treturn handleOnboardingVerification({ request, body, submission })\n\t\t}\n\t\tcase 'change-email': {\n\t\t\tawait deleteVerification()\n\t\t\treturn handleChangeEmailVerification({ request, body, submission })\n\t\t}\n\t\tcase '2fa': {\n\t\t\treturn handleLoginTwoFactorVerification({ request, body, submission })\n\t\t}\n\t}\n}\n","import { getFormProps, getInputProps, useForm } from '@conform-to/react'\nimport { getZodConstraint, parseWithZod } from '@conform-to/zod'\nimport { type SEOHandle } from '@nasa-gcn/remix-seo'\nimport { data, redirect, Form } from 'react-router'\nimport { z } from 'zod'\nimport { ErrorList, Field } from '#app/components/forms.tsx'\nimport { Icon } from '#app/components/ui/icon.tsx'\nimport { StatusButton } from '#app/components/ui/status-button.tsx'\nimport {\n\tprepareVerification,\n\trequireRecentVerification,\n} from '#app/routes/_auth+/verify.server.ts'\nimport { requireUserId } from '#app/utils/auth.server.ts'\nimport { prisma } from '#app/utils/db.server.ts'\nimport { sendEmail } from '#app/utils/email.server.ts'\nimport { useIsPending } from '#app/utils/misc.tsx'\nimport { EmailSchema } from '#app/utils/user-validation.ts'\nimport { verifySessionStorage } from '#app/utils/verification.server.ts'\nimport { type Route } from './+types/profile.change-email.ts'\nimport { EmailChangeEmail } from './profile.change-email.server.tsx'\nimport { type BreadcrumbHandle } from './profile.tsx'\n\nexport const handle: BreadcrumbHandle & SEOHandle = {\n\tbreadcrumb: <Icon name=\"envelope-closed\">Change Email</Icon>,\n\tgetSitemapEntries: () => null,\n}\n\nexport const newEmailAddressSessionKey = 'new-email-address'\n\nconst ChangeEmailSchema = z.object({\n\temail: EmailSchema,\n})\n\nexport async function loader({ request }: Route.LoaderArgs) {\n\tawait requireRecentVerification(request)\n\tconst userId = await requireUserId(request)\n\tconst user = await prisma.user.findUnique({\n\t\twhere: { id: userId },\n\t\tselect: { email: true },\n\t})\n\tif (!user) {\n\t\tconst params = new URLSearchParams({ redirectTo: request.url })\n\t\tthrow redirect(`/login?${params}`)\n\t}\n\treturn { user }\n}\n\nexport async function action({ request }: Route.ActionArgs) {\n\tconst userId = await requireUserId(request)\n\tconst formData = await request.formData()\n\tconst submission = await parseWithZod(formData, {\n\t\tschema: ChangeEmailSchema.superRefine(async (data, ctx) => {\n\t\t\tconst existingUser = await prisma.user.findUnique({\n\t\t\t\twhere: { email: data.email },\n\t\t\t})\n\t\t\tif (existingUser) {\n\t\t\t\tctx.addIssue({\n\t\t\t\t\tpath: ['email'],\n\t\t\t\t\tcode: z.ZodIssueCode.custom,\n\t\t\t\t\tmessage: 'This email is already in use.',\n\t\t\t\t})\n\t\t\t}\n\t\t}),\n\t\tasync: true,\n\t})\n\n\tif (submission.status !== 'success') {\n\t\treturn data(\n\t\t\t{ result: submission.reply() },\n\t\t\t{ status: submission.status === 'error' ? 400 : 200 },\n\t\t)\n\t}\n\tconst { otp, redirectTo, verifyUrl } = await prepareVerification({\n\t\tperiod: 10 * 60,\n\t\trequest,\n\t\ttarget: userId,\n\t\ttype: 'change-email',\n\t})\n\n\tconst response = await sendEmail({\n\t\tto: submission.value.email,\n\t\tsubject: `Epic Notes Email Change Verification`,\n\t\treact: <EmailChangeEmail verifyUrl={verifyUrl.toString()} otp={otp} />,\n\t})\n\n\tif (response.status === 'success') {\n\t\tconst verifySession = await verifySessionStorage.getSession()\n\t\tverifySession.set(newEmailAddressSessionKey, submission.value.email)\n\t\treturn redirect(redirectTo.toString(), {\n\t\t\theaders: {\n\t\t\t\t'set-cookie': await verifySessionStorage.commitSession(verifySession),\n\t\t\t},\n\t\t})\n\t} else {\n\t\treturn data(\n\t\t\t{ result: submission.reply({ formErrors: [response.error.message] }) },\n\t\t\t{ status: 500 },\n\t\t)\n\t}\n}\n\nexport default function ChangeEmailIndex({\n\tloaderData,\n\tactionData,\n}: Route.ComponentProps) {\n\tconst [form, fields] = useForm({\n\t\tid: 'change-email-form',\n\t\tconstraint: getZodConstraint(ChangeEmailSchema),\n\t\tlastResult: actionData?.result,\n\t\tonValidate({ formData }) {\n\t\t\treturn parseWithZod(formData, { schema: ChangeEmailSchema })\n\t\t},\n\t})\n\n\tconst isPending = useIsPending()\n\treturn (\n\t\t<div>\n\t\t\t<h1 className=\"text-h1\">Change Email</h1>\n\t\t\t<p>You will receive an email at the new email address to confirm.</p>\n\t\t\t<p>\n\t\t\t\tAn email notice will also be sent to your old address{' '}\n\t\t\t\t{loaderData.user.email}.\n\t\t\t</p>\n\t\t\t<div className=\"mx-auto mt-5 max-w-sm\">\n\t\t\t\t<Form method=\"POST\" {...getFormProps(form)}>\n\t\t\t\t\t<Field\n\t\t\t\t\t\tlabelProps={{ children: 'New Email' }}\n\t\t\t\t\t\tinputProps={{\n\t\t\t\t\t\t\t...getInputProps(fields.email, { type: 'email' }),\n\t\t\t\t\t\t\tautoComplete: 'email',\n\t\t\t\t\t\t}}\n\t\t\t\t\t\terrors={fields.email.errors}\n\t\t\t\t\t/>\n\t\t\t\t\t<ErrorList id={form.errorId} errors={form.errors} />\n\t\t\t\t\t<div>\n\t\t\t\t\t\t<StatusButton\n\t\t\t\t\t\t\tstatus={isPending ? 'pending' : (form.status ?? 'idle')}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\tSend Confirmation\n\t\t\t\t\t\t</StatusButton>\n\t\t\t\t\t</div>\n\t\t\t\t</Form>\n\t\t\t</div>\n\t\t</div>\n\t)\n}\n","import { Form } from 'react-router'\nimport { z } from 'zod'\nimport { Icon } from '#app/components/ui/icon.tsx'\nimport { StatusButton } from '#app/components/ui/status-button.tsx'\nimport { useIsPending } from './misc.tsx'\n\nexport const GITHUB_PROVIDER_NAME = 'github'\n// to add another provider, set their name here and add it to the providerNames below\n\nexport const providerNames = [GITHUB_PROVIDER_NAME] as const\nexport const ProviderNameSchema = z.enum(providerNames)\nexport type ProviderName = z.infer<typeof ProviderNameSchema>\n\nexport const providerLabels: Record<ProviderName, string> = {\n\t[GITHUB_PROVIDER_NAME]: 'GitHub',\n} as const\n\nexport const providerIcons: Record<ProviderName, React.ReactNode> = {\n\t[GITHUB_PROVIDER_NAME]: <Icon name=\"github-logo\" />,\n} as const\n\nexport function ProviderConnectionForm({\n\tredirectTo,\n\ttype,\n\tproviderName,\n}: {\n\tredirectTo?: string | null\n\ttype: 'Connect' | 'Login' | 'Signup'\n\tproviderName: ProviderName\n}) {\n\tconst label = providerLabels[providerName]\n\tconst formAction = `/auth/${providerName}`\n\tconst isPending = useIsPending({ formAction })\n\treturn (\n\t\t<Form\n\t\t\tclassName=\"flex items-center justify-center gap-2\"\n\t\t\taction={formAction}\n\t\t\tmethod=\"POST\"\n\t\t>\n\t\t\t{redirectTo ? (\n\t\t\t\t<input type=\"hidden\" name=\"redirectTo\" value={redirectTo} />\n\t\t\t) : null}\n\t\t\t<StatusButton\n\t\t\t\ttype=\"submit\"\n\t\t\t\tclassName=\"w-full\"\n\t\t\t\tstatus={isPending ? 'pending' : 'idle'}\n\t\t\t>\n\t\t\t\t<span className=\"inline-flex items-center gap-1.5\">\n\t\t\t\t\t{providerIcons[providerName]}\n\t\t\t\t\t<span>\n\t\t\t\t\t\t{type} with {label}\n\t\t\t\t\t</span>\n\t\t\t\t</span>\n\t\t\t</StatusButton>\n\t\t</Form>\n\t)\n}\n","import { invariantResponse } from '@epic-web/invariant'\nimport { type SEOHandle } from '@nasa-gcn/remix-seo'\nimport { useState } from 'react'\nimport { data, useFetcher } from 'react-router'\nimport { Icon } from '#app/components/ui/icon.tsx'\nimport { StatusButton } from '#app/components/ui/status-button.tsx'\nimport {\n\tTooltip,\n\tTooltipContent,\n\tTooltipProvider,\n\tTooltipTrigger,\n} from '#app/components/ui/tooltip.tsx'\nimport { requireUserId } from '#app/utils/auth.server.ts'\nimport { resolveConnectionData } from '#app/utils/connections.server.ts'\nimport {\n\tProviderConnectionForm,\n\ttype ProviderName,\n\tProviderNameSchema,\n\tproviderIcons,\n\tproviderNames,\n} from '#app/utils/connections.tsx'\nimport { prisma } from '#app/utils/db.server.ts'\nimport { pipeHeaders } from '#app/utils/headers.server.js'\nimport { makeTimings } from '#app/utils/timing.server.ts'\nimport { createToastHeaders } from '#app/utils/toast.server.ts'\nimport { type Route } from './+types/profile.connections.ts'\nimport { type BreadcrumbHandle } from './profile.tsx'\n\nexport const handle: BreadcrumbHandle & SEOHandle = {\n\tbreadcrumb: <Icon name=\"link-2\">Connections</Icon>,\n\tgetSitemapEntries: () => null,\n}\n\nasync function userCanDeleteConnections(userId: string) {\n\tconst user = await prisma.user.findUnique({\n\t\tselect: {\n\t\t\tpassword: { select: { userId: true } },\n\t\t\t_count: { select: { connections: true } },\n\t\t},\n\t\twhere: { id: userId },\n\t})\n\t// user can delete their connections if they have a password\n\tif (user?.password) return true\n\t// users have to have more than one remaining connection to delete one\n\treturn Boolean(user?._count.connections && user?._count.connections > 1)\n}\n\nexport async function loader({ request }: Route.LoaderArgs) {\n\tconst userId = await requireUserId(request)\n\tconst timings = makeTimings('profile connections loader')\n\tconst rawConnections = await prisma.connection.findMany({\n\t\tselect: { id: true, providerName: true, providerId: true, createdAt: true },\n\t\twhere: { userId },\n\t})\n\tconst connections: Array<{\n\t\tproviderName: ProviderName\n\t\tid: string\n\t\tdisplayName: string\n\t\tlink?: string | null\n\t\tcreatedAtFormatted: string\n\t}> = []\n\tfor (const connection of rawConnections) {\n\t\tconst r = ProviderNameSchema.safeParse(connection.providerName)\n\t\tif (!r.success) continue\n\t\tconst providerName = r.data\n\t\tconst connectionData = await resolveConnectionData(\n\t\t\tproviderName,\n\t\t\tconnection.providerId,\n\t\t\t{ timings },\n\t\t)\n\t\tconnections.push({\n\t\t\t...connectionData,\n\t\t\tproviderName,\n\t\t\tid: connection.id,\n\t\t\tcreatedAtFormatted: connection.createdAt.toLocaleString(),\n\t\t})\n\t}\n\n\treturn data(\n\t\t{\n\t\t\tconnections,\n\t\t\tcanDeleteConnections: await userCanDeleteConnections(userId),\n\t\t},\n\t\t{ headers: { 'Server-Timing': timings.toString() } },\n\t)\n}\n\nexport const headers: Route.HeadersFunction = pipeHeaders\n\nexport async function action({ request }: Route.ActionArgs) {\n\tconst userId = await requireUserId(request)\n\tconst formData = await request.formData()\n\tinvariantResponse(\n\t\tformData.get('intent') === 'delete-connection',\n\t\t'Invalid intent',\n\t)\n\tinvariantResponse(\n\t\tawait userCanDeleteConnections(userId),\n\t\t'You cannot delete your last connection unless you have a password.',\n\t)\n\tconst connectionId = formData.get('connectionId')\n\tinvariantResponse(typeof connectionId === 'string', 'Invalid connectionId')\n\tawait prisma.connection.delete({\n\t\twhere: {\n\t\t\tid: connectionId,\n\t\t\tuserId: userId,\n\t\t},\n\t})\n\tconst toastHeaders = await createToastHeaders({\n\t\ttitle: 'Deleted',\n\t\tdescription: 'Your connection has been deleted.',\n\t})\n\treturn data({ status: 'success' } as const, { headers: toastHeaders })\n}\n\nexport default function Connections({ loaderData }: Route.ComponentProps) {\n\treturn (\n\t\t<div className=\"mx-auto max-w-md\">\n\t\t\t{loaderData.connections.length ? (\n\t\t\t\t<div className=\"flex flex-col gap-2\">\n\t\t\t\t\t<p>Here are your current connections:</p>\n\t\t\t\t\t<ul className=\"flex flex-col gap-4\">\n\t\t\t\t\t\t{loaderData.connections.map((c) => (\n\t\t\t\t\t\t\t<li key={c.id}>\n\t\t\t\t\t\t\t\t<Connection\n\t\t\t\t\t\t\t\t\tconnection={c}\n\t\t\t\t\t\t\t\t\tcanDelete={loaderData.canDeleteConnections}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t))}\n\t\t\t\t\t</ul>\n\t\t\t\t</div>\n\t\t\t) : (\n\t\t\t\t<p>You don't have any connections yet.</p>\n\t\t\t)}\n\t\t\t<div className=\"border-border mt-5 flex flex-col gap-5 border-t-2 border-b-2 py-3\">\n\t\t\t\t{providerNames.map((providerName) => (\n\t\t\t\t\t<ProviderConnectionForm\n\t\t\t\t\t\tkey={providerName}\n\t\t\t\t\t\ttype=\"Connect\"\n\t\t\t\t\t\tproviderName={providerName}\n\t\t\t\t\t/>\n\t\t\t\t))}\n\t\t\t</div>\n\t\t</div>\n\t)\n}\n\nfunction Connection({\n\tconnection,\n\tcanDelete,\n}: {\n\tconnection: Route.ComponentProps['loaderData']['connections'][number]\n\tcanDelete: boolean\n}) {\n\tconst deleteFetcher = useFetcher<typeof action>()\n\tconst [infoOpen, setInfoOpen] = useState(false)\n\tconst icon = providerIcons[connection.providerName]\n\treturn (\n\t\t<div className=\"flex justify-between gap-2\">\n\t\t\t<span className={`inline-flex items-center gap-1.5`}>\n\t\t\t\t{icon}\n\t\t\t\t<span>\n\t\t\t\t\t{connection.link ? (\n\t\t\t\t\t\t<a href={connection.link} className=\"underline\">\n\t\t\t\t\t\t\t{connection.displayName}\n\t\t\t\t\t\t</a>\n\t\t\t\t\t) : (\n\t\t\t\t\t\tconnection.displayName\n\t\t\t\t\t)}{' '}\n\t\t\t\t\t({connection.createdAtFormatted})\n\t\t\t\t</span>\n\t\t\t</span>\n\t\t\t{canDelete ? (\n\t\t\t\t<deleteFetcher.Form method=\"POST\">\n\t\t\t\t\t<input name=\"connectionId\" value={connection.id} type=\"hidden\" />\n\t\t\t\t\t<TooltipProvider>\n\t\t\t\t\t\t<Tooltip>\n\t\t\t\t\t\t\t<TooltipTrigger asChild>\n\t\t\t\t\t\t\t\t<StatusButton\n\t\t\t\t\t\t\t\t\tname=\"intent\"\n\t\t\t\t\t\t\t\t\tvalue=\"delete-connection\"\n\t\t\t\t\t\t\t\t\tvariant=\"destructive\"\n\t\t\t\t\t\t\t\t\tsize=\"sm\"\n\t\t\t\t\t\t\t\t\tstatus={\n\t\t\t\t\t\t\t\t\t\tdeleteFetcher.state !== 'idle'\n\t\t\t\t\t\t\t\t\t\t\t? 'pending'\n\t\t\t\t\t\t\t\t\t\t\t: (deleteFetcher.data?.status ?? 'idle')\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t<Icon name=\"cross-1\" />\n\t\t\t\t\t\t\t\t</StatusButton>\n\t\t\t\t\t\t\t</TooltipTrigger>\n\t\t\t\t\t\t\t<TooltipContent>Disconnect this account</TooltipContent>\n\t\t\t\t\t\t</Tooltip>\n\t\t\t\t\t</TooltipProvider>\n\t\t\t\t</deleteFetcher.Form>\n\t\t\t) : (\n\t\t\t\t<TooltipProvider>\n\t\t\t\t\t<Tooltip open={infoOpen} onOpenChange={setInfoOpen}>\n\t\t\t\t\t\t<TooltipTrigger onClick={() => setInfoOpen(true)}>\n\t\t\t\t\t\t\t<Icon name=\"question-mark-circled\"></Icon>\n\t\t\t\t\t\t</TooltipTrigger>\n\t\t\t\t\t\t<TooltipContent>\n\t\t\t\t\t\t\tYou cannot delete your last connection unless you have a password.\n\t\t\t\t\t\t</TooltipContent>\n\t\t\t\t\t</Tooltip>\n\t\t\t\t</TooltipProvider>\n\t\t\t)}\n\t\t</div>\n\t)\n}\n","import { getFormProps, getInputProps, useForm } from '@conform-to/react'\nimport { getZodConstraint, parseWithZod } from '@conform-to/zod'\nimport { invariantResponse } from '@epic-web/invariant'\nimport { type SEOHandle } from '@nasa-gcn/remix-seo'\nimport { Img } from 'openimg/react'\nimport { data, Link, useFetcher } from 'react-router'\nimport { z } from 'zod'\nimport { ErrorList, Field } from '#app/components/forms.tsx'\nimport { Button } from '#app/components/ui/button.tsx'\nimport { Icon } from '#app/components/ui/icon.tsx'\nimport { StatusButton } from '#app/components/ui/status-button.tsx'\nimport { requireUserId, sessionKey } from '#app/utils/auth.server.ts'\nimport { prisma } from '#app/utils/db.server.ts'\nimport { getUserImgSrc, useDoubleCheck } from '#app/utils/misc.tsx'\nimport { authSessionStorage } from '#app/utils/session.server.ts'\nimport { redirectWithToast } from '#app/utils/toast.server.ts'\nimport { NameSchema, UsernameSchema } from '#app/utils/user-validation.ts'\nimport { type Route } from './+types/profile.index.ts'\nimport { twoFAVerificationType } from './profile.two-factor.tsx'\n\nexport const handle: SEOHandle = {\n\tgetSitemapEntries: () => null,\n}\n\nconst ProfileFormSchema = z.object({\n\tname: NameSchema.nullable().default(null),\n\tusername: UsernameSchema,\n})\n\nexport async function loader({ request }: Route.LoaderArgs) {\n\tconst userId = await requireUserId(request)\n\tconst user = await prisma.user.findUniqueOrThrow({\n\t\twhere: { id: userId },\n\t\tselect: {\n\t\t\tid: true,\n\t\t\tname: true,\n\t\t\tusername: true,\n\t\t\temail: true,\n\t\t\timage: {\n\t\t\t\tselect: { objectKey: true },\n\t\t\t},\n\t\t\t_count: {\n\t\t\t\tselect: {\n\t\t\t\t\tsessions: {\n\t\t\t\t\t\twhere: {\n\t\t\t\t\t\t\texpirationDate: { gt: new Date() },\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t},\n\t\t},\n\t})\n\n\tconst twoFactorVerification = await prisma.verification.findUnique({\n\t\tselect: { id: true },\n\t\twhere: { target_type: { type: twoFAVerificationType, target: userId } },\n\t})\n\n\tconst password = await prisma.password.findUnique({\n\t\tselect: { userId: true },\n\t\twhere: { userId },\n\t})\n\n\treturn {\n\t\tuser,\n\t\thasPassword: Boolean(password),\n\t\tisTwoFactorEnabled: Boolean(twoFactorVerification),\n\t}\n}\n\ntype ProfileActionArgs = {\n\trequest: Request\n\tuserId: string\n\tformData: FormData\n}\nconst profileUpdateActionIntent = 'update-profile'\nconst signOutOfSessionsActionIntent = 'sign-out-of-sessions'\nconst deleteDataActionIntent = 'delete-data'\n\nexport async function action({ request }: Route.ActionArgs) {\n\tconst userId = await requireUserId(request)\n\tconst formData = await request.formData()\n\tconst intent = formData.get('intent')\n\tswitch (intent) {\n\t\tcase profileUpdateActionIntent: {\n\t\t\treturn profileUpdateAction({ request, userId, formData })\n\t\t}\n\t\tcase signOutOfSessionsActionIntent: {\n\t\t\treturn signOutOfSessionsAction({ request, userId, formData })\n\t\t}\n\t\tcase deleteDataActionIntent: {\n\t\t\treturn deleteDataAction({ request, userId, formData })\n\t\t}\n\t\tdefault: {\n\t\t\tthrow new Response(`Invalid intent \"${intent}\"`, { status: 400 })\n\t\t}\n\t}\n}\n\nexport default function EditUserProfile({ loaderData }: Route.ComponentProps) {\n\treturn (\n\t\t<div className=\"flex flex-col gap-12\">\n\t\t\t<div className=\"flex justify-center\">\n\t\t\t\t<div className=\"relative size-52\">\n\t\t\t\t\t<Img\n\t\t\t\t\t\tsrc={getUserImgSrc(loaderData.user.image?.objectKey)}\n\t\t\t\t\t\talt={loaderData.user.name ?? loaderData.user.username}\n\t\t\t\t\t\tclassName=\"h-full w-full rounded-full object-cover\"\n\t\t\t\t\t\twidth={832}\n\t\t\t\t\t\theight={832}\n\t\t\t\t\t\tisAboveFold\n\t\t\t\t\t/>\n\t\t\t\t\t<Button\n\t\t\t\t\t\tasChild\n\t\t\t\t\t\tvariant=\"outline\"\n\t\t\t\t\t\tclassName=\"absolute top-3 -right-3 flex size-10 items-center justify-center rounded-full p-0\"\n\t\t\t\t\t>\n\t\t\t\t\t\t<Link\n\t\t\t\t\t\t\tpreventScrollReset\n\t\t\t\t\t\t\tto=\"photo\"\n\t\t\t\t\t\t\ttitle=\"Change profile photo\"\n\t\t\t\t\t\t\taria-label=\"Change profile photo\"\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<Icon name=\"camera\" className=\"size-4\" />\n\t\t\t\t\t\t</Link>\n\t\t\t\t\t</Button>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t<UpdateProfile loaderData={loaderData} />\n\n\t\t\t<div className=\"border-foreground col-span-6 my-6 h-1 border-b-[1.5px]\" />\n\t\t\t<div className=\"col-span-full flex flex-col gap-6\">\n\t\t\t\t<div>\n\t\t\t\t\t<Link to=\"change-email\">\n\t\t\t\t\t\t<Icon name=\"envelope-closed\">\n\t\t\t\t\t\t\tChange email from {loaderData.user.email}\n\t\t\t\t\t\t</Icon>\n\t\t\t\t\t</Link>\n\t\t\t\t</div>\n\t\t\t\t<div>\n\t\t\t\t\t<Link to=\"two-factor\">\n\t\t\t\t\t\t{loaderData.isTwoFactorEnabled ? (\n\t\t\t\t\t\t\t<Icon name=\"lock-closed\">2FA is enabled</Icon>\n\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t<Icon name=\"lock-open-1\">Enable 2FA</Icon>\n\t\t\t\t\t\t)}\n\t\t\t\t\t</Link>\n\t\t\t\t</div>\n\t\t\t\t<div>\n\t\t\t\t\t<Link to={loaderData.hasPassword ? 'password' : 'password/create'}>\n\t\t\t\t\t\t<Icon name=\"dots-horizontal\">\n\t\t\t\t\t\t\t{loaderData.hasPassword ? 'Change Password' : 'Create a Password'}\n\t\t\t\t\t\t</Icon>\n\t\t\t\t\t</Link>\n\t\t\t\t</div>\n\t\t\t\t<div>\n\t\t\t\t\t<Link to=\"connections\">\n\t\t\t\t\t\t<Icon name=\"link-2\">Manage connections</Icon>\n\t\t\t\t\t</Link>\n\t\t\t\t</div>\n\t\t\t\t<div>\n\t\t\t\t\t<Link to=\"passkeys\">\n\t\t\t\t\t\t<Icon name=\"passkey\">Manage passkeys</Icon>\n\t\t\t\t\t</Link>\n\t\t\t\t</div>\n\t\t\t\t<div>\n\t\t\t\t\t<Link\n\t\t\t\t\t\treloadDocument\n\t\t\t\t\t\tdownload=\"my-epic-notes-data.json\"\n\t\t\t\t\t\tto=\"/resources/download-user-data\"\n\t\t\t\t\t>\n\t\t\t\t\t\t<Icon name=\"download\">Download your data</Icon>\n\t\t\t\t\t</Link>\n\t\t\t\t</div>\n\t\t\t\t<SignOutOfSessions loaderData={loaderData} />\n\t\t\t\t<DeleteData />\n\t\t\t</div>\n\t\t</div>\n\t)\n}\n\nasync function profileUpdateAction({ userId, formData }: ProfileActionArgs) {\n\tconst submission = await parseWithZod(formData, {\n\t\tasync: true,\n\t\tschema: ProfileFormSchema.superRefine(async ({ username }, ctx) => {\n\t\t\tconst existingUsername = await prisma.user.findUnique({\n\t\t\t\twhere: { username },\n\t\t\t\tselect: { id: true },\n\t\t\t})\n\t\t\tif (existingUsername && existingUsername.id !== userId) {\n\t\t\t\tctx.addIssue({\n\t\t\t\t\tpath: ['username'],\n\t\t\t\t\tcode: z.ZodIssueCode.custom,\n\t\t\t\t\tmessage: 'A user already exists with this username',\n\t\t\t\t})\n\t\t\t}\n\t\t}),\n\t})\n\tif (submission.status !== 'success') {\n\t\treturn data(\n\t\t\t{ result: submission.reply() },\n\t\t\t{ status: submission.status === 'error' ? 400 : 200 },\n\t\t)\n\t}\n\n\tconst { username, name } = submission.value\n\n\tawait prisma.user.update({\n\t\tselect: { username: true },\n\t\twhere: { id: userId },\n\t\tdata: {\n\t\t\tname: name,\n\t\t\tusername: username,\n\t\t},\n\t})\n\n\treturn {\n\t\tresult: submission.reply(),\n\t}\n}\n\nfunction UpdateProfile({\n\tloaderData,\n}: {\n\tloaderData: Route.ComponentProps['loaderData']\n}) {\n\tconst fetcher = useFetcher<typeof profileUpdateAction>()\n\n\tconst [form, fields] = useForm({\n\t\tid: 'edit-profile',\n\t\tconstraint: getZodConstraint(ProfileFormSchema),\n\t\tlastResult: fetcher.data?.result,\n\t\tonValidate({ formData }) {\n\t\t\treturn parseWithZod(formData, { schema: ProfileFormSchema })\n\t\t},\n\t\tdefaultValue: {\n\t\t\tusername: loaderData.user.username,\n\t\t\tname: loaderData.user.name,\n\t\t},\n\t})\n\n\treturn (\n\t\t<fetcher.Form method=\"POST\" {...getFormProps(form)}>\n\t\t\t<div className=\"grid grid-cols-6 gap-x-10\">\n\t\t\t\t<Field\n\t\t\t\t\tclassName=\"col-span-3\"\n\t\t\t\t\tlabelProps={{\n\t\t\t\t\t\thtmlFor: fields.username.id,\n\t\t\t\t\t\tchildren: 'Username',\n\t\t\t\t\t}}\n\t\t\t\t\tinputProps={getInputProps(fields.username, { type: 'text' })}\n\t\t\t\t\terrors={fields.username.errors}\n\t\t\t\t/>\n\t\t\t\t<Field\n\t\t\t\t\tclassName=\"col-span-3\"\n\t\t\t\t\tlabelProps={{ htmlFor: fields.name.id, children: 'Name' }}\n\t\t\t\t\tinputProps={getInputProps(fields.name, { type: 'text' })}\n\t\t\t\t\terrors={fields.name.errors}\n\t\t\t\t/>\n\t\t\t</div>\n\n\t\t\t<ErrorList errors={form.errors} id={form.errorId} />\n\n\t\t\t<div className=\"mt-8 flex justify-center\">\n\t\t\t\t<StatusButton\n\t\t\t\t\ttype=\"submit\"\n\t\t\t\t\tsize=\"wide\"\n\t\t\t\t\tname=\"intent\"\n\t\t\t\t\tvalue={profileUpdateActionIntent}\n\t\t\t\t\tstatus={\n\t\t\t\t\t\tfetcher.state !== 'idle' ? 'pending' : (form.status ?? 'idle')\n\t\t\t\t\t}\n\t\t\t\t>\n\t\t\t\t\tSave changes\n\t\t\t\t</StatusButton>\n\t\t\t</div>\n\t\t</fetcher.Form>\n\t)\n}\n\nasync function signOutOfSessionsAction({ request, userId }: ProfileActionArgs) {\n\tconst authSession = await authSessionStorage.getSession(\n\t\trequest.headers.get('cookie'),\n\t)\n\tconst sessionId = authSession.get(sessionKey)\n\tinvariantResponse(\n\t\tsessionId,\n\t\t'You must be authenticated to sign out of other sessions',\n\t)\n\tawait prisma.session.deleteMany({\n\t\twhere: {\n\t\t\tuserId,\n\t\t\tid: { not: sessionId },\n\t\t},\n\t})\n\treturn { status: 'success' } as const\n}\n\nfunction SignOutOfSessions({\n\tloaderData,\n}: {\n\tloaderData: Route.ComponentProps['loaderData']\n}) {\n\tconst dc = useDoubleCheck()\n\n\tconst fetcher = useFetcher<typeof signOutOfSessionsAction>()\n\tconst otherSessionsCount = loaderData.user._count.sessions - 1\n\treturn (\n\t\t<div>\n\t\t\t{otherSessionsCount ? (\n\t\t\t\t<fetcher.Form method=\"POST\">\n\t\t\t\t\t<StatusButton\n\t\t\t\t\t\t{...dc.getButtonProps({\n\t\t\t\t\t\t\ttype: 'submit',\n\t\t\t\t\t\t\tname: 'intent',\n\t\t\t\t\t\t\tvalue: signOutOfSessionsActionIntent,\n\t\t\t\t\t\t})}\n\t\t\t\t\t\tvariant={dc.doubleCheck ? 'destructive' : 'default'}\n\t\t\t\t\t\tstatus={\n\t\t\t\t\t\t\tfetcher.state !== 'idle'\n\t\t\t\t\t\t\t\t? 'pending'\n\t\t\t\t\t\t\t\t: (fetcher.data?.status ?? 'idle')\n\t\t\t\t\t\t}\n\t\t\t\t\t>\n\t\t\t\t\t\t<Icon name=\"avatar\">\n\t\t\t\t\t\t\t{dc.doubleCheck\n\t\t\t\t\t\t\t\t? `Are you sure?`\n\t\t\t\t\t\t\t\t: `Sign out of ${otherSessionsCount} other sessions`}\n\t\t\t\t\t\t</Icon>\n\t\t\t\t\t</StatusButton>\n\t\t\t\t</fetcher.Form>\n\t\t\t) : (\n\t\t\t\t<Icon name=\"avatar\">This is your only session</Icon>\n\t\t\t)}\n\t\t</div>\n\t)\n}\n\nasync function deleteDataAction({ userId }: ProfileActionArgs) {\n\tawait prisma.user.delete({ where: { id: userId } })\n\treturn redirectWithToast('/', {\n\t\ttype: 'success',\n\t\ttitle: 'Data Deleted',\n\t\tdescription: 'All of your data has been deleted',\n\t})\n}\n\nfunction DeleteData() {\n\tconst dc = useDoubleCheck()\n\n\tconst fetcher = useFetcher<typeof deleteDataAction>()\n\treturn (\n\t\t<div>\n\t\t\t<fetcher.Form method=\"POST\">\n\t\t\t\t<StatusButton\n\t\t\t\t\t{...dc.getButtonProps({\n\t\t\t\t\t\ttype: 'submit',\n\t\t\t\t\t\tname: 'intent',\n\t\t\t\t\t\tvalue: deleteDataActionIntent,\n\t\t\t\t\t})}\n\t\t\t\t\tvariant={dc.doubleCheck ? 'destructive' : 'default'}\n\t\t\t\t\tstatus={fetcher.state !== 'idle' ? 'pending' : 'idle'}\n\t\t\t\t>\n\t\t\t\t\t<Icon name=\"trash\">\n\t\t\t\t\t\t{dc.doubleCheck ? `Are you sure?` : `Delete all your data`}\n\t\t\t\t\t</Icon>\n\t\t\t\t</StatusButton>\n\t\t\t</fetcher.Form>\n\t\t</div>\n\t)\n}\n","import { startRegistration } from '@simplewebauthn/browser'\nimport { formatDistanceToNow } from 'date-fns'\nimport { useState } from 'react'\nimport { Form, useRevalidator } from 'react-router'\nimport { z } from 'zod'\nimport { Button } from '#app/components/ui/button.tsx'\nimport { Icon } from '#app/components/ui/icon.tsx'\nimport { requireUserId } from '#app/utils/auth.server.ts'\nimport { prisma } from '#app/utils/db.server.ts'\nimport { type Route } from './+types/profile.passkeys.ts'\n\nexport const handle = {\n\tbreadcrumb: <Icon name=\"passkey\">Passkeys</Icon>,\n}\n\nexport async function loader({ request }: Route.LoaderArgs) {\n\tconst userId = await requireUserId(request)\n\tconst passkeys = await prisma.passkey.findMany({\n\t\twhere: { userId },\n\t\torderBy: { createdAt: 'desc' },\n\t\tselect: {\n\t\t\tid: true,\n\t\t\tdeviceType: true,\n\t\t\tcreatedAt: true,\n\t\t},\n\t})\n\treturn { passkeys }\n}\n\nexport async function action({ request }: Route.ActionArgs) {\n\tconst userId = await requireUserId(request)\n\tconst formData = await request.formData()\n\tconst intent = formData.get('intent')\n\n\tif (intent === 'delete') {\n\t\tconst passkeyId = formData.get('passkeyId')\n\t\tif (typeof passkeyId !== 'string') {\n\t\t\treturn Response.json(\n\t\t\t\t{ status: 'error', error: 'Invalid passkey ID' },\n\t\t\t\t{ status: 400 },\n\t\t\t)\n\t\t}\n\n\t\tawait prisma.passkey.delete({\n\t\t\twhere: {\n\t\t\t\tid: passkeyId,\n\t\t\t\tuserId, // Ensure the passkey belongs to the user\n\t\t\t},\n\t\t})\n\t\treturn Response.json({ status: 'success' })\n\t}\n\n\treturn Response.json(\n\t\t{ status: 'error', error: 'Invalid intent' },\n\t\t{ status: 400 },\n\t)\n}\n\nconst RegistrationOptionsSchema = z.object({\n\toptions: z.object({\n\t\trp: z.object({\n\t\t\tid: z.string(),\n\t\t\tname: z.string(),\n\t\t}),\n\t\tuser: z.object({\n\t\t\tid: z.string(),\n\t\t\tname: z.string(),\n\t\t\tdisplayName: z.string(),\n\t\t}),\n\t\tchallenge: z.string(),\n\t\tpubKeyCredParams: z.array(\n\t\t\tz.object({\n\t\t\t\ttype: z.literal('public-key'),\n\t\t\t\talg: z.number(),\n\t\t\t}),\n\t\t),\n\t\tauthenticatorSelection: z\n\t\t\t.object({\n\t\t\t\tauthenticatorAttachment: z\n\t\t\t\t\t.enum(['platform', 'cross-platform'])\n\t\t\t\t\t.optional(),\n\t\t\t\tresidentKey: z\n\t\t\t\t\t.enum(['required', 'preferred', 'discouraged'])\n\t\t\t\t\t.optional(),\n\t\t\t\tuserVerification: z\n\t\t\t\t\t.enum(['required', 'preferred', 'discouraged'])\n\t\t\t\t\t.optional(),\n\t\t\t\trequireResidentKey: z.boolean().optional(),\n\t\t\t})\n\t\t\t.optional(),\n\t}),\n}) satisfies z.ZodType<{ options: PublicKeyCredentialCreationOptionsJSON }>\n\nexport default function Passkeys({ loaderData }: Route.ComponentProps) {\n\tconst revalidator = useRevalidator()\n\tconst [error, setError] = useState<string | null>(null)\n\n\tasync function handlePasskeyRegistration() {\n\t\ttry {\n\t\t\tsetError(null)\n\t\t\tconst resp = await fetch('/webauthn/registration')\n\t\t\tconst jsonResult = await resp.json()\n\t\t\tconst parsedResult = RegistrationOptionsSchema.parse(jsonResult)\n\n\t\t\tconst regResult = await startRegistration({\n\t\t\t\toptionsJSON: parsedResult.options,\n\t\t\t})\n\n\t\t\tconst verificationResp = await fetch('/webauthn/registration', {\n\t\t\t\tmethod: 'POST',\n\t\t\t\theaders: { 'Content-Type': 'application/json' },\n\t\t\t\tbody: JSON.stringify(regResult),\n\t\t\t})\n\n\t\t\tif (!verificationResp.ok) {\n\t\t\t\tthrow new Error('Failed to verify registration')\n\t\t\t}\n\n\t\t\tvoid revalidator.revalidate()\n\t\t} catch (err) {\n\t\t\tconsole.error('Failed to create passkey:', err)\n\t\t\tsetError('Failed to create passkey. Please try again.')\n\t\t}\n\t}\n\n\treturn (\n\t\t<div className=\"flex flex-col gap-6\">\n\t\t\t<div className=\"flex justify-between gap-4\">\n\t\t\t\t<h1 className=\"text-h1\">Passkeys</h1>\n\t\t\t\t<form action={handlePasskeyRegistration}>\n\t\t\t\t\t<Button\n\t\t\t\t\t\ttype=\"submit\"\n\t\t\t\t\t\tvariant=\"secondary\"\n\t\t\t\t\t\tclassName=\"flex items-center gap-2\"\n\t\t\t\t\t>\n\t\t\t\t\t\t<Icon name=\"plus\">Register new passkey</Icon>\n\t\t\t\t\t</Button>\n\t\t\t\t</form>\n\t\t\t</div>\n\n\t\t\t{error ? (\n\t\t\t\t<div className=\"bg-destructive/15 text-destructive rounded-lg p-4\">\n\t\t\t\t\t{error}\n\t\t\t\t</div>\n\t\t\t) : null}\n\n\t\t\t{loaderData.passkeys.length ? (\n\t\t\t\t<ul className=\"flex flex-col gap-4\" title=\"passkeys\">\n\t\t\t\t\t{loaderData.passkeys.map((passkey) => (\n\t\t\t\t\t\t<li\n\t\t\t\t\t\t\tkey={passkey.id}\n\t\t\t\t\t\t\tclassName=\"border-muted-foreground flex items-center justify-between gap-4 rounded-lg border p-4\"\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<div className=\"flex flex-col gap-2\">\n\t\t\t\t\t\t\t\t<div className=\"flex items-center gap-2\">\n\t\t\t\t\t\t\t\t\t<Icon name=\"lock-closed\" />\n\t\t\t\t\t\t\t\t\t<span className=\"font-semibold\">\n\t\t\t\t\t\t\t\t\t\t{passkey.deviceType === 'platform'\n\t\t\t\t\t\t\t\t\t\t\t? 'Device'\n\t\t\t\t\t\t\t\t\t\t\t: 'Security Key'}\n\t\t\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t<div className=\"text-muted-foreground text-sm\">\n\t\t\t\t\t\t\t\t\tRegistered {formatDistanceToNow(new Date(passkey.createdAt))}{' '}\n\t\t\t\t\t\t\t\t\tago\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<Form method=\"POST\">\n\t\t\t\t\t\t\t\t<input type=\"hidden\" name=\"passkeyId\" value={passkey.id} />\n\t\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\t\ttype=\"submit\"\n\t\t\t\t\t\t\t\t\tname=\"intent\"\n\t\t\t\t\t\t\t\t\tvalue=\"delete\"\n\t\t\t\t\t\t\t\t\tvariant=\"destructive\"\n\t\t\t\t\t\t\t\t\tsize=\"sm\"\n\t\t\t\t\t\t\t\t\tclassName=\"flex items-center gap-2\"\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t<Icon name=\"trash\">Delete</Icon>\n\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t</Form>\n\t\t\t\t\t\t</li>\n\t\t\t\t\t))}\n\t\t\t\t</ul>\n\t\t\t) : (\n\t\t\t\t<div className=\"text-muted-foreground text-center\">\n\t\t\t\t\tNo passkeys registered yet\n\t\t\t\t</div>\n\t\t\t)}\n\t\t</div>\n\t)\n}\n","import { getFormProps, getInputProps, useForm } from '@conform-to/react'\nimport { getZodConstraint, parseWithZod } from '@conform-to/zod'\nimport { type SEOHandle } from '@nasa-gcn/remix-seo'\nimport { data, redirect, Form, Link } from 'react-router'\nimport { z } from 'zod'\nimport { ErrorList, Field } from '#app/components/forms.tsx'\nimport { Button } from '#app/components/ui/button.tsx'\nimport { Icon } from '#app/components/ui/icon.tsx'\nimport { StatusButton } from '#app/components/ui/status-button.tsx'\nimport {\n\tcheckIsCommonPassword,\n\tgetPasswordHash,\n\trequireUserId,\n\tverifyUserPassword,\n} from '#app/utils/auth.server.ts'\nimport { prisma } from '#app/utils/db.server.ts'\nimport { useIsPending } from '#app/utils/misc.tsx'\nimport { redirectWithToast } from '#app/utils/toast.server.ts'\nimport { PasswordSchema } from '#app/utils/user-validation.ts'\nimport { type Route } from './+types/profile.password.ts'\nimport { type BreadcrumbHandle } from './profile.tsx'\n\nexport const handle: BreadcrumbHandle & SEOHandle = {\n\tbreadcrumb: <Icon name=\"dots-horizontal\">Password</Icon>,\n\tgetSitemapEntries: () => null,\n}\n\nconst ChangePasswordForm = z\n\t.object({\n\t\tcurrentPassword: PasswordSchema,\n\t\tnewPassword: PasswordSchema,\n\t\tconfirmNewPassword: PasswordSchema,\n\t})\n\t.superRefine(({ confirmNewPassword, newPassword }, ctx) => {\n\t\tif (confirmNewPassword !== newPassword) {\n\t\t\tctx.addIssue({\n\t\t\t\tpath: ['confirmNewPassword'],\n\t\t\t\tcode: z.ZodIssueCode.custom,\n\t\t\t\tmessage: 'The passwords must match',\n\t\t\t})\n\t\t}\n\t})\n\nasync function requirePassword(userId: string) {\n\tconst password = await prisma.password.findUnique({\n\t\tselect: { userId: true },\n\t\twhere: { userId },\n\t})\n\tif (!password) {\n\t\tthrow redirect('/settings/profile/password/create')\n\t}\n}\n\nexport async function loader({ request }: Route.LoaderArgs) {\n\tconst userId = await requireUserId(request)\n\tawait requirePassword(userId)\n\treturn {}\n}\n\nexport async function action({ request }: Route.ActionArgs) {\n\tconst userId = await requireUserId(request)\n\tawait requirePassword(userId)\n\tconst formData = await request.formData()\n\tconst submission = await parseWithZod(formData, {\n\t\tasync: true,\n\t\tschema: ChangePasswordForm.superRefine(\n\t\t\tasync ({ currentPassword, newPassword }, ctx) => {\n\t\t\t\tif (currentPassword && newPassword) {\n\t\t\t\t\tconst user = await verifyUserPassword({ id: userId }, currentPassword)\n\t\t\t\t\tif (!user) {\n\t\t\t\t\t\tctx.addIssue({\n\t\t\t\t\t\t\tpath: ['currentPassword'],\n\t\t\t\t\t\t\tcode: z.ZodIssueCode.custom,\n\t\t\t\t\t\t\tmessage: 'Incorrect password.',\n\t\t\t\t\t\t})\n\t\t\t\t\t}\n\t\t\t\t\tconst isCommonPassword = await checkIsCommonPassword(newPassword)\n\t\t\t\t\tif (isCommonPassword) {\n\t\t\t\t\t\tctx.addIssue({\n\t\t\t\t\t\t\tpath: ['newPassword'],\n\t\t\t\t\t\t\tcode: 'custom',\n\t\t\t\t\t\t\tmessage: 'Password is too common',\n\t\t\t\t\t\t})\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t},\n\t\t),\n\t})\n\tif (submission.status !== 'success') {\n\t\treturn data(\n\t\t\t{\n\t\t\t\tresult: submission.reply({\n\t\t\t\t\thideFields: ['currentPassword', 'newPassword', 'confirmNewPassword'],\n\t\t\t\t}),\n\t\t\t},\n\t\t\t{ status: submission.status === 'error' ? 400 : 200 },\n\t\t)\n\t}\n\n\tconst { newPassword } = submission.value\n\n\tawait prisma.user.update({\n\t\tselect: { username: true },\n\t\twhere: { id: userId },\n\t\tdata: {\n\t\t\tpassword: {\n\t\t\t\tupdate: {\n\t\t\t\t\thash: await getPasswordHash(newPassword),\n\t\t\t\t},\n\t\t\t},\n\t\t},\n\t})\n\n\treturn redirectWithToast(\n\t\t`/settings/profile`,\n\t\t{\n\t\t\ttype: 'success',\n\t\t\ttitle: 'Password Changed',\n\t\t\tdescription: 'Your password has been changed.',\n\t\t},\n\t\t{ status: 302 },\n\t)\n}\n\nexport default function ChangePasswordRoute({\n\tactionData,\n}: Route.ComponentProps) {\n\tconst isPending = useIsPending()\n\n\tconst [form, fields] = useForm({\n\t\tid: 'password-change-form',\n\t\tconstraint: getZodConstraint(ChangePasswordForm),\n\t\tlastResult: actionData?.result,\n\t\tonValidate({ formData }) {\n\t\t\treturn parseWithZod(formData, { schema: ChangePasswordForm })\n\t\t},\n\t\tshouldRevalidate: 'onBlur',\n\t})\n\n\treturn (\n\t\t<Form method=\"POST\" {...getFormProps(form)} className=\"mx-auto max-w-md\">\n\t\t\t<Field\n\t\t\t\tlabelProps={{ children: 'Current Password' }}\n\t\t\t\tinputProps={{\n\t\t\t\t\t...getInputProps(fields.currentPassword, { type: 'password' }),\n\t\t\t\t\tautoComplete: 'current-password',\n\t\t\t\t}}\n\t\t\t\terrors={fields.currentPassword.errors}\n\t\t\t/>\n\t\t\t<Field\n\t\t\t\tlabelProps={{ children: 'New Password' }}\n\t\t\t\tinputProps={{\n\t\t\t\t\t...getInputProps(fields.newPassword, { type: 'password' }),\n\t\t\t\t\tautoComplete: 'new-password',\n\t\t\t\t}}\n\t\t\t\terrors={fields.newPassword.errors}\n\t\t\t/>\n\t\t\t<Field\n\t\t\t\tlabelProps={{ children: 'Confirm New Password' }}\n\t\t\t\tinputProps={{\n\t\t\t\t\t...getInputProps(fields.confirmNewPassword, {\n\t\t\t\t\t\ttype: 'password',\n\t\t\t\t\t}),\n\t\t\t\t\tautoComplete: 'new-password',\n\t\t\t\t}}\n\t\t\t\terrors={fields.confirmNewPassword.errors}\n\t\t\t/>\n\t\t\t<ErrorList id={form.errorId} errors={form.errors} />\n\t\t\t<div className=\"grid w-full grid-cols-2 gap-6\">\n\t\t\t\t<Button variant=\"secondary\" asChild>\n\t\t\t\t\t<Link to=\"..\">Cancel</Link>\n\t\t\t\t</Button>\n\t\t\t\t<StatusButton\n\t\t\t\t\ttype=\"submit\"\n\t\t\t\t\tstatus={isPending ? 'pending' : (form.status ?? 'idle')}\n\t\t\t\t>\n\t\t\t\t\tChange Password\n\t\t\t\t</StatusButton>\n\t\t\t</div>\n\t\t</Form>\n\t)\n}\n","import { getFormProps, getInputProps, useForm } from '@conform-to/react'\nimport { getZodConstraint, parseWithZod } from '@conform-to/zod'\nimport { type SEOHandle } from '@nasa-gcn/remix-seo'\nimport { data, redirect, Form, Link } from 'react-router'\nimport { ErrorList, Field } from '#app/components/forms.tsx'\nimport { Button } from '#app/components/ui/button.tsx'\nimport { Icon } from '#app/components/ui/icon.tsx'\nimport { StatusButton } from '#app/components/ui/status-button.tsx'\nimport {\n\tcheckIsCommonPassword,\n\tgetPasswordHash,\n\trequireUserId,\n} from '#app/utils/auth.server.ts'\nimport { prisma } from '#app/utils/db.server.ts'\nimport { useIsPending } from '#app/utils/misc.tsx'\nimport { PasswordAndConfirmPasswordSchema } from '#app/utils/user-validation.ts'\nimport { type Route } from './+types/profile.password_.create.ts'\nimport { type BreadcrumbHandle } from './profile.tsx'\n\nexport const handle: BreadcrumbHandle & SEOHandle = {\n\tbreadcrumb: <Icon name=\"dots-horizontal\">Password</Icon>,\n\tgetSitemapEntries: () => null,\n}\n\nconst CreatePasswordForm = PasswordAndConfirmPasswordSchema\n\nasync function requireNoPassword(userId: string) {\n\tconst password = await prisma.password.findUnique({\n\t\tselect: { userId: true },\n\t\twhere: { userId },\n\t})\n\tif (password) {\n\t\tthrow redirect('/settings/profile/password')\n\t}\n}\n\nexport async function loader({ request }: Route.LoaderArgs) {\n\tconst userId = await requireUserId(request)\n\tawait requireNoPassword(userId)\n\treturn {}\n}\n\nexport async function action({ request }: Route.ActionArgs) {\n\tconst userId = await requireUserId(request)\n\tawait requireNoPassword(userId)\n\tconst formData = await request.formData()\n\tconst submission = await parseWithZod(formData, {\n\t\tasync: true,\n\t\tschema: CreatePasswordForm.superRefine(async ({ password }, ctx) => {\n\t\t\tconst isCommonPassword = await checkIsCommonPassword(password)\n\t\t\tif (isCommonPassword) {\n\t\t\t\tctx.addIssue({\n\t\t\t\t\tpath: ['password'],\n\t\t\t\t\tcode: 'custom',\n\t\t\t\t\tmessage: 'Password is too common',\n\t\t\t\t})\n\t\t\t}\n\t\t}),\n\t})\n\tif (submission.status !== 'success') {\n\t\treturn data(\n\t\t\t{\n\t\t\t\tresult: submission.reply({\n\t\t\t\t\thideFields: ['password', 'confirmPassword'],\n\t\t\t\t}),\n\t\t\t},\n\t\t\t{ status: submission.status === 'error' ? 400 : 200 },\n\t\t)\n\t}\n\n\tconst { password } = submission.value\n\n\tawait prisma.user.update({\n\t\tselect: { username: true },\n\t\twhere: { id: userId },\n\t\tdata: {\n\t\t\tpassword: {\n\t\t\t\tcreate: {\n\t\t\t\t\thash: await getPasswordHash(password),\n\t\t\t\t},\n\t\t\t},\n\t\t},\n\t})\n\n\treturn redirect(`/settings/profile`, { status: 302 })\n}\n\nexport default function CreatePasswordRoute({\n\tactionData,\n}: Route.ComponentProps) {\n\tconst isPending = useIsPending()\n\n\tconst [form, fields] = useForm({\n\t\tid: 'password-create-form',\n\t\tconstraint: getZodConstraint(CreatePasswordForm),\n\t\tlastResult: actionData?.result,\n\t\tonValidate({ formData }) {\n\t\t\treturn parseWithZod(formData, { schema: CreatePasswordForm })\n\t\t},\n\t\tshouldRevalidate: 'onBlur',\n\t})\n\n\treturn (\n\t\t<Form method=\"POST\" {...getFormProps(form)} className=\"mx-auto max-w-md\">\n\t\t\t<Field\n\t\t\t\tlabelProps={{ children: 'New Password' }}\n\t\t\t\tinputProps={{\n\t\t\t\t\t...getInputProps(fields.password, { type: 'password' }),\n\t\t\t\t\tautoComplete: 'new-password',\n\t\t\t\t}}\n\t\t\t\terrors={fields.password.errors}\n\t\t\t/>\n\t\t\t<Field\n\t\t\t\tlabelProps={{ children: 'Confirm New Password' }}\n\t\t\t\tinputProps={{\n\t\t\t\t\t...getInputProps(fields.confirmPassword, {\n\t\t\t\t\t\ttype: 'password',\n\t\t\t\t\t}),\n\t\t\t\t\tautoComplete: 'new-password',\n\t\t\t\t}}\n\t\t\t\terrors={fields.confirmPassword.errors}\n\t\t\t/>\n\t\t\t<ErrorList id={form.errorId} errors={form.errors} />\n\t\t\t<div className=\"grid w-full grid-cols-2 gap-6\">\n\t\t\t\t<Button variant=\"secondary\" asChild>\n\t\t\t\t\t<Link to=\"..\">Cancel</Link>\n\t\t\t\t</Button>\n\t\t\t\t<StatusButton\n\t\t\t\t\ttype=\"submit\"\n\t\t\t\t\tstatus={isPending ? 'pending' : (form.status ?? 'idle')}\n\t\t\t\t>\n\t\t\t\t\tCreate Password\n\t\t\t\t</StatusButton>\n\t\t\t</div>\n\t\t</Form>\n\t)\n}\n","import { getFormProps, getInputProps, useForm } from '@conform-to/react'\nimport { getZodConstraint, parseWithZod } from '@conform-to/zod'\nimport { invariantResponse } from '@epic-web/invariant'\nimport { parseFormData } from '@mjackson/form-data-parser'\nimport { type SEOHandle } from '@nasa-gcn/remix-seo'\nimport { useState } from 'react'\nimport { data, redirect, Form, useNavigation } from 'react-router'\nimport { z } from 'zod'\nimport { ErrorList } from '#app/components/forms.tsx'\nimport { Button } from '#app/components/ui/button.tsx'\nimport { Icon } from '#app/components/ui/icon.tsx'\nimport { StatusButton } from '#app/components/ui/status-button.tsx'\nimport { requireUserId } from '#app/utils/auth.server.ts'\nimport { prisma } from '#app/utils/db.server.ts'\nimport {\n\tgetUserImgSrc,\n\tuseDoubleCheck,\n\tuseIsPending,\n} from '#app/utils/misc.tsx'\nimport { uploadProfileImage } from '#app/utils/storage.server.ts'\nimport { type Route } from './+types/profile.photo.ts'\nimport { type BreadcrumbHandle } from './profile.tsx'\n\nexport const handle: BreadcrumbHandle & SEOHandle = {\n\tbreadcrumb: <Icon name=\"avatar\">Photo</Icon>,\n\tgetSitemapEntries: () => null,\n}\n\nconst MAX_SIZE = 1024 * 1024 * 3 // 3MB\n\nconst DeleteImageSchema = z.object({\n\tintent: z.literal('delete'),\n})\n\nconst NewImageSchema = z.object({\n\tintent: z.literal('submit'),\n\tphotoFile: z\n\t\t.instanceof(File)\n\t\t.refine((file) => file.size > 0, 'Image is required')\n\t\t.refine(\n\t\t\t(file) => file.size <= MAX_SIZE,\n\t\t\t'Image size must be less than 3MB',\n\t\t),\n})\n\nconst PhotoFormSchema = z.discriminatedUnion('intent', [\n\tDeleteImageSchema,\n\tNewImageSchema,\n])\n\nexport async function loader({ request }: Route.LoaderArgs) {\n\tconst userId = await requireUserId(request)\n\tconst user = await prisma.user.findUnique({\n\t\twhere: { id: userId },\n\t\tselect: {\n\t\t\tid: true,\n\t\t\tname: true,\n\t\t\tusername: true,\n\t\t\timage: { select: { objectKey: true } },\n\t\t},\n\t})\n\tinvariantResponse(user, 'User not found', { status: 404 })\n\treturn { user }\n}\n\nexport async function action({ request }: Route.ActionArgs) {\n\tconst userId = await requireUserId(request)\n\n\tconst formData = await parseFormData(request, { maxFileSize: MAX_SIZE })\n\tconst submission = await parseWithZod(formData, {\n\t\tschema: PhotoFormSchema.transform(async (data) => {\n\t\t\tif (data.intent === 'delete') return { intent: 'delete' }\n\t\t\tif (data.photoFile.size <= 0) return z.NEVER\n\t\t\treturn {\n\t\t\t\tintent: data.intent,\n\t\t\t\timage: {\n\t\t\t\t\tobjectKey: await uploadProfileImage(userId, data.photoFile),\n\t\t\t\t},\n\t\t\t}\n\t\t}),\n\t\tasync: true,\n\t})\n\n\tif (submission.status !== 'success') {\n\t\treturn data(\n\t\t\t{ result: submission.reply() },\n\t\t\t{ status: submission.status === 'error' ? 400 : 200 },\n\t\t)\n\t}\n\n\tconst { image, intent } = submission.value\n\n\tif (intent === 'delete') {\n\t\tawait prisma.userImage.deleteMany({ where: { userId } })\n\t\treturn redirect('/settings/profile')\n\t}\n\n\tawait prisma.$transaction(async ($prisma) => {\n\t\tawait $prisma.userImage.deleteMany({ where: { userId } })\n\t\tawait $prisma.user.update({\n\t\t\twhere: { id: userId },\n\t\t\tdata: { image: { create: image } },\n\t\t})\n\t})\n\n\treturn redirect('/settings/profile')\n}\n\nexport default function PhotoRoute({\n\tloaderData,\n\tactionData,\n}: Route.ComponentProps) {\n\tconst doubleCheckDeleteImage = useDoubleCheck()\n\n\tconst navigation = useNavigation()\n\n\tconst [form, fields] = useForm({\n\t\tid: 'profile-photo',\n\t\tconstraint: getZodConstraint(PhotoFormSchema),\n\t\tlastResult: actionData?.result,\n\t\tonValidate({ formData }) {\n\t\t\treturn parseWithZod(formData, { schema: PhotoFormSchema })\n\t\t},\n\t\tshouldRevalidate: 'onBlur',\n\t})\n\n\tconst isPending = useIsPending()\n\tconst pendingIntent = isPending ? navigation.formData?.get('intent') : null\n\tconst lastSubmissionIntent = fields.intent.value\n\n\tconst [newImageSrc, setNewImageSrc] = useState<string | null>(null)\n\n\treturn (\n\t\t<div>\n\t\t\t<Form\n\t\t\t\tmethod=\"POST\"\n\t\t\t\tencType=\"multipart/form-data\"\n\t\t\t\tclassName=\"flex flex-col items-center justify-center gap-10\"\n\t\t\t\tonReset={() => setNewImageSrc(null)}\n\t\t\t\t{...getFormProps(form)}\n\t\t\t>\n\t\t\t\t<img\n\t\t\t\t\tsrc={\n\t\t\t\t\t\tnewImageSrc ??\n\t\t\t\t\t\t(loaderData.user\n\t\t\t\t\t\t\t? getUserImgSrc(loaderData.user.image?.objectKey)\n\t\t\t\t\t\t\t: '')\n\t\t\t\t\t}\n\t\t\t\t\tclassName=\"size-52 rounded-full object-cover\"\n\t\t\t\t\talt={loaderData.user?.name ?? loaderData.user?.username}\n\t\t\t\t/>\n\t\t\t\t<ErrorList errors={fields.photoFile.errors} id={fields.photoFile.id} />\n\t\t\t\t<div className=\"flex gap-4\">\n\t\t\t\t\t{/*\n\t\t\t\t\t\tWe're doing some kinda odd things to make it so this works well\n\t\t\t\t\t\twithout JavaScript. Basically, we're using CSS to ensure the right\n\t\t\t\t\t\tbuttons show up based on the input's \"valid\" state (whether or not\n\t\t\t\t\t\tan image has been selected). Progressive enhancement FTW!\n\t\t\t\t\t*/}\n\t\t\t\t\t<input\n\t\t\t\t\t\t{...getInputProps(fields.photoFile, { type: 'file' })}\n\t\t\t\t\t\taccept=\"image/*\"\n\t\t\t\t\t\tclassName=\"peer sr-only\"\n\t\t\t\t\t\trequired\n\t\t\t\t\t\ttabIndex={newImageSrc ? -1 : 0}\n\t\t\t\t\t\tonChange={(e) => {\n\t\t\t\t\t\t\tconst file = e.currentTarget.files?.[0]\n\t\t\t\t\t\t\tif (file) {\n\t\t\t\t\t\t\t\tconst reader = new FileReader()\n\t\t\t\t\t\t\t\treader.onload = (event) => {\n\t\t\t\t\t\t\t\t\tsetNewImageSrc(event.target?.result?.toString() ?? null)\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\treader.readAsDataURL(file)\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}}\n\t\t\t\t\t/>\n\t\t\t\t\t<Button\n\t\t\t\t\t\tasChild\n\t\t\t\t\t\tclassName=\"cursor-pointer peer-valid:hidden peer-focus-within:ring-2 peer-focus-visible:ring-2\"\n\t\t\t\t\t>\n\t\t\t\t\t\t<label htmlFor={fields.photoFile.id}>\n\t\t\t\t\t\t\t<Icon name=\"pencil-1\">Change</Icon>\n\t\t\t\t\t\t</label>\n\t\t\t\t\t</Button>\n\t\t\t\t\t<StatusButton\n\t\t\t\t\t\tname=\"intent\"\n\t\t\t\t\t\tvalue=\"submit\"\n\t\t\t\t\t\ttype=\"submit\"\n\t\t\t\t\t\tclassName=\"peer-invalid:hidden\"\n\t\t\t\t\t\tstatus={\n\t\t\t\t\t\t\tpendingIntent === 'submit'\n\t\t\t\t\t\t\t\t? 'pending'\n\t\t\t\t\t\t\t\t: lastSubmissionIntent === 'submit'\n\t\t\t\t\t\t\t\t\t? (form.status ?? 'idle')\n\t\t\t\t\t\t\t\t\t: 'idle'\n\t\t\t\t\t\t}\n\t\t\t\t\t>\n\t\t\t\t\t\tSave Photo\n\t\t\t\t\t</StatusButton>\n\t\t\t\t\t<Button\n\t\t\t\t\t\tvariant=\"destructive\"\n\t\t\t\t\t\tclassName=\"peer-invalid:hidden\"\n\t\t\t\t\t\t{...form.reset.getButtonProps()}\n\t\t\t\t\t>\n\t\t\t\t\t\t<Icon name=\"trash\">Reset</Icon>\n\t\t\t\t\t</Button>\n\t\t\t\t\t{loaderData.user.image ? (\n\t\t\t\t\t\t<StatusButton\n\t\t\t\t\t\t\tclassName=\"peer-valid:hidden\"\n\t\t\t\t\t\t\tvariant=\"destructive\"\n\t\t\t\t\t\t\t{...doubleCheckDeleteImage.getButtonProps({\n\t\t\t\t\t\t\t\ttype: 'submit',\n\t\t\t\t\t\t\t\tname: 'intent',\n\t\t\t\t\t\t\t\tvalue: 'delete',\n\t\t\t\t\t\t\t})}\n\t\t\t\t\t\t\tstatus={\n\t\t\t\t\t\t\t\tpendingIntent === 'delete'\n\t\t\t\t\t\t\t\t\t? 'pending'\n\t\t\t\t\t\t\t\t\t: lastSubmissionIntent === 'delete'\n\t\t\t\t\t\t\t\t\t\t? (form.status ?? 'idle')\n\t\t\t\t\t\t\t\t\t\t: 'idle'\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<Icon name=\"trash\">\n\t\t\t\t\t\t\t\t{doubleCheckDeleteImage.doubleCheck\n\t\t\t\t\t\t\t\t\t? 'Are you sure?'\n\t\t\t\t\t\t\t\t\t: 'Delete'}\n\t\t\t\t\t\t\t</Icon>\n\t\t\t\t\t\t</StatusButton>\n\t\t\t\t\t) : null}\n\t\t\t\t</div>\n\t\t\t\t<ErrorList errors={form.errors} />\n\t\t\t</Form>\n\t\t</div>\n\t)\n}\n","import { type SEOHandle } from '@nasa-gcn/remix-seo'\nimport { useFetcher } from 'react-router'\nimport { Icon } from '#app/components/ui/icon.tsx'\nimport { StatusButton } from '#app/components/ui/status-button.tsx'\nimport { requireRecentVerification } from '#app/routes/_auth+/verify.server.ts'\nimport { requireUserId } from '#app/utils/auth.server.ts'\nimport { prisma } from '#app/utils/db.server.ts'\nimport { useDoubleCheck } from '#app/utils/misc.tsx'\nimport { redirectWithToast } from '#app/utils/toast.server.ts'\nimport { type Route } from './+types/profile.two-factor.disable.ts'\nimport { type BreadcrumbHandle } from './profile.tsx'\nimport { twoFAVerificationType } from './profile.two-factor.tsx'\n\nexport const handle: BreadcrumbHandle & SEOHandle = {\n\tbreadcrumb: <Icon name=\"lock-open-1\">Disable</Icon>,\n\tgetSitemapEntries: () => null,\n}\n\nexport async function loader({ request }: Route.LoaderArgs) {\n\tawait requireRecentVerification(request)\n\treturn {}\n}\n\nexport async function action({ request }: Route.ActionArgs) {\n\tawait requireRecentVerification(request)\n\tconst userId = await requireUserId(request)\n\tawait prisma.verification.delete({\n\t\twhere: { target_type: { target: userId, type: twoFAVerificationType } },\n\t})\n\treturn redirectWithToast('/settings/profile/two-factor', {\n\t\ttitle: '2FA Disabled',\n\t\tdescription: 'Two factor authentication has been disabled.',\n\t})\n}\n\nexport default function TwoFactorDisableRoute() {\n\tconst disable2FAFetcher = useFetcher<typeof action>()\n\tconst dc = useDoubleCheck()\n\n\treturn (\n\t\t<div className=\"mx-auto max-w-sm\">\n\t\t\t<disable2FAFetcher.Form method=\"POST\">\n\t\t\t\t<p>\n\t\t\t\t\tDisabling two factor authentication is not recommended. However, if\n\t\t\t\t\tyou would like to do so, click here:\n\t\t\t\t</p>\n\t\t\t\t<StatusButton\n\t\t\t\t\tvariant=\"destructive\"\n\t\t\t\t\tstatus={disable2FAFetcher.state === 'loading' ? 'pending' : 'idle'}\n\t\t\t\t\t{...dc.getButtonProps({\n\t\t\t\t\t\tclassName: 'mx-auto',\n\t\t\t\t\t\tname: 'intent',\n\t\t\t\t\t\tvalue: 'disable',\n\t\t\t\t\t\ttype: 'submit',\n\t\t\t\t\t})}\n\t\t\t\t>\n\t\t\t\t\t{dc.doubleCheck ? 'Are you sure?' : 'Disable 2FA'}\n\t\t\t\t</StatusButton>\n\t\t\t</disable2FAFetcher.Form>\n\t\t</div>\n\t)\n}\n","import { getFormProps, getInputProps, useForm } from '@conform-to/react'\nimport { getZodConstraint, parseWithZod } from '@conform-to/zod'\nimport { type SEOHandle } from '@nasa-gcn/remix-seo'\nimport * as QRCode from 'qrcode'\nimport { data, redirect, Form, useNavigation } from 'react-router'\nimport { z } from 'zod'\nimport { ErrorList, OTPField } from '#app/components/forms.tsx'\nimport { Icon } from '#app/components/ui/icon.tsx'\nimport { StatusButton } from '#app/components/ui/status-button.tsx'\nimport { isCodeValid } from '#app/routes/_auth+/verify.server.ts'\nimport { requireUserId } from '#app/utils/auth.server.ts'\nimport { prisma } from '#app/utils/db.server.ts'\nimport { getDomainUrl, useIsPending } from '#app/utils/misc.tsx'\nimport { redirectWithToast } from '#app/utils/toast.server.ts'\nimport { getTOTPAuthUri } from '#app/utils/totp.server.ts'\nimport { type Route } from './+types/profile.two-factor.verify.ts'\nimport { type BreadcrumbHandle } from './profile.tsx'\nimport { twoFAVerificationType } from './profile.two-factor.tsx'\n\nexport const handle: BreadcrumbHandle & SEOHandle = {\n\tbreadcrumb: <Icon name=\"check\">Verify</Icon>,\n\tgetSitemapEntries: () => null,\n}\n\nconst CancelSchema = z.object({ intent: z.literal('cancel') })\nconst VerifySchema = z.object({\n\tintent: z.literal('verify'),\n\tcode: z.string().min(6).max(6),\n})\n\nconst ActionSchema = z.discriminatedUnion('intent', [\n\tCancelSchema,\n\tVerifySchema,\n])\n\nexport const twoFAVerifyVerificationType = '2fa-verify'\n\nexport async function loader({ request }: Route.LoaderArgs) {\n\tconst userId = await requireUserId(request)\n\tconst verification = await prisma.verification.findUnique({\n\t\twhere: {\n\t\t\ttarget_type: { type: twoFAVerifyVerificationType, target: userId },\n\t\t},\n\t\tselect: {\n\t\t\tid: true,\n\t\t\talgorithm: true,\n\t\t\tsecret: true,\n\t\t\tperiod: true,\n\t\t\tdigits: true,\n\t\t},\n\t})\n\tif (!verification) {\n\t\treturn redirect('/settings/profile/two-factor')\n\t}\n\tconst user = await prisma.user.findUniqueOrThrow({\n\t\twhere: { id: userId },\n\t\tselect: { email: true },\n\t})\n\tconst issuer = new URL(getDomainUrl(request)).host\n\tconst otpUri = getTOTPAuthUri({\n\t\t...verification,\n\t\taccountName: user.email,\n\t\tissuer,\n\t})\n\tconst qrCode = await QRCode.toDataURL(otpUri)\n\treturn { otpUri, qrCode }\n}\n\nexport async function action({ request }: Route.ActionArgs) {\n\tconst userId = await requireUserId(request)\n\tconst formData = await request.formData()\n\n\tconst submission = await parseWithZod(formData, {\n\t\tschema: () =>\n\t\t\tActionSchema.superRefine(async (data, ctx) => {\n\t\t\t\tif (data.intent === 'cancel') return null\n\t\t\t\tconst codeIsValid = await isCodeValid({\n\t\t\t\t\tcode: data.code,\n\t\t\t\t\ttype: twoFAVerifyVerificationType,\n\t\t\t\t\ttarget: userId,\n\t\t\t\t})\n\t\t\t\tif (!codeIsValid) {\n\t\t\t\t\tctx.addIssue({\n\t\t\t\t\t\tpath: ['code'],\n\t\t\t\t\t\tcode: z.ZodIssueCode.custom,\n\t\t\t\t\t\tmessage: `Invalid code`,\n\t\t\t\t\t})\n\t\t\t\t\treturn z.NEVER\n\t\t\t\t}\n\t\t\t}),\n\t\tasync: true,\n\t})\n\n\tif (submission.status !== 'success') {\n\t\treturn data(\n\t\t\t{ result: submission.reply() },\n\t\t\t{ status: submission.status === 'error' ? 400 : 200 },\n\t\t)\n\t}\n\n\tswitch (submission.value.intent) {\n\t\tcase 'cancel': {\n\t\t\tawait prisma.verification.deleteMany({\n\t\t\t\twhere: { type: twoFAVerifyVerificationType, target: userId },\n\t\t\t})\n\t\t\treturn redirect('/settings/profile/two-factor')\n\t\t}\n\t\tcase 'verify': {\n\t\t\tawait prisma.verification.update({\n\t\t\t\twhere: {\n\t\t\t\t\ttarget_type: { type: twoFAVerifyVerificationType, target: userId },\n\t\t\t\t},\n\t\t\t\tdata: { type: twoFAVerificationType },\n\t\t\t})\n\t\t\treturn redirectWithToast('/settings/profile/two-factor', {\n\t\t\t\ttype: 'success',\n\t\t\t\ttitle: 'Enabled',\n\t\t\t\tdescription: 'Two-factor authentication has been enabled.',\n\t\t\t})\n\t\t}\n\t}\n}\n\nexport default function TwoFactorRoute({\n\tloaderData,\n\tactionData,\n}: Route.ComponentProps) {\n\tconst navigation = useNavigation()\n\n\tconst isPending = useIsPending()\n\tconst pendingIntent = isPending ? navigation.formData?.get('intent') : null\n\n\tconst [form, fields] = useForm({\n\t\tid: 'verify-form',\n\t\tconstraint: getZodConstraint(ActionSchema),\n\t\tlastResult: actionData?.result,\n\t\tonValidate({ formData }) {\n\t\t\treturn parseWithZod(formData, { schema: ActionSchema })\n\t\t},\n\t})\n\tconst lastSubmissionIntent = fields.intent.value\n\n\treturn (\n\t\t<div>\n\t\t\t<div className=\"flex flex-col items-center gap-4\">\n\t\t\t\t<img alt=\"qr code\" src={loaderData.qrCode} className=\"size-56\" />\n\t\t\t\t<p>Scan this QR code with your authenticator app.</p>\n\t\t\t\t<p className=\"text-sm\">\n\t\t\t\t\tIf you cannot scan the QR code, you can manually add this account to\n\t\t\t\t\tyour authenticator app using this code:\n\t\t\t\t</p>\n\t\t\t\t<div className=\"p-3\">\n\t\t\t\t\t<pre\n\t\t\t\t\t\tclassName=\"text-sm break-all whitespace-pre-wrap\"\n\t\t\t\t\t\taria-label=\"One-time Password URI\"\n\t\t\t\t\t>\n\t\t\t\t\t\t{loaderData.otpUri}\n\t\t\t\t\t</pre>\n\t\t\t\t</div>\n\t\t\t\t<p className=\"text-sm\">\n\t\t\t\t\tOnce you've added the account, enter the code from your authenticator\n\t\t\t\t\tapp below. Once you enable 2FA, you will need to enter a code from\n\t\t\t\t\tyour authenticator app every time you log in or perform important\n\t\t\t\t\tactions. Do not lose access to your authenticator app, or you will\n\t\t\t\t\tlose access to your account.\n\t\t\t\t</p>\n\t\t\t\t<div className=\"flex w-full max-w-xs flex-col justify-center gap-4\">\n\t\t\t\t\t<Form method=\"POST\" {...getFormProps(form)} className=\"flex-1\">\n\t\t\t\t\t\t<div className=\"flex items-center justify-center\">\n\t\t\t\t\t\t\t<OTPField\n\t\t\t\t\t\t\t\tlabelProps={{\n\t\t\t\t\t\t\t\t\thtmlFor: fields.code.id,\n\t\t\t\t\t\t\t\t\tchildren: 'Code',\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\tinputProps={{\n\t\t\t\t\t\t\t\t\t...getInputProps(fields.code, { type: 'text' }),\n\t\t\t\t\t\t\t\t\tautoFocus: true,\n\t\t\t\t\t\t\t\t\tautoComplete: 'one-time-code',\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\terrors={fields.code.errors}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t<div className=\"min-h-[32px] px-4 pt-1 pb-3\">\n\t\t\t\t\t\t\t<ErrorList id={form.errorId} errors={form.errors} />\n\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t<div className=\"flex justify-between gap-4\">\n\t\t\t\t\t\t\t<StatusButton\n\t\t\t\t\t\t\t\tclassName=\"w-full\"\n\t\t\t\t\t\t\t\tstatus={\n\t\t\t\t\t\t\t\t\tpendingIntent === 'verify'\n\t\t\t\t\t\t\t\t\t\t? 'pending'\n\t\t\t\t\t\t\t\t\t\t: lastSubmissionIntent === 'verify'\n\t\t\t\t\t\t\t\t\t\t\t? (form.status ?? 'idle')\n\t\t\t\t\t\t\t\t\t\t\t: 'idle'\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\ttype=\"submit\"\n\t\t\t\t\t\t\t\tname=\"intent\"\n\t\t\t\t\t\t\t\tvalue=\"verify\"\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\tSubmit\n\t\t\t\t\t\t\t</StatusButton>\n\t\t\t\t\t\t\t<StatusButton\n\t\t\t\t\t\t\t\tclassName=\"w-full\"\n\t\t\t\t\t\t\t\tvariant=\"secondary\"\n\t\t\t\t\t\t\t\tstatus={\n\t\t\t\t\t\t\t\t\tpendingIntent === 'cancel'\n\t\t\t\t\t\t\t\t\t\t? 'pending'\n\t\t\t\t\t\t\t\t\t\t: lastSubmissionIntent === 'cancel'\n\t\t\t\t\t\t\t\t\t\t\t? (form.status ?? 'idle')\n\t\t\t\t\t\t\t\t\t\t\t: 'idle'\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\ttype=\"submit\"\n\t\t\t\t\t\t\t\tname=\"intent\"\n\t\t\t\t\t\t\t\tvalue=\"cancel\"\n\t\t\t\t\t\t\t\tdisabled={isPending}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\tCancel\n\t\t\t\t\t\t\t</StatusButton>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</Form>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t)\n}\n","import { type SEOHandle } from '@nasa-gcn/remix-seo'\nimport { redirect, Link, useFetcher } from 'react-router'\nimport { Icon } from '#app/components/ui/icon.tsx'\nimport { StatusButton } from '#app/components/ui/status-button.tsx'\nimport { requireUserId } from '#app/utils/auth.server.ts'\nimport { prisma } from '#app/utils/db.server.ts'\nimport { generateTOTP } from '#app/utils/totp.server.ts'\nimport { type Route } from './+types/profile.two-factor.index.ts'\nimport { twoFAVerificationType } from './profile.two-factor.tsx'\nimport { twoFAVerifyVerificationType } from './profile.two-factor.verify.tsx'\n\nexport const handle: SEOHandle = {\n\tgetSitemapEntries: () => null,\n}\n\nexport async function loader({ request }: Route.LoaderArgs) {\n\tconst userId = await requireUserId(request)\n\tconst verification = await prisma.verification.findUnique({\n\t\twhere: { target_type: { type: twoFAVerificationType, target: userId } },\n\t\tselect: { id: true },\n\t})\n\treturn { is2FAEnabled: Boolean(verification) }\n}\n\nexport async function action({ request }: Route.ActionArgs) {\n\tconst userId = await requireUserId(request)\n\tconst { otp: _otp, ...config } = await generateTOTP()\n\tconst verificationData = {\n\t\t...config,\n\t\ttype: twoFAVerifyVerificationType,\n\t\ttarget: userId,\n\t}\n\tawait prisma.verification.upsert({\n\t\twhere: {\n\t\t\ttarget_type: { target: userId, type: twoFAVerifyVerificationType },\n\t\t},\n\t\tcreate: verificationData,\n\t\tupdate: verificationData,\n\t})\n\treturn redirect('/settings/profile/two-factor/verify')\n}\n\nexport default function TwoFactorRoute({ loaderData }: Route.ComponentProps) {\n\tconst enable2FAFetcher = useFetcher<typeof action>()\n\n\treturn (\n\t\t<div className=\"flex flex-col gap-4\">\n\t\t\t{loaderData.is2FAEnabled ? (\n\t\t\t\t<>\n\t\t\t\t\t<p className=\"text-lg\">\n\t\t\t\t\t\t<Icon name=\"check\">\n\t\t\t\t\t\t\tYou have enabled two-factor authentication.\n\t\t\t\t\t\t</Icon>\n\t\t\t\t\t</p>\n\t\t\t\t\t<Link to=\"disable\">\n\t\t\t\t\t\t<Icon name=\"lock-open-1\">Disable 2FA</Icon>\n\t\t\t\t\t</Link>\n\t\t\t\t</>\n\t\t\t) : (\n\t\t\t\t<>\n\t\t\t\t\t<p>\n\t\t\t\t\t\t<Icon name=\"lock-open-1\">\n\t\t\t\t\t\t\tYou have not enabled two-factor authentication yet.\n\t\t\t\t\t\t</Icon>\n\t\t\t\t\t</p>\n\t\t\t\t\t<p className=\"text-sm\">\n\t\t\t\t\t\tTwo factor authentication adds an extra layer of security to your\n\t\t\t\t\t\taccount. You will need to enter a code from an authenticator app\n\t\t\t\t\t\tlike{' '}\n\t\t\t\t\t\t<a className=\"underline\" href=\"https://1password.com/\">\n\t\t\t\t\t\t\t1Password\n\t\t\t\t\t\t</a>{' '}\n\t\t\t\t\t\tto log in.\n\t\t\t\t\t</p>\n\t\t\t\t\t<enable2FAFetcher.Form method=\"POST\">\n\t\t\t\t\t\t<StatusButton\n\t\t\t\t\t\t\ttype=\"submit\"\n\t\t\t\t\t\t\tname=\"intent\"\n\t\t\t\t\t\t\tvalue=\"enable\"\n\t\t\t\t\t\t\tstatus={enable2FAFetcher.state === 'loading' ? 'pending' : 'idle'}\n\t\t\t\t\t\t\tclassName=\"mx-auto\"\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\tEnable 2FA\n\t\t\t\t\t\t</StatusButton>\n\t\t\t\t\t</enable2FAFetcher.Form>\n\t\t\t\t</>\n\t\t\t)}\n\t\t</div>\n\t)\n}\n","import { invariantResponse } from '@epic-web/invariant'\nimport { Img } from 'openimg/react'\nimport {\n\ttype LoaderFunctionArgs,\n\tForm,\n\tLink,\n\tuseLoaderData,\n} from 'react-router'\nimport { GeneralErrorBoundary } from '#app/components/error-boundary.tsx'\nimport { Spacer } from '#app/components/spacer.tsx'\nimport { Button } from '#app/components/ui/button.tsx'\nimport { Icon } from '#app/components/ui/icon.tsx'\nimport { prisma } from '#app/utils/db.server.ts'\nimport { getUserImgSrc } from '#app/utils/misc.tsx'\nimport { useOptionalUser } from '#app/utils/user.ts'\nimport { type Route } from './+types/$username.ts'\n\nexport async function loader({ params }: LoaderFunctionArgs) {\n\tconst user = await prisma.user.findFirst({\n\t\tselect: {\n\t\t\tid: true,\n\t\t\tname: true,\n\t\t\tusername: true,\n\t\t\tcreatedAt: true,\n\t\t\timage: { select: { id: true, objectKey: true } },\n\t\t},\n\t\twhere: {\n\t\t\tusername: params.username,\n\t\t},\n\t})\n\n\tinvariantResponse(user, 'User not found', { status: 404 })\n\n\treturn { user, userJoinedDisplay: user.createdAt.toLocaleDateString() }\n}\n\nexport default function ProfileRoute() {\n\tconst data = useLoaderData<typeof loader>()\n\tconst user = data.user\n\tconst userDisplayName = user.name ?? user.username\n\tconst loggedInUser = useOptionalUser()\n\tconst isLoggedInUser = user.id === loggedInUser?.id\n\n\treturn (\n\t\t<div className=\"container mt-36 mb-48 flex flex-col items-center justify-center\">\n\t\t\t<Spacer size=\"4xs\" />\n\n\t\t\t<div className=\"bg-muted container flex flex-col items-center rounded-3xl p-12\">\n\t\t\t\t<div className=\"relative w-52\">\n\t\t\t\t\t<div className=\"absolute -top-40\">\n\t\t\t\t\t\t<div className=\"relative\">\n\t\t\t\t\t\t\t<Img\n\t\t\t\t\t\t\t\tsrc={getUserImgSrc(data.user.image?.objectKey)}\n\t\t\t\t\t\t\t\talt={userDisplayName}\n\t\t\t\t\t\t\t\tclassName=\"size-52 rounded-full object-cover\"\n\t\t\t\t\t\t\t\twidth={832}\n\t\t\t\t\t\t\t\theight={832}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\n\t\t\t\t<Spacer size=\"sm\" />\n\n\t\t\t\t<div className=\"flex flex-col items-center\">\n\t\t\t\t\t<div className=\"flex flex-wrap items-center justify-center gap-4\">\n\t\t\t\t\t\t<h1 className=\"text-h2 text-center\">{userDisplayName}</h1>\n\t\t\t\t\t</div>\n\t\t\t\t\t<p className=\"text-muted-foreground mt-2 text-center\">\n\t\t\t\t\t\tJoined {data.userJoinedDisplay}\n\t\t\t\t\t</p>\n\t\t\t\t\t{isLoggedInUser ? (\n\t\t\t\t\t\t<Form action=\"/logout\" method=\"POST\" className=\"mt-3\">\n\t\t\t\t\t\t\t<Button type=\"submit\" variant=\"link\" size=\"pill\">\n\t\t\t\t\t\t\t\t<Icon name=\"exit\" className=\"scale-125 max-md:scale-150\">\n\t\t\t\t\t\t\t\t\tLogout\n\t\t\t\t\t\t\t\t</Icon>\n\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t</Form>\n\t\t\t\t\t) : null}\n\t\t\t\t\t<div className=\"mt-10 flex gap-4\">\n\t\t\t\t\t\t{isLoggedInUser ? (\n\t\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t\t<Button asChild>\n\t\t\t\t\t\t\t\t\t<Link to=\"notes\" prefetch=\"intent\">\n\t\t\t\t\t\t\t\t\t\tMy notes\n\t\t\t\t\t\t\t\t\t</Link>\n\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t\t<Button asChild>\n\t\t\t\t\t\t\t\t\t<Link to=\"/settings/profile\" prefetch=\"intent\">\n\t\t\t\t\t\t\t\t\t\tEdit profile\n\t\t\t\t\t\t\t\t\t</Link>\n\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t</>\n\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t<Button asChild>\n\t\t\t\t\t\t\t\t<Link to=\"notes\" prefetch=\"intent\">\n\t\t\t\t\t\t\t\t\t{userDisplayName}'s notes\n\t\t\t\t\t\t\t\t</Link>\n\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t)}\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t)\n}\n\nexport const meta: Route.MetaFunction = ({ data, params }) => {\n\tconst displayName = data?.user.name ?? params.username\n\treturn [\n\t\t{ title: `${displayName} | Epic Notes` },\n\t\t{\n\t\t\tname: 'description',\n\t\t\tcontent: `Profile of ${displayName} on Epic Notes`,\n\t\t},\n\t]\n}\n\nexport function ErrorBoundary() {\n\treturn (\n\t\t<GeneralErrorBoundary\n\t\t\tstatusHandlers={{\n\t\t\t\t404: ({ params }) => (\n\t\t\t\t\t<p>No user with the username \"{params.username}\" exists</p>\n\t\t\t\t),\n\t\t\t}}\n\t\t/>\n\t)\n}\n","import { invariantResponse } from '@epic-web/invariant'\nimport { Img } from 'openimg/react'\nimport { Link, NavLink, Outlet } from 'react-router'\nimport { GeneralErrorBoundary } from '#app/components/error-boundary.tsx'\nimport { Icon } from '#app/components/ui/icon.tsx'\nimport { prisma } from '#app/utils/db.server.ts'\nimport { cn, getUserImgSrc } from '#app/utils/misc.tsx'\nimport { useOptionalUser } from '#app/utils/user.ts'\nimport { type Route } from './+types/notes.ts'\n\nexport async function loader({ params }: Route.LoaderArgs) {\n\tconst owner = await prisma.user.findFirst({\n\t\tselect: {\n\t\t\tid: true,\n\t\t\tname: true,\n\t\t\tusername: true,\n\t\t\timage: { select: { objectKey: true } },\n\t\t\tnotes: { select: { id: true, title: true } },\n\t\t},\n\t\twhere: { username: params.username },\n\t})\n\n\tinvariantResponse(owner, 'Owner not found', { status: 404 })\n\n\treturn { owner }\n}\n\nexport default function NotesRoute({ loaderData }: Route.ComponentProps) {\n\tconst user = useOptionalUser()\n\tconst isOwner = user?.id === loaderData.owner.id\n\tconst ownerDisplayName = loaderData.owner.name ?? loaderData.owner.username\n\tconst navLinkDefaultClassName =\n\t\t'line-clamp-2 block rounded-l-full py-2 pl-8 pr-6 text-base lg:text-xl'\n\treturn (\n\t\t<main className=\"container flex min-h-[400px] flex-1 px-0 pb-12 md:px-8\">\n\t\t\t<div className=\"bg-muted grid w-full grid-cols-4 pl-2 md:container md:rounded-3xl md:pr-0\">\n\t\t\t\t<div className=\"relative col-span-1\">\n\t\t\t\t\t<div className=\"absolute inset-0 flex flex-col\">\n\t\t\t\t\t\t<Link\n\t\t\t\t\t\t\tto={`/users/${loaderData.owner.username}`}\n\t\t\t\t\t\t\tclassName=\"bg-muted flex flex-col items-center justify-center gap-2 pt-12 pr-4 pb-4 pl-8 xl:flex-row xl:justify-start xl:gap-4\"\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<Img\n\t\t\t\t\t\t\t\tsrc={getUserImgSrc(loaderData.owner.image?.objectKey)}\n\t\t\t\t\t\t\t\talt={ownerDisplayName}\n\t\t\t\t\t\t\t\tclassName=\"size-16 rounded-full object-cover xl:size-24\"\n\t\t\t\t\t\t\t\twidth={256}\n\t\t\t\t\t\t\t\theight={256}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t<h1 className=\"text-center text-base font-bold md:text-lg lg:text-left lg:text-2xl\">\n\t\t\t\t\t\t\t\t{ownerDisplayName}'s Notes\n\t\t\t\t\t\t\t</h1>\n\t\t\t\t\t\t</Link>\n\t\t\t\t\t\t<ul className=\"overflow-x-hidden overflow-y-auto pb-12\">\n\t\t\t\t\t\t\t{isOwner ? (\n\t\t\t\t\t\t\t\t<li className=\"p-1 pr-0\">\n\t\t\t\t\t\t\t\t\t<NavLink\n\t\t\t\t\t\t\t\t\t\tto=\"new\"\n\t\t\t\t\t\t\t\t\t\tclassName={({ isActive }) =>\n\t\t\t\t\t\t\t\t\t\t\tcn(navLinkDefaultClassName, isActive && 'bg-accent')\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t<Icon name=\"plus\">New Note</Icon>\n\t\t\t\t\t\t\t\t\t</NavLink>\n\t\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t\t) : null}\n\t\t\t\t\t\t\t{loaderData.owner.notes.map((note) => (\n\t\t\t\t\t\t\t\t<li key={note.id} className=\"p-1 pr-0\">\n\t\t\t\t\t\t\t\t\t<NavLink\n\t\t\t\t\t\t\t\t\t\tto={note.id}\n\t\t\t\t\t\t\t\t\t\tpreventScrollReset\n\t\t\t\t\t\t\t\t\t\tprefetch=\"intent\"\n\t\t\t\t\t\t\t\t\t\tclassName={({ isActive }) =>\n\t\t\t\t\t\t\t\t\t\t\tcn(navLinkDefaultClassName, isActive && 'bg-accent')\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t{note.title}\n\t\t\t\t\t\t\t\t\t</NavLink>\n\t\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t</ul>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t<div className=\"bg-accent relative col-span-3 md:rounded-r-3xl\">\n\t\t\t\t\t<Outlet />\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</main>\n\t)\n}\n\nexport function ErrorBoundary() {\n\treturn (\n\t\t<GeneralErrorBoundary\n\t\t\tstatusHandlers={{\n\t\t\t\t404: ({ params }) => (\n\t\t\t\t\t<p>No user with the username \"{params.username}\" exists</p>\n\t\t\t\t),\n\t\t\t}}\n\t\t/>\n\t)\n}\n","export const floatingToolbarClassName =\n\t'absolute bottom-3 inset-x-3 flex items-center gap-2 rounded-lg bg-muted/80 p-4 pl-5 shadow-xl shadow-accent backdrop-blur-xs md:gap-4 md:pl-7 justify-end'\n","import { getFormProps, useForm } from '@conform-to/react'\nimport { parseWithZod } from '@conform-to/zod'\nimport { invariantResponse } from '@epic-web/invariant'\nimport { formatDistanceToNow } from 'date-fns'\nimport { Img } from 'openimg/react'\nimport { useRef, useEffect } from 'react'\nimport { data, Form, Link } from 'react-router'\nimport { z } from 'zod'\nimport { GeneralErrorBoundary } from '#app/components/error-boundary.tsx'\nimport { floatingToolbarClassName } from '#app/components/floating-toolbar.tsx'\nimport { ErrorList } from '#app/components/forms.tsx'\nimport { Button } from '#app/components/ui/button.tsx'\nimport { Icon } from '#app/components/ui/icon.tsx'\nimport { StatusButton } from '#app/components/ui/status-button.tsx'\nimport { requireUserId } from '#app/utils/auth.server.ts'\nimport { prisma } from '#app/utils/db.server.ts'\nimport { getNoteImgSrc, useIsPending } from '#app/utils/misc.tsx'\nimport { requireUserWithPermission } from '#app/utils/permissions.server.ts'\nimport { redirectWithToast } from '#app/utils/toast.server.ts'\nimport { userHasPermission, useOptionalUser } from '#app/utils/user.ts'\nimport { type Route } from './+types/notes.$noteId.ts'\nimport { type Route as NotesRoute } from './+types/notes.ts'\n\nexport async function loader({ params }: Route.LoaderArgs) {\n\tconst note = await prisma.note.findUnique({\n\t\twhere: { id: params.noteId },\n\t\tselect: {\n\t\t\tid: true,\n\t\t\ttitle: true,\n\t\t\tcontent: true,\n\t\t\townerId: true,\n\t\t\tupdatedAt: true,\n\t\t\timages: {\n\t\t\t\tselect: {\n\t\t\t\t\taltText: true,\n\t\t\t\t\tobjectKey: true,\n\t\t\t\t},\n\t\t\t},\n\t\t},\n\t})\n\n\tinvariantResponse(note, 'Not found', { status: 404 })\n\n\tconst date = new Date(note.updatedAt)\n\tconst timeAgo = formatDistanceToNow(date)\n\n\treturn { note, timeAgo }\n}\n\nconst DeleteFormSchema = z.object({\n\tintent: z.literal('delete-note'),\n\tnoteId: z.string(),\n})\n\nexport async function action({ request }: Route.ActionArgs) {\n\tconst userId = await requireUserId(request)\n\tconst formData = await request.formData()\n\tconst submission = parseWithZod(formData, {\n\t\tschema: DeleteFormSchema,\n\t})\n\tif (submission.status !== 'success') {\n\t\treturn data(\n\t\t\t{ result: submission.reply() },\n\t\t\t{ status: submission.status === 'error' ? 400 : 200 },\n\t\t)\n\t}\n\n\tconst { noteId } = submission.value\n\n\tconst note = await prisma.note.findFirst({\n\t\tselect: { id: true, ownerId: true, owner: { select: { username: true } } },\n\t\twhere: { id: noteId },\n\t})\n\tinvariantResponse(note, 'Not found', { status: 404 })\n\n\tconst isOwner = note.ownerId === userId\n\tawait requireUserWithPermission(\n\t\trequest,\n\t\tisOwner ? `delete:note:own` : `delete:note:any`,\n\t)\n\n\tawait prisma.note.delete({ where: { id: note.id } })\n\n\treturn redirectWithToast(`/users/${note.owner.username}/notes`, {\n\t\ttype: 'success',\n\t\ttitle: 'Success',\n\t\tdescription: 'Your note has been deleted.',\n\t})\n}\n\nexport default function NoteRoute({\n\tloaderData,\n\tactionData,\n}: Route.ComponentProps) {\n\tconst user = useOptionalUser()\n\tconst isOwner = user?.id === loaderData.note.ownerId\n\tconst canDelete = userHasPermission(\n\t\tuser,\n\t\tisOwner ? `delete:note:own` : `delete:note:any`,\n\t)\n\tconst displayBar = canDelete || isOwner\n\n\t// Add ref for auto-focusing\n\tconst sectionRef = useRef<HTMLElement>(null)\n\n\t// Focus the section when the note ID changes\n\tuseEffect(() => {\n\t\tif (sectionRef.current) {\n\t\t\tsectionRef.current.focus()\n\t\t}\n\t}, [loaderData.note.id])\n\n\treturn (\n\t\t<section\n\t\t\tref={sectionRef}\n\t\t\tclassName=\"absolute inset-0 flex flex-col px-10\"\n\t\t\taria-labelledby=\"note-title\"\n\t\t\ttabIndex={-1} // Make the section focusable without keyboard navigation\n\t\t>\n\t\t\t<h2 id=\"note-title\" className=\"text-h2 mb-2 pt-12 lg:mb-6\">\n\t\t\t\t{loaderData.note.title}\n\t\t\t</h2>\n\t\t\t<div className={`${displayBar ? 'pb-24' : 'pb-12'} overflow-y-auto`}>\n\t\t\t\t<ul className=\"flex flex-wrap gap-5 py-5\">\n\t\t\t\t\t{loaderData.note.images.map((image) => (\n\t\t\t\t\t\t<li key={image.objectKey}>\n\t\t\t\t\t\t\t<a href={getNoteImgSrc(image.objectKey)}>\n\t\t\t\t\t\t\t\t<Img\n\t\t\t\t\t\t\t\t\tsrc={getNoteImgSrc(image.objectKey)}\n\t\t\t\t\t\t\t\t\talt={image.altText ?? ''}\n\t\t\t\t\t\t\t\t\tclassName=\"size-32 rounded-lg object-cover\"\n\t\t\t\t\t\t\t\t\twidth={512}\n\t\t\t\t\t\t\t\t\theight={512}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</a>\n\t\t\t\t\t\t</li>\n\t\t\t\t\t))}\n\t\t\t\t</ul>\n\t\t\t\t<p className=\"text-sm whitespace-break-spaces md:text-lg\">\n\t\t\t\t\t{loaderData.note.content}\n\t\t\t\t</p>\n\t\t\t</div>\n\t\t\t{displayBar ? (\n\t\t\t\t<div className={floatingToolbarClassName}>\n\t\t\t\t\t<span className=\"text-foreground/90 text-sm max-[524px]:hidden\">\n\t\t\t\t\t\t<Icon name=\"clock\" className=\"scale-125\">\n\t\t\t\t\t\t\t{loaderData.timeAgo} ago\n\t\t\t\t\t\t</Icon>\n\t\t\t\t\t</span>\n\t\t\t\t\t<div className=\"grid flex-1 grid-cols-2 justify-end gap-2 min-[525px]:flex md:gap-4\">\n\t\t\t\t\t\t{canDelete ? (\n\t\t\t\t\t\t\t<DeleteNote id={loaderData.note.id} actionData={actionData} />\n\t\t\t\t\t\t) : null}\n\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\tasChild\n\t\t\t\t\t\t\tclassName=\"min-[525px]:max-md:aspect-square min-[525px]:max-md:px-0\"\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<Link to=\"edit\">\n\t\t\t\t\t\t\t\t<Icon name=\"pencil-1\" className=\"scale-125 max-md:scale-150\">\n\t\t\t\t\t\t\t\t\t<span className=\"max-md:hidden\">Edit</span>\n\t\t\t\t\t\t\t\t</Icon>\n\t\t\t\t\t\t\t</Link>\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t) : null}\n\t\t</section>\n\t)\n}\n\nexport function DeleteNote({\n\tid,\n\tactionData,\n}: {\n\tid: string\n\tactionData: Route.ComponentProps['actionData'] | undefined\n}) {\n\tconst isPending = useIsPending()\n\tconst [form] = useForm({\n\t\tid: 'delete-note',\n\t\tlastResult: actionData?.result,\n\t})\n\n\treturn (\n\t\t<Form method=\"POST\" {...getFormProps(form)}>\n\t\t\t<input type=\"hidden\" name=\"noteId\" value={id} />\n\t\t\t<StatusButton\n\t\t\t\ttype=\"submit\"\n\t\t\t\tname=\"intent\"\n\t\t\t\tvalue=\"delete-note\"\n\t\t\t\tvariant=\"destructive\"\n\t\t\t\tstatus={isPending ? 'pending' : (form.status ?? 'idle')}\n\t\t\t\tdisabled={isPending}\n\t\t\t\tclassName=\"w-full max-md:aspect-square max-md:px-0\"\n\t\t\t>\n\t\t\t\t<Icon name=\"trash\" className=\"scale-125 max-md:scale-150\">\n\t\t\t\t\t<span className=\"max-md:hidden\">Delete</span>\n\t\t\t\t</Icon>\n\t\t\t</StatusButton>\n\t\t\t<ErrorList errors={form.errors} id={form.errorId} />\n\t\t</Form>\n\t)\n}\n\nexport const meta: Route.MetaFunction = ({ data, params, matches }) => {\n\tconst notesMatch = matches.find(\n\t\t(m) => m?.id === 'routes/users+/$username_+/notes',\n\t) as { data: NotesRoute.ComponentProps['loaderData'] } | undefined\n\n\tconst displayName = notesMatch?.data?.owner.name ?? params.username\n\tconst noteTitle = data?.note.title ?? 'Note'\n\tconst noteContentsSummary =\n\t\tdata && data.note.content.length > 100\n\t\t\t? data?.note.content.slice(0, 97) + '...'\n\t\t\t: 'No content'\n\treturn [\n\t\t{ title: `${noteTitle} | ${displayName}'s Notes | Epic Notes` },\n\t\t{\n\t\t\tname: 'description',\n\t\t\tcontent: noteContentsSummary,\n\t\t},\n\t]\n}\n\nexport function ErrorBoundary() {\n\treturn (\n\t\t<GeneralErrorBoundary\n\t\t\tstatusHandlers={{\n\t\t\t\t403: () => <p>You are not allowed to do that</p>,\n\t\t\t\t404: ({ params }) => (\n\t\t\t\t\t<p>No note with the id \"{params.noteId}\" exists</p>\n\t\t\t\t),\n\t\t\t}}\n\t\t/>\n\t)\n}\n","import {\n\tFormProvider,\n\tgetFieldsetProps,\n\tgetFormProps,\n\tgetInputProps,\n\tgetTextareaProps,\n\tuseForm,\n\ttype FieldMetadata,\n} from '@conform-to/react'\nimport { getZodConstraint, parseWithZod } from '@conform-to/zod'\nimport { Img } from 'openimg/react'\nimport { useState } from 'react'\nimport { Form } from 'react-router'\nimport { z } from 'zod'\nimport { GeneralErrorBoundary } from '#app/components/error-boundary.tsx'\nimport { floatingToolbarClassName } from '#app/components/floating-toolbar.tsx'\nimport { ErrorList, Field, TextareaField } from '#app/components/forms.tsx'\nimport { Button } from '#app/components/ui/button.tsx'\nimport { Icon } from '#app/components/ui/icon.tsx'\nimport { Label } from '#app/components/ui/label.tsx'\nimport { StatusButton } from '#app/components/ui/status-button.tsx'\nimport { Textarea } from '#app/components/ui/textarea.tsx'\nimport { cn, getNoteImgSrc, useIsPending } from '#app/utils/misc.tsx'\nimport { type Route } from './+types/notes.$noteId_.edit.ts'\n\nconst titleMinLength = 1\nconst titleMaxLength = 100\nconst contentMinLength = 1\nconst contentMaxLength = 10000\n\nexport const MAX_UPLOAD_SIZE = 1024 * 1024 * 3 // 3MB\n\nconst ImageFieldsetSchema = z.object({\n\tid: z.string().optional(),\n\tfile: z\n\t\t.instanceof(File)\n\t\t.optional()\n\t\t.refine((file) => {\n\t\t\treturn !file || file.size <= MAX_UPLOAD_SIZE\n\t\t}, 'File size must be less than 3MB'),\n\taltText: z.string().optional(),\n})\n\nexport type ImageFieldset = z.infer<typeof ImageFieldsetSchema>\n\nexport const NoteEditorSchema = z.object({\n\tid: z.string().optional(),\n\ttitle: z.string().min(titleMinLength).max(titleMaxLength),\n\tcontent: z.string().min(contentMinLength).max(contentMaxLength),\n\timages: z.array(ImageFieldsetSchema).max(5).optional(),\n})\n\nexport function NoteEditor({\n\tnote,\n\tactionData,\n}: {\n\tnote?: Route.ComponentProps['loaderData']['note']\n\tactionData?: Route.ComponentProps['actionData']\n}) {\n\tconst isPending = useIsPending()\n\n\tconst [form, fields] = useForm({\n\t\tid: 'note-editor',\n\t\tconstraint: getZodConstraint(NoteEditorSchema),\n\t\tlastResult: actionData?.result,\n\t\tonValidate({ formData }) {\n\t\t\treturn parseWithZod(formData, { schema: NoteEditorSchema })\n\t\t},\n\t\tdefaultValue: {\n\t\t\t...note,\n\t\t\timages: note?.images ?? [{}],\n\t\t},\n\t\tshouldRevalidate: 'onBlur',\n\t})\n\tconst imageList = fields.images.getFieldList()\n\n\treturn (\n\t\t<div className=\"absolute inset-0\">\n\t\t\t<FormProvider context={form.context}>\n\t\t\t\t<Form\n\t\t\t\t\tmethod=\"POST\"\n\t\t\t\t\tclassName=\"flex h-full flex-col gap-y-4 overflow-x-hidden overflow-y-auto px-10 pt-12 pb-28\"\n\t\t\t\t\t{...getFormProps(form)}\n\t\t\t\t\tencType=\"multipart/form-data\"\n\t\t\t\t>\n\t\t\t\t\t{/*\n\t\t\t\t\tThis hidden submit button is here to ensure that when the user hits\n\t\t\t\t\t\"enter\" on an input field, the primary form function is submitted\n\t\t\t\t\trather than the first button in the form (which is delete/add image).\n\t\t\t\t*/}\n\t\t\t\t\t<button type=\"submit\" className=\"hidden\" />\n\t\t\t\t\t{note ? <input type=\"hidden\" name=\"id\" value={note.id} /> : null}\n\t\t\t\t\t<div className=\"flex flex-col gap-1\">\n\t\t\t\t\t\t<Field\n\t\t\t\t\t\t\tlabelProps={{ children: 'Title' }}\n\t\t\t\t\t\t\tinputProps={{\n\t\t\t\t\t\t\t\tautoFocus: true,\n\t\t\t\t\t\t\t\t...getInputProps(fields.title, { type: 'text' }),\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\terrors={fields.title.errors}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<TextareaField\n\t\t\t\t\t\t\tlabelProps={{ children: 'Content' }}\n\t\t\t\t\t\t\ttextareaProps={{\n\t\t\t\t\t\t\t\t...getTextareaProps(fields.content),\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\terrors={fields.content.errors}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<Label>Images</Label>\n\t\t\t\t\t\t\t<ul className=\"flex flex-col gap-4\">\n\t\t\t\t\t\t\t\t{imageList.map((imageMeta, index) => {\n\t\t\t\t\t\t\t\t\tconst imageMetaId = imageMeta.getFieldset().id.value\n\t\t\t\t\t\t\t\t\tconst image = note?.images.find(\n\t\t\t\t\t\t\t\t\t\t({ id }) => id === imageMetaId,\n\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t\t<li\n\t\t\t\t\t\t\t\t\t\t\tkey={imageMeta.key}\n\t\t\t\t\t\t\t\t\t\t\tclassName=\"border-muted-foreground relative border-b-2\"\n\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t<button\n\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"text-foreground-destructive absolute top-0 right-0\"\n\t\t\t\t\t\t\t\t\t\t\t\t{...form.remove.getButtonProps({\n\t\t\t\t\t\t\t\t\t\t\t\t\tname: fields.images.name,\n\t\t\t\t\t\t\t\t\t\t\t\t\tindex,\n\t\t\t\t\t\t\t\t\t\t\t\t})}\n\t\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t\t<span aria-hidden>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<Icon name=\"cross-1\" />\n\t\t\t\t\t\t\t\t\t\t\t\t</span>{' '}\n\t\t\t\t\t\t\t\t\t\t\t\t<span className=\"sr-only\">\n\t\t\t\t\t\t\t\t\t\t\t\t\tRemove image {index + 1}\n\t\t\t\t\t\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t\t\t\t\t\t<ImageChooser\n\t\t\t\t\t\t\t\t\t\t\t\tmeta={imageMeta}\n\t\t\t\t\t\t\t\t\t\t\t\tobjectKey={image?.objectKey}\n\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t})}\n\t\t\t\t\t\t\t</ul>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\tclassName=\"mt-3\"\n\t\t\t\t\t\t\t{...form.insert.getButtonProps({ name: fields.images.name })}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<span aria-hidden>\n\t\t\t\t\t\t\t\t<Icon name=\"plus\">Image</Icon>\n\t\t\t\t\t\t\t</span>{' '}\n\t\t\t\t\t\t\t<span className=\"sr-only\">Add image</span>\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t</div>\n\t\t\t\t\t<ErrorList id={form.errorId} errors={form.errors} />\n\t\t\t\t</Form>\n\t\t\t\t<div className={floatingToolbarClassName}>\n\t\t\t\t\t<Button variant=\"destructive\" {...form.reset.getButtonProps()}>\n\t\t\t\t\t\tReset\n\t\t\t\t\t</Button>\n\t\t\t\t\t<StatusButton\n\t\t\t\t\t\tform={form.id}\n\t\t\t\t\t\ttype=\"submit\"\n\t\t\t\t\t\tdisabled={isPending}\n\t\t\t\t\t\tstatus={isPending ? 'pending' : 'idle'}\n\t\t\t\t\t>\n\t\t\t\t\t\tSubmit\n\t\t\t\t\t</StatusButton>\n\t\t\t\t</div>\n\t\t\t</FormProvider>\n\t\t</div>\n\t)\n}\n\nfunction ImageChooser({\n\tmeta,\n\tobjectKey,\n}: {\n\tmeta: FieldMetadata<ImageFieldset>\n\tobjectKey: string | undefined\n}) {\n\tconst fields = meta.getFieldset()\n\tconst existingImage = Boolean(fields.id.initialValue)\n\tconst [previewImage, setPreviewImage] = useState<string | null>(\n\t\tobjectKey ? getNoteImgSrc(objectKey) : null,\n\t)\n\tconst [altText, setAltText] = useState(fields.altText.initialValue ?? '')\n\n\treturn (\n\t\t<fieldset {...getFieldsetProps(meta)}>\n\t\t\t<div className=\"flex gap-3\">\n\t\t\t\t<div className=\"w-32\">\n\t\t\t\t\t<div className=\"relative size-32\">\n\t\t\t\t\t\t<label\n\t\t\t\t\t\t\thtmlFor={fields.file.id}\n\t\t\t\t\t\t\tclassName={cn('group absolute size-32 rounded-lg', {\n\t\t\t\t\t\t\t\t'bg-accent opacity-40 focus-within:opacity-100 hover:opacity-100':\n\t\t\t\t\t\t\t\t\t!previewImage,\n\t\t\t\t\t\t\t\t'cursor-pointer focus-within:ring-2': !existingImage,\n\t\t\t\t\t\t\t})}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t{previewImage ? (\n\t\t\t\t\t\t\t\t<div className=\"relative\">\n\t\t\t\t\t\t\t\t\t{existingImage && !previewImage.startsWith('data:') ? (\n\t\t\t\t\t\t\t\t\t\t<Img\n\t\t\t\t\t\t\t\t\t\t\tsrc={previewImage}\n\t\t\t\t\t\t\t\t\t\t\talt={altText ?? ''}\n\t\t\t\t\t\t\t\t\t\t\tclassName=\"size-32 rounded-lg object-cover\"\n\t\t\t\t\t\t\t\t\t\t\twidth={512}\n\t\t\t\t\t\t\t\t\t\t\theight={512}\n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t\t\t\t<img\n\t\t\t\t\t\t\t\t\t\t\tsrc={previewImage}\n\t\t\t\t\t\t\t\t\t\t\talt={altText ?? ''}\n\t\t\t\t\t\t\t\t\t\t\tclassName=\"size-32 rounded-lg object-cover\"\n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t\t{existingImage ? null : (\n\t\t\t\t\t\t\t\t\t\t<div className=\"bg-secondary text-secondary-foreground pointer-events-none absolute -top-0.5 -right-0.5 rotate-12 rounded-sm px-2 py-1 text-xs shadow-md\">\n\t\t\t\t\t\t\t\t\t\t\tnew\n\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t\t<div className=\"border-muted-foreground text-muted-foreground flex size-32 items-center justify-center rounded-lg border text-4xl\">\n\t\t\t\t\t\t\t\t\t<Icon name=\"plus\" />\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t{existingImage ? (\n\t\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\t\t{...getInputProps(fields.id, { type: 'hidden' })}\n\t\t\t\t\t\t\t\t\tkey={fields.id.key}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t) : null}\n\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\taria-label=\"Image\"\n\t\t\t\t\t\t\t\tclassName=\"absolute top-0 left-0 z-0 size-32 cursor-pointer opacity-0\"\n\t\t\t\t\t\t\t\tonChange={(event) => {\n\t\t\t\t\t\t\t\t\tconst file = event.target.files?.[0]\n\n\t\t\t\t\t\t\t\t\tif (file) {\n\t\t\t\t\t\t\t\t\t\tconst reader = new FileReader()\n\t\t\t\t\t\t\t\t\t\treader.onloadend = () => {\n\t\t\t\t\t\t\t\t\t\t\tsetPreviewImage(reader.result as string)\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\treader.readAsDataURL(file)\n\t\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\tsetPreviewImage(null)\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\taccept=\"image/*\"\n\t\t\t\t\t\t\t\t{...getInputProps(fields.file, { type: 'file' })}\n\t\t\t\t\t\t\t\tkey={fields.file.key}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</label>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className=\"min-h-[32px] px-4 pt-1 pb-3\">\n\t\t\t\t\t\t<ErrorList id={fields.file.errorId} errors={fields.file.errors} />\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t<div className=\"flex-1\">\n\t\t\t\t\t<Label htmlFor={fields.altText.id}>Alt Text</Label>\n\t\t\t\t\t<Textarea\n\t\t\t\t\t\tonChange={(e) => setAltText(e.currentTarget.value)}\n\t\t\t\t\t\t{...getTextareaProps(fields.altText)}\n\t\t\t\t\t\tkey={fields.altText.key}\n\t\t\t\t\t/>\n\t\t\t\t\t<div className=\"min-h-[32px] px-4 pt-1 pb-3\">\n\t\t\t\t\t\t<ErrorList\n\t\t\t\t\t\t\tid={fields.altText.errorId}\n\t\t\t\t\t\t\terrors={fields.altText.errors}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t<div className=\"min-h-[32px] px-4 pt-1 pb-3\">\n\t\t\t\t<ErrorList id={meta.errorId} errors={meta.errors} />\n\t\t\t</div>\n\t\t</fieldset>\n\t)\n}\n\nexport function ErrorBoundary() {\n\treturn (\n\t\t<GeneralErrorBoundary\n\t\t\tstatusHandlers={{\n\t\t\t\t404: ({ params }) => (\n\t\t\t\t\t<p>No note with the id \"{params.noteId}\" exists</p>\n\t\t\t\t),\n\t\t\t}}\n\t\t/>\n\t)\n}\n","import { parseWithZod } from '@conform-to/zod'\nimport { parseFormData } from '@mjackson/form-data-parser'\nimport { createId as cuid } from '@paralleldrive/cuid2'\nimport { data, redirect, type ActionFunctionArgs } from 'react-router'\nimport { z } from 'zod'\nimport { requireUserId } from '#app/utils/auth.server.ts'\nimport { prisma } from '#app/utils/db.server.ts'\nimport { uploadNoteImage } from '#app/utils/storage.server.ts'\nimport {\n\tMAX_UPLOAD_SIZE,\n\tNoteEditorSchema,\n\ttype ImageFieldset,\n} from './__note-editor'\n\nfunction imageHasFile(\n\timage: ImageFieldset,\n): image is ImageFieldset & { file: NonNullable<ImageFieldset['file']> } {\n\treturn Boolean(image.file?.size && image.file?.size > 0)\n}\n\nfunction imageHasId(\n\timage: ImageFieldset,\n): image is ImageFieldset & { id: string } {\n\treturn Boolean(image.id)\n}\n\nexport async function action({ request }: ActionFunctionArgs) {\n\tconst userId = await requireUserId(request)\n\n\tconst formData = await parseFormData(request, {\n\t\tmaxFileSize: MAX_UPLOAD_SIZE,\n\t})\n\n\tconst submission = await parseWithZod(formData, {\n\t\tschema: NoteEditorSchema.superRefine(async (data, ctx) => {\n\t\t\tif (!data.id) return\n\n\t\t\tconst note = await prisma.note.findUnique({\n\t\t\t\tselect: { id: true },\n\t\t\t\twhere: { id: data.id, ownerId: userId },\n\t\t\t})\n\t\t\tif (!note) {\n\t\t\t\tctx.addIssue({\n\t\t\t\t\tcode: z.ZodIssueCode.custom,\n\t\t\t\t\tmessage: 'Note not found',\n\t\t\t\t})\n\t\t\t}\n\t\t}).transform(async ({ images = [], ...data }) => {\n\t\t\tconst noteId = data.id ?? cuid()\n\t\t\treturn {\n\t\t\t\t...data,\n\t\t\t\tid: noteId,\n\t\t\t\timageUpdates: await Promise.all(\n\t\t\t\t\timages.filter(imageHasId).map(async (i) => {\n\t\t\t\t\t\tif (imageHasFile(i)) {\n\t\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\t\tid: i.id,\n\t\t\t\t\t\t\t\taltText: i.altText,\n\t\t\t\t\t\t\t\tobjectKey: await uploadNoteImage(userId, noteId, i.file),\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\t\tid: i.id,\n\t\t\t\t\t\t\t\taltText: i.altText,\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}),\n\t\t\t\t),\n\t\t\t\tnewImages: await Promise.all(\n\t\t\t\t\timages\n\t\t\t\t\t\t.filter(imageHasFile)\n\t\t\t\t\t\t.filter((i) => !i.id)\n\t\t\t\t\t\t.map(async (image) => {\n\t\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\t\taltText: image.altText,\n\t\t\t\t\t\t\t\tobjectKey: await uploadNoteImage(userId, noteId, image.file),\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}),\n\t\t\t\t),\n\t\t\t}\n\t\t}),\n\t\tasync: true,\n\t})\n\n\tif (submission.status !== 'success') {\n\t\treturn data(\n\t\t\t{ result: submission.reply() },\n\t\t\t{ status: submission.status === 'error' ? 400 : 200 },\n\t\t)\n\t}\n\n\tconst {\n\t\tid: noteId,\n\t\ttitle,\n\t\tcontent,\n\t\timageUpdates = [],\n\t\tnewImages = [],\n\t} = submission.value\n\n\tconst updatedNote = await prisma.note.upsert({\n\t\tselect: { id: true, owner: { select: { username: true } } },\n\t\twhere: { id: noteId },\n\t\tcreate: {\n\t\t\tid: noteId,\n\t\t\townerId: userId,\n\t\t\ttitle,\n\t\t\tcontent,\n\t\t\timages: { create: newImages },\n\t\t},\n\t\tupdate: {\n\t\t\ttitle,\n\t\t\tcontent,\n\t\t\timages: {\n\t\t\t\tdeleteMany: { id: { notIn: imageUpdates.map((i) => i.id) } },\n\t\t\t\tupdateMany: imageUpdates.map((updates) => ({\n\t\t\t\t\twhere: { id: updates.id },\n\t\t\t\t\tdata: {\n\t\t\t\t\t\t...updates,\n\t\t\t\t\t\t// If the image is new, we need to generate a new ID to bust the cache.\n\t\t\t\t\t\tid: updates.objectKey ? cuid() : updates.id,\n\t\t\t\t\t},\n\t\t\t\t})),\n\t\t\t\tcreate: newImages,\n\t\t\t},\n\t\t},\n\t})\n\n\treturn redirect(\n\t\t`/users/${updatedNote.owner.username}/notes/${updatedNote.id}`,\n\t)\n}\n","import { invariantResponse } from '@epic-web/invariant'\nimport { GeneralErrorBoundary } from '#app/components/error-boundary.tsx'\nimport { requireUserId } from '#app/utils/auth.server.ts'\nimport { prisma } from '#app/utils/db.server.ts'\nimport { type Route } from './+types/notes.$noteId_.edit.ts'\nimport { NoteEditor } from './__note-editor.tsx'\n\nexport { action } from './__note-editor.server.tsx'\n\nexport async function loader({ params, request }: Route.LoaderArgs) {\n\tconst userId = await requireUserId(request)\n\tconst note = await prisma.note.findFirst({\n\t\tselect: {\n\t\t\tid: true,\n\t\t\ttitle: true,\n\t\t\tcontent: true,\n\t\t\timages: {\n\t\t\t\tselect: {\n\t\t\t\t\tid: true,\n\t\t\t\t\taltText: true,\n\t\t\t\t\tobjectKey: true,\n\t\t\t\t},\n\t\t\t},\n\t\t},\n\t\twhere: {\n\t\t\tid: params.noteId,\n\t\t\townerId: userId,\n\t\t},\n\t})\n\tinvariantResponse(note, 'Not found', { status: 404 })\n\treturn { note }\n}\n\nexport default function NoteEdit({\n\tloaderData,\n\tactionData,\n}: Route.ComponentProps) {\n\treturn <NoteEditor note={loaderData.note} actionData={actionData} />\n}\n\nexport function ErrorBoundary() {\n\treturn (\n\t\t<GeneralErrorBoundary\n\t\t\tstatusHandlers={{\n\t\t\t\t404: ({ params }) => (\n\t\t\t\t\t<p>No note with the id \"{params.noteId}\" exists</p>\n\t\t\t\t),\n\t\t\t}}\n\t\t/>\n\t)\n}\n","import { type Route } from './+types/notes.index.ts'\nimport { type Route as NotesRoute } from './+types/notes.ts'\n\nexport default function NotesIndexRoute() {\n\treturn (\n\t\t<div className=\"container pt-12\">\n\t\t\t<p className=\"text-body-md\">Select a note</p>\n\t\t</div>\n\t)\n}\n\nexport const meta: Route.MetaFunction = ({ params, matches }) => {\n\tconst notesMatch = matches.find(\n\t\t(m) => m?.id === 'routes/users+/$username_+/notes',\n\t) as { data: NotesRoute.ComponentProps['loaderData'] }\n\n\tconst displayName = notesMatch?.data?.owner.name ?? params.username\n\tconst noteCount = notesMatch?.data?.owner.notes.length ?? 0\n\tconst notesText = noteCount === 1 ? 'note' : 'notes'\n\treturn [\n\t\t{ title: `${displayName}'s Notes | Epic Notes` },\n\t\t{\n\t\t\tname: 'description',\n\t\t\tcontent: `Checkout ${displayName}'s ${noteCount} ${notesText} on Epic Notes`,\n\t\t},\n\t]\n}\n","import { requireUserId } from '#app/utils/auth.server.ts'\nimport { type Route } from './+types/notes.new.ts'\nimport { NoteEditor } from './__note-editor.tsx'\n\nexport { action } from './__note-editor.server.tsx'\n\nexport async function loader({ request }: Route.LoaderArgs) {\n\tawait requireUserId(request)\n\treturn {}\n}\n\nexport default NoteEditor\n","import { searchUsers } from '@prisma/client/sql'\nimport { Img } from 'openimg/react'\nimport { redirect, Link } from 'react-router'\nimport { GeneralErrorBoundary } from '#app/components/error-boundary.tsx'\nimport { ErrorList } from '#app/components/forms.tsx'\nimport { SearchBar } from '#app/components/search-bar.tsx'\nimport { prisma } from '#app/utils/db.server.ts'\nimport { cn, getUserImgSrc, useDelayedIsPending } from '#app/utils/misc.tsx'\nimport { type Route } from './+types/index.ts'\n\nexport async function loader({ request }: Route.LoaderArgs) {\n\tconst searchTerm = new URL(request.url).searchParams.get('search')\n\tif (searchTerm === '') {\n\t\treturn redirect('/users')\n\t}\n\n\tconst like = `%${searchTerm ?? ''}%`\n\tconst users = await prisma.$queryRawTyped(searchUsers(like))\n\treturn { status: 'idle', users } as const\n}\n\nexport default function UsersRoute({ loaderData }: Route.ComponentProps) {\n\tconst isPending = useDelayedIsPending({\n\t\tformMethod: 'GET',\n\t\tformAction: '/users',\n\t})\n\n\treturn (\n\t\t<div className=\"container mt-36 mb-48 flex flex-col items-center justify-center gap-6\">\n\t\t\t<h1 className=\"text-h1\">Epic Notes Users</h1>\n\t\t\t<div className=\"w-full max-w-[700px]\">\n\t\t\t\t<SearchBar status={loaderData.status} autoFocus autoSubmit />\n\t\t\t</div>\n\t\t\t<main>\n\t\t\t\t{loaderData.status === 'idle' ? (\n\t\t\t\t\tloaderData.users.length ? (\n\t\t\t\t\t\t<ul\n\t\t\t\t\t\t\tclassName={cn(\n\t\t\t\t\t\t\t\t'flex w-full flex-wrap items-center justify-center gap-4 delay-200',\n\t\t\t\t\t\t\t\t{ 'opacity-50': isPending },\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t{loaderData.users.map((user) => (\n\t\t\t\t\t\t\t\t<li key={user.id}>\n\t\t\t\t\t\t\t\t\t<Link\n\t\t\t\t\t\t\t\t\t\tto={user.username}\n\t\t\t\t\t\t\t\t\t\tclassName=\"bg-muted flex h-36 w-44 flex-col items-center justify-center rounded-lg px-5 py-3\"\n\t\t\t\t\t\t\t\t\t\taria-label={`${user.name || user.username} profile`}\n\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t<Img\n\t\t\t\t\t\t\t\t\t\t\talt={user.name ?? user.username}\n\t\t\t\t\t\t\t\t\t\t\tsrc={getUserImgSrc(user.imageObjectKey)}\n\t\t\t\t\t\t\t\t\t\t\tclassName=\"size-16 rounded-full\"\n\t\t\t\t\t\t\t\t\t\t\twidth={256}\n\t\t\t\t\t\t\t\t\t\t\theight={256}\n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t{user.name ? (\n\t\t\t\t\t\t\t\t\t\t\t<span className=\"text-body-md w-full overflow-hidden text-center text-ellipsis whitespace-nowrap\">\n\t\t\t\t\t\t\t\t\t\t\t\t{user.name}\n\t\t\t\t\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t\t\t\t) : null}\n\t\t\t\t\t\t\t\t\t\t<span className=\"text-body-sm text-muted-foreground w-full overflow-hidden text-center text-ellipsis\">\n\t\t\t\t\t\t\t\t\t\t\t{user.username}\n\t\t\t\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t\t\t</Link>\n\t\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t</ul>\n\t\t\t\t\t) : (\n\t\t\t\t\t\t<p>No users found</p>\n\t\t\t\t\t)\n\t\t\t\t) : loaderData.status === 'error' ? (\n\t\t\t\t\t<ErrorList errors={['There was an error parsing the results']} />\n\t\t\t\t) : null}\n\t\t\t</main>\n\t\t</div>\n\t)\n}\n\nexport function ErrorBoundary() {\n\treturn <GeneralErrorBoundary />\n}\n","import { type Strategy } from 'remix-auth/strategy'\nimport { type Timings } from '../timing.server.ts'\n\n// Define a user type for cleaner typing\nexport type ProviderUser = {\n\tid: string | number\n\temail: string\n\tusername?: string\n\tname?: string\n\timageUrl?: string\n}\n\nexport interface AuthProvider {\n\tgetAuthStrategy(): Strategy<ProviderUser, any> | null\n\thandleMockAction(request: Request): Promise<void>\n\tresolveConnectionData(\n\t\tproviderId: string,\n\t\toptions?: { timings?: Timings },\n\t): Promise<{\n\t\tdisplayName: string\n\t\tlink?: string | null\n\t}>\n}\n\nexport const normalizeEmail = (s: string) => s.toLowerCase()\n\nexport const normalizeUsername = (s: string) =>\n\ts.replace(/[^a-zA-Z0-9_]/g, '_').toLowerCase()\n","import * as cookie from 'cookie'\n\nconst key = 'redirectTo'\nexport const destroyRedirectToHeader = cookie.serialize(key, '', { maxAge: -1 })\n\nexport function getRedirectCookieHeader(redirectTo?: string) {\n\treturn redirectTo && redirectTo !== '/'\n\t\t? cookie.serialize(key, redirectTo, { maxAge: 60 * 10 })\n\t\t: null\n}\n\nexport function getRedirectCookieValue(request: Request) {\n\tconst rawCookie = request.headers.get('cookie')\n\tconst parsedCookies = rawCookie ? cookie.parse(rawCookie) : {}\n\tconst redirectTo = parsedCookies[key]\n\treturn redirectTo || null\n}\n","import {\n\tgetFormProps,\n\tgetInputProps,\n\tuseForm,\n\ttype SubmissionResult,\n} from '@conform-to/react'\nimport { getZodConstraint, parseWithZod } from '@conform-to/zod'\nimport {\n\tredirect,\n\tdata,\n\ttype Params,\n\tForm,\n\tuseSearchParams,\n} from 'react-router'\nimport { safeRedirect } from 'remix-utils/safe-redirect'\nimport { z } from 'zod'\nimport { CheckboxField, ErrorList, Field } from '#app/components/forms.tsx'\nimport { Spacer } from '#app/components/spacer.tsx'\nimport { StatusButton } from '#app/components/ui/status-button.tsx'\nimport {\n\tsessionKey,\n\tsignupWithConnection,\n\trequireAnonymous,\n} from '#app/utils/auth.server.ts'\nimport { ProviderNameSchema } from '#app/utils/connections.tsx'\nimport { prisma } from '#app/utils/db.server.ts'\nimport { useIsPending } from '#app/utils/misc.tsx'\nimport { authSessionStorage } from '#app/utils/session.server.ts'\nimport { redirectWithToast } from '#app/utils/toast.server.ts'\nimport { NameSchema, UsernameSchema } from '#app/utils/user-validation.ts'\nimport { verifySessionStorage } from '#app/utils/verification.server.ts'\nimport { type Route } from './+types/onboarding_.$provider.ts'\nimport { onboardingEmailSessionKey } from './onboarding'\n\nexport const providerIdKey = 'providerId'\nexport const prefilledProfileKey = 'prefilledProfile'\n\nconst SignupFormSchema = z.object({\n\timageUrl: z.string().optional(),\n\tusername: UsernameSchema,\n\tname: NameSchema,\n\tagreeToTermsOfServiceAndPrivacyPolicy: z.boolean({\n\t\trequired_error: 'You must agree to the terms of service and privacy policy',\n\t}),\n\tremember: z.boolean().optional(),\n\tredirectTo: z.string().optional(),\n})\n\nasync function requireData({\n\trequest,\n\tparams,\n}: {\n\trequest: Request\n\tparams: Params\n}) {\n\tawait requireAnonymous(request)\n\tconst verifySession = await verifySessionStorage.getSession(\n\t\trequest.headers.get('cookie'),\n\t)\n\tconst email = verifySession.get(onboardingEmailSessionKey)\n\tconst providerId = verifySession.get(providerIdKey)\n\tconst result = z\n\t\t.object({\n\t\t\temail: z.string(),\n\t\t\tproviderName: ProviderNameSchema,\n\t\t\tproviderId: z.string().or(z.number()),\n\t\t})\n\t\t.safeParse({ email, providerName: params.provider, providerId })\n\tif (result.success) {\n\t\treturn result.data\n\t} else {\n\t\tconsole.error(result.error)\n\t\tthrow redirect('/signup')\n\t}\n}\n\nexport async function loader({ request, params }: Route.LoaderArgs) {\n\tconst { email } = await requireData({ request, params })\n\n\tconst verifySession = await verifySessionStorage.getSession(\n\t\trequest.headers.get('cookie'),\n\t)\n\tconst prefilledProfile = verifySession.get(prefilledProfileKey)\n\n\treturn {\n\t\temail,\n\t\tstatus: 'idle',\n\t\tsubmission: {\n\t\t\tinitialValue: prefilledProfile ?? {},\n\t\t} as SubmissionResult,\n\t}\n}\n\nexport async function action({ request, params }: Route.ActionArgs) {\n\tconst { email, providerId, providerName } = await requireData({\n\t\trequest,\n\t\tparams,\n\t})\n\tconst formData = await request.formData()\n\tconst verifySession = await verifySessionStorage.getSession(\n\t\trequest.headers.get('cookie'),\n\t)\n\n\tconst submission = await parseWithZod(formData, {\n\t\tschema: SignupFormSchema.superRefine(async (data, ctx) => {\n\t\t\tconst existingUser = await prisma.user.findUnique({\n\t\t\t\twhere: { username: data.username },\n\t\t\t\tselect: { id: true },\n\t\t\t})\n\t\t\tif (existingUser) {\n\t\t\t\tctx.addIssue({\n\t\t\t\t\tpath: ['username'],\n\t\t\t\t\tcode: z.ZodIssueCode.custom,\n\t\t\t\t\tmessage: 'A user already exists with this username',\n\t\t\t\t})\n\t\t\t\treturn\n\t\t\t}\n\t\t}).transform(async (data) => {\n\t\t\tconst session = await signupWithConnection({\n\t\t\t\t...data,\n\t\t\t\temail,\n\t\t\t\tproviderId: String(providerId),\n\t\t\t\tproviderName,\n\t\t\t})\n\t\t\treturn { ...data, session }\n\t\t}),\n\t\tasync: true,\n\t})\n\n\tif (submission.status !== 'success') {\n\t\treturn data(\n\t\t\t{ result: submission.reply() },\n\t\t\t{ status: submission.status === 'error' ? 400 : 200 },\n\t\t)\n\t}\n\n\tconst { session, remember, redirectTo } = submission.value\n\n\tconst authSession = await authSessionStorage.getSession(\n\t\trequest.headers.get('cookie'),\n\t)\n\tauthSession.set(sessionKey, session.id)\n\tconst headers = new Headers()\n\theaders.append(\n\t\t'set-cookie',\n\t\tawait authSessionStorage.commitSession(authSession, {\n\t\t\texpires: remember ? session.expirationDate : undefined,\n\t\t}),\n\t)\n\theaders.append(\n\t\t'set-cookie',\n\t\tawait verifySessionStorage.destroySession(verifySession),\n\t)\n\n\treturn redirectWithToast(\n\t\tsafeRedirect(redirectTo),\n\t\t{ title: 'Welcome', description: 'Thanks for signing up!' },\n\t\t{ headers },\n\t)\n}\n\nexport const meta: Route.MetaFunction = () => {\n\treturn [{ title: 'Setup Epic Notes Account' }]\n}\n\nexport default function OnboardingProviderRoute({\n\tloaderData,\n\tactionData,\n}: Route.ComponentProps) {\n\tconst isPending = useIsPending()\n\tconst [searchParams] = useSearchParams()\n\tconst redirectTo = searchParams.get('redirectTo')\n\n\tconst [form, fields] = useForm({\n\t\tid: 'onboarding-provider-form',\n\t\tconstraint: getZodConstraint(SignupFormSchema),\n\t\tlastResult: actionData?.result ?? loaderData.submission,\n\t\tonValidate({ formData }) {\n\t\t\treturn parseWithZod(formData, { schema: SignupFormSchema })\n\t\t},\n\t\tshouldRevalidate: 'onBlur',\n\t})\n\n\treturn (\n\t\t<div className=\"container flex min-h-full flex-col justify-center pt-20 pb-32\">\n\t\t\t<div className=\"mx-auto w-full max-w-lg\">\n\t\t\t\t<div className=\"flex flex-col gap-3 text-center\">\n\t\t\t\t\t<h1 className=\"text-h1\">Welcome aboard {loaderData.email}!</h1>\n\t\t\t\t\t<p className=\"text-body-md text-muted-foreground\">\n\t\t\t\t\t\tPlease enter your details.\n\t\t\t\t\t</p>\n\t\t\t\t</div>\n\t\t\t\t<Spacer size=\"xs\" />\n\t\t\t\t<Form\n\t\t\t\t\tmethod=\"POST\"\n\t\t\t\t\tclassName=\"mx-auto max-w-sm min-w-full sm:min-w-[368px]\"\n\t\t\t\t\t{...getFormProps(form)}\n\t\t\t\t>\n\t\t\t\t\t{fields.imageUrl.initialValue ? (\n\t\t\t\t\t\t<div className=\"mb-4 flex flex-col items-center justify-center gap-4\">\n\t\t\t\t\t\t\t<img\n\t\t\t\t\t\t\t\tsrc={fields.imageUrl.initialValue}\n\t\t\t\t\t\t\t\talt=\"Profile\"\n\t\t\t\t\t\t\t\tclassName=\"size-24 rounded-full\"\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t<p className=\"text-body-sm text-muted-foreground\">\n\t\t\t\t\t\t\t\tYou can change your photo later\n\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t\t<input {...getInputProps(fields.imageUrl, { type: 'hidden' })} />\n\t\t\t\t\t\t</div>\n\t\t\t\t\t) : null}\n\t\t\t\t\t<Field\n\t\t\t\t\t\tlabelProps={{ htmlFor: fields.username.id, children: 'Username' }}\n\t\t\t\t\t\tinputProps={{\n\t\t\t\t\t\t\t...getInputProps(fields.username, { type: 'text' }),\n\t\t\t\t\t\t\tautoComplete: 'username',\n\t\t\t\t\t\t\tclassName: 'lowercase',\n\t\t\t\t\t\t}}\n\t\t\t\t\t\terrors={fields.username.errors}\n\t\t\t\t\t/>\n\t\t\t\t\t<Field\n\t\t\t\t\t\tlabelProps={{ htmlFor: fields.name.id, children: 'Name' }}\n\t\t\t\t\t\tinputProps={{\n\t\t\t\t\t\t\t...getInputProps(fields.name, { type: 'text' }),\n\t\t\t\t\t\t\tautoComplete: 'name',\n\t\t\t\t\t\t}}\n\t\t\t\t\t\terrors={fields.name.errors}\n\t\t\t\t\t/>\n\n\t\t\t\t\t<CheckboxField\n\t\t\t\t\t\tlabelProps={{\n\t\t\t\t\t\t\thtmlFor: fields.agreeToTermsOfServiceAndPrivacyPolicy.id,\n\t\t\t\t\t\t\tchildren:\n\t\t\t\t\t\t\t\t'Do you agree to our Terms of Service and Privacy Policy?',\n\t\t\t\t\t\t}}\n\t\t\t\t\t\tbuttonProps={getInputProps(\n\t\t\t\t\t\t\tfields.agreeToTermsOfServiceAndPrivacyPolicy,\n\t\t\t\t\t\t\t{ type: 'checkbox' },\n\t\t\t\t\t\t)}\n\t\t\t\t\t\terrors={fields.agreeToTermsOfServiceAndPrivacyPolicy.errors}\n\t\t\t\t\t/>\n\t\t\t\t\t<CheckboxField\n\t\t\t\t\t\tlabelProps={{\n\t\t\t\t\t\t\thtmlFor: fields.remember.id,\n\t\t\t\t\t\t\tchildren: 'Remember me',\n\t\t\t\t\t\t}}\n\t\t\t\t\t\tbuttonProps={getInputProps(fields.remember, { type: 'checkbox' })}\n\t\t\t\t\t\terrors={fields.remember.errors}\n\t\t\t\t\t/>\n\n\t\t\t\t\t{redirectTo ? (\n\t\t\t\t\t\t<input type=\"hidden\" name=\"redirectTo\" value={redirectTo} />\n\t\t\t\t\t) : null}\n\n\t\t\t\t\t<ErrorList errors={form.errors} id={form.errorId} />\n\n\t\t\t\t\t<div className=\"flex items-center justify-between gap-6\">\n\t\t\t\t\t\t<StatusButton\n\t\t\t\t\t\t\tclassName=\"w-full\"\n\t\t\t\t\t\t\tstatus={isPending ? 'pending' : (form.status ?? 'idle')}\n\t\t\t\t\t\t\ttype=\"submit\"\n\t\t\t\t\t\t\tdisabled={isPending}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\tCreate an account\n\t\t\t\t\t\t</StatusButton>\n\t\t\t\t\t</div>\n\t\t\t\t</Form>\n\t\t\t</div>\n\t\t</div>\n\t)\n}\n","import { redirect } from 'react-router'\nimport {\n\tauthenticator,\n\tgetSessionExpirationDate,\n\tgetUserId,\n} from '#app/utils/auth.server.ts'\nimport { ProviderNameSchema, providerLabels } from '#app/utils/connections.tsx'\nimport { prisma } from '#app/utils/db.server.ts'\nimport { ensurePrimary } from '#app/utils/litefs.server.ts'\nimport { combineHeaders } from '#app/utils/misc.tsx'\nimport {\n\tnormalizeEmail,\n\tnormalizeUsername,\n} from '#app/utils/providers/provider.ts'\nimport {\n\tdestroyRedirectToHeader,\n\tgetRedirectCookieValue,\n} from '#app/utils/redirect-cookie.server.ts'\nimport {\n\tcreateToastHeaders,\n\tredirectWithToast,\n} from '#app/utils/toast.server.ts'\nimport { verifySessionStorage } from '#app/utils/verification.server.ts'\nimport { type Route } from './+types/auth.$provider.callback.ts'\nimport { handleNewSession } from './login.server.ts'\nimport { onboardingEmailSessionKey } from './onboarding.tsx'\nimport { prefilledProfileKey, providerIdKey } from './onboarding_.$provider.tsx'\n\nconst destroyRedirectTo = { 'set-cookie': destroyRedirectToHeader }\n\nexport async function loader({ request, params }: Route.LoaderArgs) {\n\t// this loader performs mutations, so we need to make sure we're on the\n\t// primary instance to avoid writing to a read-only replica\n\tawait ensurePrimary()\n\n\tconst providerName = ProviderNameSchema.parse(params.provider)\n\tconst redirectTo = getRedirectCookieValue(request)\n\tconst label = providerLabels[providerName]\n\n\tconst authResult = await authenticator\n\t\t.authenticate(providerName, request)\n\t\t.then(\n\t\t\t(data) =>\n\t\t\t\t({\n\t\t\t\t\tsuccess: true,\n\t\t\t\t\tdata,\n\t\t\t\t}) as const,\n\t\t\t(error) =>\n\t\t\t\t({\n\t\t\t\t\tsuccess: false,\n\t\t\t\t\terror,\n\t\t\t\t}) as const,\n\t\t)\n\n\tif (!authResult.success) {\n\t\tconsole.error(authResult.error)\n\t\tthrow await redirectWithToast(\n\t\t\t'/login',\n\t\t\t{\n\t\t\t\ttitle: 'Auth Failed',\n\t\t\t\tdescription: `There was an error authenticating with ${label}.`,\n\t\t\t\ttype: 'error',\n\t\t\t},\n\t\t\t{ headers: destroyRedirectTo },\n\t\t)\n\t}\n\n\tconst { data: profile } = authResult\n\n\tconst existingConnection = await prisma.connection.findUnique({\n\t\tselect: { userId: true },\n\t\twhere: {\n\t\t\tproviderName_providerId: {\n\t\t\t\tproviderName,\n\t\t\t\tproviderId: String(profile.id),\n\t\t\t},\n\t\t},\n\t})\n\n\tconst userId = await getUserId(request)\n\n\tif (existingConnection && userId) {\n\t\tif (existingConnection.userId === userId) {\n\t\t\treturn redirectWithToast(\n\t\t\t\t'/settings/profile/connections',\n\t\t\t\t{\n\t\t\t\t\ttitle: 'Already Connected',\n\t\t\t\t\tdescription: `Your \"${profile.username}\" ${label} account is already connected.`,\n\t\t\t\t},\n\t\t\t\t{ headers: destroyRedirectTo },\n\t\t\t)\n\t\t} else {\n\t\t\treturn redirectWithToast(\n\t\t\t\t'/settings/profile/connections',\n\t\t\t\t{\n\t\t\t\t\ttitle: 'Already Connected',\n\t\t\t\t\tdescription: `The \"${profile.username}\" ${label} account is already connected to another account.`,\n\t\t\t\t},\n\t\t\t\t{ headers: destroyRedirectTo },\n\t\t\t)\n\t\t}\n\t}\n\n\t// If we're already logged in, then link the account\n\tif (userId) {\n\t\tawait prisma.connection.create({\n\t\t\tdata: {\n\t\t\t\tproviderName,\n\t\t\t\tproviderId: String(profile.id),\n\t\t\t\tuserId,\n\t\t\t},\n\t\t})\n\t\treturn redirectWithToast(\n\t\t\t'/settings/profile/connections',\n\t\t\t{\n\t\t\t\ttitle: 'Connected',\n\t\t\t\ttype: 'success',\n\t\t\t\tdescription: `Your \"${profile.username}\" ${label} account has been connected.`,\n\t\t\t},\n\t\t\t{ headers: destroyRedirectTo },\n\t\t)\n\t}\n\n\t// Connection exists already? Make a new session\n\tif (existingConnection) {\n\t\treturn makeSession({ request, userId: existingConnection.userId })\n\t}\n\n\t// if the email matches a user in the db, then link the account and\n\t// make a new session\n\tconst user = await prisma.user.findUnique({\n\t\tselect: { id: true },\n\t\twhere: { email: profile.email.toLowerCase() },\n\t})\n\tif (user) {\n\t\tawait prisma.connection.create({\n\t\t\tdata: {\n\t\t\t\tproviderName,\n\t\t\t\tproviderId: String(profile.id),\n\t\t\t\tuserId: user.id,\n\t\t\t},\n\t\t})\n\t\treturn makeSession(\n\t\t\t{ request, userId: user.id },\n\t\t\t{\n\t\t\t\theaders: await createToastHeaders({\n\t\t\t\t\ttitle: 'Connected',\n\t\t\t\t\tdescription: `Your \"${profile.username}\" ${label} account has been connected.`,\n\t\t\t\t}),\n\t\t\t},\n\t\t)\n\t}\n\n\t// this is a new user, so let's get them onboarded\n\tconst verifySession = await verifySessionStorage.getSession()\n\tverifySession.set(onboardingEmailSessionKey, profile.email)\n\tverifySession.set(prefilledProfileKey, {\n\t\t...profile,\n\t\temail: normalizeEmail(profile.email),\n\t\tusername:\n\t\t\ttypeof profile.username === 'string'\n\t\t\t\t? normalizeUsername(profile.username)\n\t\t\t\t: undefined,\n\t})\n\tverifySession.set(providerIdKey, profile.id)\n\tconst onboardingRedirect = [\n\t\t`/onboarding/${providerName}`,\n\t\tredirectTo ? new URLSearchParams({ redirectTo }) : null,\n\t]\n\t\t.filter(Boolean)\n\t\t.join('?')\n\treturn redirect(onboardingRedirect, {\n\t\theaders: combineHeaders(\n\t\t\t{ 'set-cookie': await verifySessionStorage.commitSession(verifySession) },\n\t\t\tdestroyRedirectTo,\n\t\t),\n\t})\n}\n\nasync function makeSession(\n\t{\n\t\trequest,\n\t\tuserId,\n\t\tredirectTo,\n\t}: { request: Request; userId: string; redirectTo?: string | null },\n\tresponseInit?: ResponseInit,\n) {\n\tredirectTo ??= '/'\n\tconst session = await prisma.session.create({\n\t\tselect: { id: true, expirationDate: true, userId: true },\n\t\tdata: {\n\t\t\texpirationDate: getSessionExpirationDate(),\n\t\t\tuserId,\n\t\t},\n\t})\n\treturn handleNewSession(\n\t\t{ request, session, redirectTo, remember: true },\n\t\t{ headers: combineHeaders(responseInit?.headers, destroyRedirectTo) },\n\t)\n}\n","import { redirect } from 'react-router'\nimport { authenticator } from '#app/utils/auth.server.ts'\nimport { handleMockAction } from '#app/utils/connections.server.ts'\nimport { ProviderNameSchema } from '#app/utils/connections.tsx'\nimport { getReferrerRoute } from '#app/utils/misc.tsx'\nimport { getRedirectCookieHeader } from '#app/utils/redirect-cookie.server.ts'\nimport { type Route } from './+types/auth_.$provider.ts'\n\nexport async function loader() {\n\treturn redirect('/login')\n}\n\nexport async function action({ request, params }: Route.ActionArgs) {\n\tconst providerName = ProviderNameSchema.parse(params.provider)\n\n\ttry {\n\t\tawait handleMockAction(providerName, request)\n\t\treturn await authenticator.authenticate(providerName, request)\n\t} catch (error: unknown) {\n\t\tif (error instanceof Response) {\n\t\t\tconst formData = await request.formData()\n\t\t\tconst rawRedirectTo = formData.get('redirectTo')\n\t\t\tconst redirectTo =\n\t\t\t\ttypeof rawRedirectTo === 'string'\n\t\t\t\t\t? rawRedirectTo\n\t\t\t\t\t: getReferrerRoute(request)\n\t\t\tconst redirectToCookie = getRedirectCookieHeader(redirectTo)\n\t\t\tif (redirectToCookie) {\n\t\t\t\terror.headers.append('set-cookie', redirectToCookie)\n\t\t\t}\n\t\t}\n\t\tthrow error\n\t}\n}\n","import { getFormProps, getInputProps, useForm } from '@conform-to/react'\nimport { getZodConstraint, parseWithZod } from '@conform-to/zod'\nimport { type SEOHandle } from '@nasa-gcn/remix-seo'\nimport * as E from '@react-email/components'\nimport { data, redirect, Link, useFetcher } from 'react-router'\nimport { HoneypotInputs } from 'remix-utils/honeypot/react'\nimport { z } from 'zod'\nimport { GeneralErrorBoundary } from '#app/components/error-boundary.tsx'\nimport { ErrorList, Field } from '#app/components/forms.tsx'\nimport { StatusButton } from '#app/components/ui/status-button.tsx'\nimport { prisma } from '#app/utils/db.server.ts'\nimport { sendEmail } from '#app/utils/email.server.ts'\nimport { checkHoneypot } from '#app/utils/honeypot.server.ts'\nimport { EmailSchema, UsernameSchema } from '#app/utils/user-validation.ts'\nimport { type Route } from './+types/forgot-password.ts'\nimport { prepareVerification } from './verify.server.ts'\n\nexport const handle: SEOHandle = {\n\tgetSitemapEntries: () => null,\n}\n\nconst ForgotPasswordSchema = z.object({\n\tusernameOrEmail: z.union([EmailSchema, UsernameSchema]),\n})\n\nexport async function action({ request }: Route.ActionArgs) {\n\tconst formData = await request.formData()\n\tawait checkHoneypot(formData)\n\tconst submission = await parseWithZod(formData, {\n\t\tschema: ForgotPasswordSchema.superRefine(async (data, ctx) => {\n\t\t\tconst user = await prisma.user.findFirst({\n\t\t\t\twhere: {\n\t\t\t\t\tOR: [\n\t\t\t\t\t\t{ email: data.usernameOrEmail },\n\t\t\t\t\t\t{ username: data.usernameOrEmail },\n\t\t\t\t\t],\n\t\t\t\t},\n\t\t\t\tselect: { id: true },\n\t\t\t})\n\t\t\tif (!user) {\n\t\t\t\tctx.addIssue({\n\t\t\t\t\tpath: ['usernameOrEmail'],\n\t\t\t\t\tcode: z.ZodIssueCode.custom,\n\t\t\t\t\tmessage: 'No user exists with this username or email',\n\t\t\t\t})\n\t\t\t\treturn\n\t\t\t}\n\t\t}),\n\t\tasync: true,\n\t})\n\tif (submission.status !== 'success') {\n\t\treturn data(\n\t\t\t{ result: submission.reply() },\n\t\t\t{ status: submission.status === 'error' ? 400 : 200 },\n\t\t)\n\t}\n\tconst { usernameOrEmail } = submission.value\n\n\tconst user = await prisma.user.findFirstOrThrow({\n\t\twhere: { OR: [{ email: usernameOrEmail }, { username: usernameOrEmail }] },\n\t\tselect: { email: true, username: true },\n\t})\n\n\tconst { verifyUrl, redirectTo, otp } = await prepareVerification({\n\t\tperiod: 10 * 60,\n\t\trequest,\n\t\ttype: 'reset-password',\n\t\ttarget: usernameOrEmail,\n\t})\n\n\tconst response = await sendEmail({\n\t\tto: user.email,\n\t\tsubject: `Epic Notes Password Reset`,\n\t\treact: (\n\t\t\t<ForgotPasswordEmail onboardingUrl={verifyUrl.toString()} otp={otp} />\n\t\t),\n\t})\n\n\tif (response.status === 'success') {\n\t\treturn redirect(redirectTo.toString())\n\t} else {\n\t\treturn data(\n\t\t\t{ result: submission.reply({ formErrors: [response.error.message] }) },\n\t\t\t{ status: 500 },\n\t\t)\n\t}\n}\n\nfunction ForgotPasswordEmail({\n\tonboardingUrl,\n\totp,\n}: {\n\tonboardingUrl: string\n\totp: string\n}) {\n\treturn (\n\t\t<E.Html lang=\"en\" dir=\"ltr\">\n\t\t\t<E.Container>\n\t\t\t\t<h1>\n\t\t\t\t\t<E.Text>Epic Notes Password Reset</E.Text>\n\t\t\t\t</h1>\n\t\t\t\t<p>\n\t\t\t\t\t<E.Text>\n\t\t\t\t\t\tHere's your verification code: <strong>{otp}</strong>\n\t\t\t\t\t</E.Text>\n\t\t\t\t</p>\n\t\t\t\t<p>\n\t\t\t\t\t<E.Text>Or click the link:</E.Text>\n\t\t\t\t</p>\n\t\t\t\t<E.Link href={onboardingUrl}>{onboardingUrl}</E.Link>\n\t\t\t</E.Container>\n\t\t</E.Html>\n\t)\n}\n\nexport const meta: Route.MetaFunction = () => {\n\treturn [{ title: 'Password Recovery for Epic Notes' }]\n}\n\nexport default function ForgotPasswordRoute() {\n\tconst forgotPassword = useFetcher<typeof action>()\n\n\tconst [form, fields] = useForm({\n\t\tid: 'forgot-password-form',\n\t\tconstraint: getZodConstraint(ForgotPasswordSchema),\n\t\tlastResult: forgotPassword.data?.result,\n\t\tonValidate({ formData }) {\n\t\t\treturn parseWithZod(formData, { schema: ForgotPasswordSchema })\n\t\t},\n\t\tshouldRevalidate: 'onBlur',\n\t})\n\n\treturn (\n\t\t<div className=\"container pt-20 pb-32\">\n\t\t\t<div className=\"flex flex-col justify-center\">\n\t\t\t\t<div className=\"text-center\">\n\t\t\t\t\t<h1 className=\"text-h1\">Forgot Password</h1>\n\t\t\t\t\t<p className=\"text-body-md text-muted-foreground mt-3\">\n\t\t\t\t\t\tNo worries, we'll send you reset instructions.\n\t\t\t\t\t</p>\n\t\t\t\t</div>\n\t\t\t\t<div className=\"mx-auto mt-16 max-w-sm min-w-full sm:min-w-[368px]\">\n\t\t\t\t\t<forgotPassword.Form method=\"POST\" {...getFormProps(form)}>\n\t\t\t\t\t\t<HoneypotInputs />\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<Field\n\t\t\t\t\t\t\t\tlabelProps={{\n\t\t\t\t\t\t\t\t\thtmlFor: fields.usernameOrEmail.id,\n\t\t\t\t\t\t\t\t\tchildren: 'Username or Email',\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\tinputProps={{\n\t\t\t\t\t\t\t\t\tautoFocus: true,\n\t\t\t\t\t\t\t\t\t...getInputProps(fields.usernameOrEmail, { type: 'text' }),\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\terrors={fields.usernameOrEmail.errors}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<ErrorList errors={form.errors} id={form.errorId} />\n\n\t\t\t\t\t\t<div className=\"mt-6\">\n\t\t\t\t\t\t\t<StatusButton\n\t\t\t\t\t\t\t\tclassName=\"w-full\"\n\t\t\t\t\t\t\t\tstatus={\n\t\t\t\t\t\t\t\t\tforgotPassword.state === 'submitting'\n\t\t\t\t\t\t\t\t\t\t? 'pending'\n\t\t\t\t\t\t\t\t\t\t: (form.status ?? 'idle')\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\ttype=\"submit\"\n\t\t\t\t\t\t\t\tdisabled={forgotPassword.state !== 'idle'}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\tRecover password\n\t\t\t\t\t\t\t</StatusButton>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</forgotPassword.Form>\n\t\t\t\t\t<Link\n\t\t\t\t\t\tto=\"/login\"\n\t\t\t\t\t\tclassName=\"text-body-sm mt-11 text-center font-bold\"\n\t\t\t\t\t>\n\t\t\t\t\t\tBack to Login\n\t\t\t\t\t</Link>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t)\n}\n\nexport function ErrorBoundary() {\n\treturn <GeneralErrorBoundary />\n}\n","import { getFormProps, getInputProps, useForm } from '@conform-to/react'\nimport { getZodConstraint, parseWithZod } from '@conform-to/zod'\nimport { type SEOHandle } from '@nasa-gcn/remix-seo'\nimport { startAuthentication } from '@simplewebauthn/browser'\nimport { useOptimistic, useState, useTransition } from 'react'\nimport { data, Form, Link, useNavigate, useSearchParams } from 'react-router'\nimport { HoneypotInputs } from 'remix-utils/honeypot/react'\nimport { z } from 'zod'\nimport { GeneralErrorBoundary } from '#app/components/error-boundary.tsx'\nimport { CheckboxField, ErrorList, Field } from '#app/components/forms.tsx'\nimport { Spacer } from '#app/components/spacer.tsx'\nimport { Icon } from '#app/components/ui/icon.tsx'\nimport { StatusButton } from '#app/components/ui/status-button.tsx'\nimport { login, requireAnonymous } from '#app/utils/auth.server.ts'\nimport {\n\tProviderConnectionForm,\n\tproviderNames,\n} from '#app/utils/connections.tsx'\nimport { checkHoneypot } from '#app/utils/honeypot.server.ts'\nimport { getErrorMessage, useIsPending } from '#app/utils/misc.tsx'\nimport { PasswordSchema, UsernameSchema } from '#app/utils/user-validation.ts'\nimport { type Route } from './+types/login.ts'\nimport { handleNewSession } from './login.server.ts'\n\nexport const handle: SEOHandle = {\n\tgetSitemapEntries: () => null,\n}\n\nconst LoginFormSchema = z.object({\n\tusername: UsernameSchema,\n\tpassword: PasswordSchema,\n\tredirectTo: z.string().optional(),\n\tremember: z.boolean().optional(),\n})\n\nconst AuthenticationOptionsSchema = z.object({\n\toptions: z.object({ challenge: z.string() }),\n}) satisfies z.ZodType<{ options: PublicKeyCredentialRequestOptionsJSON }>\n\nexport async function loader({ request }: Route.LoaderArgs) {\n\tawait requireAnonymous(request)\n\treturn {}\n}\n\nexport async function action({ request }: Route.ActionArgs) {\n\tawait requireAnonymous(request)\n\tconst formData = await request.formData()\n\tawait checkHoneypot(formData)\n\tconst submission = await parseWithZod(formData, {\n\t\tschema: (intent) =>\n\t\t\tLoginFormSchema.transform(async (data, ctx) => {\n\t\t\t\tif (intent !== null) return { ...data, session: null }\n\n\t\t\t\tconst session = await login(data)\n\t\t\t\tif (!session) {\n\t\t\t\t\tctx.addIssue({\n\t\t\t\t\t\tcode: z.ZodIssueCode.custom,\n\t\t\t\t\t\tmessage: 'Invalid username or password',\n\t\t\t\t\t})\n\t\t\t\t\treturn z.NEVER\n\t\t\t\t}\n\n\t\t\t\treturn { ...data, session }\n\t\t\t}),\n\t\tasync: true,\n\t})\n\n\tif (submission.status !== 'success' || !submission.value.session) {\n\t\treturn data(\n\t\t\t{ result: submission.reply({ hideFields: ['password'] }) },\n\t\t\t{ status: submission.status === 'error' ? 400 : 200 },\n\t\t)\n\t}\n\n\tconst { session, remember, redirectTo } = submission.value\n\n\treturn handleNewSession({\n\t\trequest,\n\t\tsession,\n\t\tremember: remember ?? false,\n\t\tredirectTo,\n\t})\n}\n\nexport default function LoginPage({ actionData }: Route.ComponentProps) {\n\tconst isPending = useIsPending()\n\tconst [searchParams] = useSearchParams()\n\tconst redirectTo = searchParams.get('redirectTo')\n\n\tconst [form, fields] = useForm({\n\t\tid: 'login-form',\n\t\tconstraint: getZodConstraint(LoginFormSchema),\n\t\tdefaultValue: { redirectTo },\n\t\tlastResult: actionData?.result,\n\t\tonValidate({ formData }) {\n\t\t\treturn parseWithZod(formData, { schema: LoginFormSchema })\n\t\t},\n\t\tshouldRevalidate: 'onBlur',\n\t})\n\n\treturn (\n\t\t<div className=\"flex min-h-full flex-col justify-center pt-20 pb-32\">\n\t\t\t<div className=\"mx-auto w-full max-w-md\">\n\t\t\t\t<div className=\"flex flex-col gap-3 text-center\">\n\t\t\t\t\t<h1 className=\"text-h1\">Welcome back!</h1>\n\t\t\t\t\t<p className=\"text-body-md text-muted-foreground\">\n\t\t\t\t\t\tPlease enter your details.\n\t\t\t\t\t</p>\n\t\t\t\t</div>\n\t\t\t\t<Spacer size=\"xs\" />\n\n\t\t\t\t<div>\n\t\t\t\t\t<div className=\"mx-auto w-full max-w-md px-8\">\n\t\t\t\t\t\t<Form method=\"POST\" {...getFormProps(form)}>\n\t\t\t\t\t\t\t<HoneypotInputs />\n\t\t\t\t\t\t\t<Field\n\t\t\t\t\t\t\t\tlabelProps={{ children: 'Username' }}\n\t\t\t\t\t\t\t\tinputProps={{\n\t\t\t\t\t\t\t\t\t...getInputProps(fields.username, { type: 'text' }),\n\t\t\t\t\t\t\t\t\tautoFocus: true,\n\t\t\t\t\t\t\t\t\tclassName: 'lowercase',\n\t\t\t\t\t\t\t\t\tautoComplete: 'username',\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\terrors={fields.username.errors}\n\t\t\t\t\t\t\t/>\n\n\t\t\t\t\t\t\t<Field\n\t\t\t\t\t\t\t\tlabelProps={{ children: 'Password' }}\n\t\t\t\t\t\t\t\tinputProps={{\n\t\t\t\t\t\t\t\t\t...getInputProps(fields.password, {\n\t\t\t\t\t\t\t\t\t\ttype: 'password',\n\t\t\t\t\t\t\t\t\t}),\n\t\t\t\t\t\t\t\t\tautoComplete: 'current-password',\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\terrors={fields.password.errors}\n\t\t\t\t\t\t\t/>\n\n\t\t\t\t\t\t\t<div className=\"flex justify-between\">\n\t\t\t\t\t\t\t\t<CheckboxField\n\t\t\t\t\t\t\t\t\tlabelProps={{\n\t\t\t\t\t\t\t\t\t\thtmlFor: fields.remember.id,\n\t\t\t\t\t\t\t\t\t\tchildren: 'Remember me',\n\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\tbuttonProps={getInputProps(fields.remember, {\n\t\t\t\t\t\t\t\t\t\ttype: 'checkbox',\n\t\t\t\t\t\t\t\t\t})}\n\t\t\t\t\t\t\t\t\terrors={fields.remember.errors}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t\t\t<Link\n\t\t\t\t\t\t\t\t\t\tto=\"/forgot-password\"\n\t\t\t\t\t\t\t\t\t\tclassName=\"text-body-xs font-semibold\"\n\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\tForgot password?\n\t\t\t\t\t\t\t\t\t</Link>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\t{...getInputProps(fields.redirectTo, { type: 'hidden' })}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t<ErrorList errors={form.errors} id={form.errorId} />\n\n\t\t\t\t\t\t\t<div className=\"flex items-center justify-between gap-6 pt-3\">\n\t\t\t\t\t\t\t\t<StatusButton\n\t\t\t\t\t\t\t\t\tclassName=\"w-full\"\n\t\t\t\t\t\t\t\t\tstatus={isPending ? 'pending' : (form.status ?? 'idle')}\n\t\t\t\t\t\t\t\t\ttype=\"submit\"\n\t\t\t\t\t\t\t\t\tdisabled={isPending}\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\tLog in\n\t\t\t\t\t\t\t\t</StatusButton>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</Form>\n\t\t\t\t\t\t<hr className=\"my-4\" />\n\t\t\t\t\t\t<div className=\"flex flex-col gap-5\">\n\t\t\t\t\t\t\t<PasskeyLogin\n\t\t\t\t\t\t\t\tredirectTo={redirectTo}\n\t\t\t\t\t\t\t\tremember={fields.remember.value === 'on'}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<hr className=\"my-4\" />\n\t\t\t\t\t\t<ul className=\"flex flex-col gap-5\">\n\t\t\t\t\t\t\t{providerNames.map((providerName) => (\n\t\t\t\t\t\t\t\t<li key={providerName}>\n\t\t\t\t\t\t\t\t\t<ProviderConnectionForm\n\t\t\t\t\t\t\t\t\t\ttype=\"Login\"\n\t\t\t\t\t\t\t\t\t\tproviderName={providerName}\n\t\t\t\t\t\t\t\t\t\tredirectTo={redirectTo}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t</ul>\n\t\t\t\t\t\t<div className=\"flex items-center justify-center gap-2 pt-6\">\n\t\t\t\t\t\t\t<span className=\"text-muted-foreground\">New here?</span>\n\t\t\t\t\t\t\t<Link\n\t\t\t\t\t\t\t\tto={\n\t\t\t\t\t\t\t\t\tredirectTo\n\t\t\t\t\t\t\t\t\t\t? `/signup?redirectTo=${encodeURIComponent(redirectTo)}`\n\t\t\t\t\t\t\t\t\t\t: '/signup'\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\tCreate an account\n\t\t\t\t\t\t\t</Link>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t)\n}\n\nconst VerificationResponseSchema = z.discriminatedUnion('status', [\n\tz.object({\n\t\tstatus: z.literal('success'),\n\t\tlocation: z.string(),\n\t}),\n\tz.object({\n\t\tstatus: z.literal('error'),\n\t\terror: z.string(),\n\t}),\n])\n\nfunction PasskeyLogin({\n\tredirectTo,\n\tremember,\n}: {\n\tredirectTo: string | null\n\tremember: boolean\n}) {\n\tconst [isPending] = useTransition()\n\tconst [error, setError] = useState<string | null>(null)\n\tconst [passkeyMessage, setPasskeyMessage] = useOptimistic<string | null>(\n\t\t'Login with a passkey',\n\t)\n\tconst navigate = useNavigate()\n\n\tasync function handlePasskeyLogin() {\n\t\ttry {\n\t\t\tsetPasskeyMessage('Generating Authentication Options')\n\t\t\t// Get authentication options from the server\n\t\t\tconst optionsResponse = await fetch('/webauthn/authentication')\n\t\t\tconst json = await optionsResponse.json()\n\t\t\tconst { options } = AuthenticationOptionsSchema.parse(json)\n\n\t\t\tsetPasskeyMessage('Requesting your authorization')\n\t\t\tconst authResponse = await startAuthentication({ optionsJSON: options })\n\t\t\tsetPasskeyMessage('Verifying your passkey')\n\n\t\t\t// Verify the authentication with the server\n\t\t\tconst verificationResponse = await fetch('/webauthn/authentication', {\n\t\t\t\tmethod: 'POST',\n\t\t\t\theaders: { 'Content-Type': 'application/json' },\n\t\t\t\tbody: JSON.stringify({ authResponse, remember, redirectTo }),\n\t\t\t})\n\n\t\t\tconst verificationJson = await verificationResponse.json().catch(() => ({\n\t\t\t\tstatus: 'error',\n\t\t\t\terror: 'Unknown error',\n\t\t\t}))\n\n\t\t\tconst parsedResult =\n\t\t\t\tVerificationResponseSchema.safeParse(verificationJson)\n\t\t\tif (!parsedResult.success) {\n\t\t\t\tthrow new Error(parsedResult.error.message)\n\t\t\t} else if (parsedResult.data.status === 'error') {\n\t\t\t\tthrow new Error(parsedResult.data.error)\n\t\t\t}\n\t\t\tconst { location } = parsedResult.data\n\n\t\t\tsetPasskeyMessage(\"You're logged in! Navigating...\")\n\t\t\tawait navigate(location ?? '/')\n\t\t} catch (e) {\n\t\t\tconst errorMessage = getErrorMessage(e)\n\t\t\tsetError(`Failed to authenticate with passkey: ${errorMessage}`)\n\t\t}\n\t}\n\n\treturn (\n\t\t<form action={handlePasskeyLogin}>\n\t\t\t<StatusButton\n\t\t\t\tid=\"passkey-login-button\"\n\t\t\t\taria-describedby=\"passkey-login-button-error\"\n\t\t\t\tclassName=\"w-full\"\n\t\t\t\tstatus={isPending ? 'pending' : error ? 'error' : 'idle'}\n\t\t\t\ttype=\"submit\"\n\t\t\t\tdisabled={isPending}\n\t\t\t>\n\t\t\t\t<span className=\"inline-flex items-center gap-1.5\">\n\t\t\t\t\t<Icon name=\"passkey\" />\n\t\t\t\t\t<span>{passkeyMessage}</span>\n\t\t\t\t</span>\n\t\t\t</StatusButton>\n\t\t\t<div className=\"mt-2\">\n\t\t\t\t<ErrorList errors={[error]} id=\"passkey-login-button-error\" />\n\t\t\t</div>\n\t\t</form>\n\t)\n}\n\nexport const meta: Route.MetaFunction = () => {\n\treturn [{ title: 'Login to Epic Notes' }]\n}\n\nexport function ErrorBoundary() {\n\treturn <GeneralErrorBoundary />\n}\n","import { redirect } from 'react-router'\nimport { logout } from '#app/utils/auth.server.ts'\nimport { type Route } from './+types/logout.ts'\n\nexport async function loader() {\n\treturn redirect('/')\n}\n\nexport async function action({ request }: Route.ActionArgs) {\n\treturn logout({ request })\n}\n","import { getFormProps, getInputProps, useForm } from '@conform-to/react'\nimport { getZodConstraint, parseWithZod } from '@conform-to/zod'\nimport { type SEOHandle } from '@nasa-gcn/remix-seo'\nimport * as E from '@react-email/components'\nimport { data, redirect, Form, useSearchParams } from 'react-router'\nimport { HoneypotInputs } from 'remix-utils/honeypot/react'\nimport { z } from 'zod'\nimport { GeneralErrorBoundary } from '#app/components/error-boundary.tsx'\nimport { ErrorList, Field } from '#app/components/forms.tsx'\nimport { StatusButton } from '#app/components/ui/status-button.tsx'\nimport { requireAnonymous } from '#app/utils/auth.server.ts'\nimport {\n\tProviderConnectionForm,\n\tproviderNames,\n} from '#app/utils/connections.tsx'\nimport { prisma } from '#app/utils/db.server.ts'\nimport { sendEmail } from '#app/utils/email.server.ts'\nimport { checkHoneypot } from '#app/utils/honeypot.server.ts'\nimport { useIsPending } from '#app/utils/misc.tsx'\nimport { EmailSchema } from '#app/utils/user-validation.ts'\nimport { type Route } from './+types/signup.ts'\nimport { prepareVerification } from './verify.server.ts'\n\nexport const handle: SEOHandle = {\n\tgetSitemapEntries: () => null,\n}\n\nconst SignupSchema = z.object({\n\temail: EmailSchema,\n})\n\nexport async function loader({ request }: Route.LoaderArgs) {\n\tawait requireAnonymous(request)\n\treturn null\n}\n\nexport async function action({ request }: Route.ActionArgs) {\n\tconst formData = await request.formData()\n\n\tawait checkHoneypot(formData)\n\n\tconst submission = await parseWithZod(formData, {\n\t\tschema: SignupSchema.superRefine(async (data, ctx) => {\n\t\t\tconst existingUser = await prisma.user.findUnique({\n\t\t\t\twhere: { email: data.email },\n\t\t\t\tselect: { id: true },\n\t\t\t})\n\t\t\tif (existingUser) {\n\t\t\t\tctx.addIssue({\n\t\t\t\t\tpath: ['email'],\n\t\t\t\t\tcode: z.ZodIssueCode.custom,\n\t\t\t\t\tmessage: 'A user already exists with this email',\n\t\t\t\t})\n\t\t\t\treturn\n\t\t\t}\n\t\t}),\n\t\tasync: true,\n\t})\n\tif (submission.status !== 'success') {\n\t\treturn data(\n\t\t\t{ result: submission.reply() },\n\t\t\t{ status: submission.status === 'error' ? 400 : 200 },\n\t\t)\n\t}\n\tconst { email } = submission.value\n\tconst { verifyUrl, redirectTo, otp } = await prepareVerification({\n\t\tperiod: 10 * 60,\n\t\trequest,\n\t\ttype: 'onboarding',\n\t\ttarget: email,\n\t})\n\n\tconst response = await sendEmail({\n\t\tto: email,\n\t\tsubject: `Welcome to Epic Notes!`,\n\t\treact: <SignupEmail onboardingUrl={verifyUrl.toString()} otp={otp} />,\n\t})\n\n\tif (response.status === 'success') {\n\t\treturn redirect(redirectTo.toString())\n\t} else {\n\t\treturn data(\n\t\t\t{\n\t\t\t\tresult: submission.reply({ formErrors: [response.error.message] }),\n\t\t\t},\n\t\t\t{\n\t\t\t\tstatus: 500,\n\t\t\t},\n\t\t)\n\t}\n}\n\nexport function SignupEmail({\n\tonboardingUrl,\n\totp,\n}: {\n\tonboardingUrl: string\n\totp: string\n}) {\n\treturn (\n\t\t<E.Html lang=\"en\" dir=\"ltr\">\n\t\t\t<E.Container>\n\t\t\t\t<h1>\n\t\t\t\t\t<E.Text>Welcome to Epic Notes!</E.Text>\n\t\t\t\t</h1>\n\t\t\t\t<p>\n\t\t\t\t\t<E.Text>\n\t\t\t\t\t\tHere's your verification code: <strong>{otp}</strong>\n\t\t\t\t\t</E.Text>\n\t\t\t\t</p>\n\t\t\t\t<p>\n\t\t\t\t\t<E.Text>Or click the link to get started:</E.Text>\n\t\t\t\t</p>\n\t\t\t\t<E.Link href={onboardingUrl}>{onboardingUrl}</E.Link>\n\t\t\t</E.Container>\n\t\t</E.Html>\n\t)\n}\n\nexport const meta: Route.MetaFunction = () => {\n\treturn [{ title: 'Sign Up | Epic Notes' }]\n}\n\nexport default function SignupRoute({ actionData }: Route.ComponentProps) {\n\tconst isPending = useIsPending()\n\tconst [searchParams] = useSearchParams()\n\tconst redirectTo = searchParams.get('redirectTo')\n\n\tconst [form, fields] = useForm({\n\t\tid: 'signup-form',\n\t\tconstraint: getZodConstraint(SignupSchema),\n\t\tlastResult: actionData?.result,\n\t\tonValidate({ formData }) {\n\t\t\tconst result = parseWithZod(formData, { schema: SignupSchema })\n\t\t\treturn result\n\t\t},\n\t\tshouldRevalidate: 'onBlur',\n\t})\n\n\treturn (\n\t\t<div className=\"container flex flex-col justify-center pt-20 pb-32\">\n\t\t\t<div className=\"text-center\">\n\t\t\t\t<h1 className=\"text-h1\">Let's start your journey!</h1>\n\t\t\t\t<p className=\"text-body-md text-muted-foreground mt-3\">\n\t\t\t\t\tPlease enter your email.\n\t\t\t\t</p>\n\t\t\t</div>\n\t\t\t<div className=\"mx-auto mt-16 max-w-sm min-w-full sm:min-w-[368px]\">\n\t\t\t\t<Form method=\"POST\" {...getFormProps(form)}>\n\t\t\t\t\t<HoneypotInputs />\n\t\t\t\t\t<Field\n\t\t\t\t\t\tlabelProps={{\n\t\t\t\t\t\t\thtmlFor: fields.email.id,\n\t\t\t\t\t\t\tchildren: 'Email',\n\t\t\t\t\t\t}}\n\t\t\t\t\t\tinputProps={{\n\t\t\t\t\t\t\t...getInputProps(fields.email, { type: 'email' }),\n\t\t\t\t\t\t\tautoFocus: true,\n\t\t\t\t\t\t\tautoComplete: 'email',\n\t\t\t\t\t\t}}\n\t\t\t\t\t\terrors={fields.email.errors}\n\t\t\t\t\t/>\n\t\t\t\t\t<ErrorList errors={form.errors} id={form.errorId} />\n\t\t\t\t\t<StatusButton\n\t\t\t\t\t\tclassName=\"w-full\"\n\t\t\t\t\t\tstatus={isPending ? 'pending' : (form.status ?? 'idle')}\n\t\t\t\t\t\ttype=\"submit\"\n\t\t\t\t\t\tdisabled={isPending}\n\t\t\t\t\t>\n\t\t\t\t\t\tSubmit\n\t\t\t\t\t</StatusButton>\n\t\t\t\t</Form>\n\t\t\t\t<ul className=\"flex flex-col gap-4 py-4\">\n\t\t\t\t\t{providerNames.map((providerName) => (\n\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t<hr />\n\t\t\t\t\t\t\t<li key={providerName}>\n\t\t\t\t\t\t\t\t<ProviderConnectionForm\n\t\t\t\t\t\t\t\t\ttype=\"Signup\"\n\t\t\t\t\t\t\t\t\tproviderName={providerName}\n\t\t\t\t\t\t\t\t\tredirectTo={redirectTo}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t</>\n\t\t\t\t\t))}\n\t\t\t\t</ul>\n\t\t\t</div>\n\t\t</div>\n\t)\n}\n\nexport function ErrorBoundary() {\n\treturn <GeneralErrorBoundary />\n}\n","import {\n\ttype AuthenticationResponseJSON,\n\ttype RegistrationResponseJSON,\n} from '@simplewebauthn/server'\nimport { createCookie } from 'react-router'\nimport { z } from 'zod'\nimport { getDomainUrl } from '#app/utils/misc.tsx'\n\nexport const passkeyCookie = createCookie('webauthn-challenge', {\n\tpath: '/',\n\tsameSite: 'lax',\n\thttpOnly: true,\n\tmaxAge: 60 * 60 * 2,\n\tsecure: process.env.NODE_ENV === 'production',\n\tsecrets: [process.env.SESSION_SECRET],\n})\n\nexport const PasskeyCookieSchema = z.object({\n\tchallenge: z.string(),\n\tuserId: z.string(),\n})\n\nexport const RegistrationResponseSchema = z.object({\n\tid: z.string(),\n\trawId: z.string(),\n\tresponse: z.object({\n\t\tclientDataJSON: z.string(),\n\t\tattestationObject: z.string(),\n\t\ttransports: z\n\t\t\t.array(\n\t\t\t\tz.enum([\n\t\t\t\t\t'ble',\n\t\t\t\t\t'cable',\n\t\t\t\t\t'hybrid',\n\t\t\t\t\t'internal',\n\t\t\t\t\t'nfc',\n\t\t\t\t\t'smart-card',\n\t\t\t\t\t'usb',\n\t\t\t\t]),\n\t\t\t)\n\t\t\t.optional(),\n\t}),\n\tauthenticatorAttachment: z.enum(['cross-platform', 'platform']).optional(),\n\tclientExtensionResults: z.object({\n\t\tcredProps: z\n\t\t\t.object({\n\t\t\t\trk: z.boolean(),\n\t\t\t})\n\t\t\t.optional(),\n\t}),\n\ttype: z.literal('public-key'),\n}) satisfies z.ZodType<RegistrationResponseJSON>\n\nconst AuthenticationResponseSchema = z.object({\n\tid: z.string(),\n\trawId: z.string(),\n\tresponse: z.object({\n\t\tclientDataJSON: z.string(),\n\t\tauthenticatorData: z.string(),\n\t\tsignature: z.string(),\n\t\tuserHandle: z.string().optional(),\n\t}),\n\ttype: z.literal('public-key'),\n\tclientExtensionResults: z.object({\n\t\tappid: z.boolean().optional(),\n\t\tcredProps: z\n\t\t\t.object({\n\t\t\t\trk: z.boolean().optional(),\n\t\t\t})\n\t\t\t.optional(),\n\t\thmacCreateSecret: z.boolean().optional(),\n\t}),\n}) satisfies z.ZodType<AuthenticationResponseJSON>\n\nexport const PasskeyLoginBodySchema = z.object({\n\tauthResponse: AuthenticationResponseSchema,\n\tremember: z.boolean().default(false),\n\tredirectTo: z.string().nullable(),\n})\n\nexport function getWebAuthnConfig(request: Request) {\n\tconst url = new URL(getDomainUrl(request))\n\n\treturn {\n\t\trpName: url.hostname,\n\t\trpID: url.hostname,\n\t\torigin: url.origin,\n\t} as const\n}\n","import {\n\tgenerateAuthenticationOptions,\n\tverifyAuthenticationResponse,\n} from '@simplewebauthn/server'\nimport { getSessionExpirationDate } from '#app/utils/auth.server.ts'\nimport { prisma } from '#app/utils/db.server.ts'\nimport { handleNewSession } from '../login.server.ts'\nimport { type Route } from './+types/authentication.ts'\nimport {\n\tPasskeyLoginBodySchema,\n\tgetWebAuthnConfig,\n\tpasskeyCookie,\n} from './utils.server.ts'\n\nexport async function loader({ request }: Route.LoaderArgs) {\n\tconst config = getWebAuthnConfig(request)\n\tconst options = await generateAuthenticationOptions({\n\t\trpID: config.rpID,\n\t\tuserVerification: 'preferred',\n\t})\n\n\tconst cookieHeader = await passkeyCookie.serialize({\n\t\tchallenge: options.challenge,\n\t})\n\n\treturn Response.json({ options }, { headers: { 'Set-Cookie': cookieHeader } })\n}\n\nexport async function action({ request }: Route.ActionArgs) {\n\tconst cookieHeader = request.headers.get('Cookie')\n\tconst cookie = await passkeyCookie.parse(cookieHeader)\n\tconst deletePasskeyCookie = await passkeyCookie.serialize('', { maxAge: 0 })\n\ttry {\n\t\tif (!cookie?.challenge) {\n\t\t\tthrow new Error('Authentication challenge not found')\n\t\t}\n\n\t\tconst body = await request.json()\n\t\tconst result = PasskeyLoginBodySchema.safeParse(body)\n\t\tif (!result.success) {\n\t\t\tthrow new Error('Invalid authentication response')\n\t\t}\n\t\tconst { authResponse, remember, redirectTo } = result.data\n\n\t\tconst passkey = await prisma.passkey.findUnique({\n\t\t\twhere: { id: authResponse.id },\n\t\t\tinclude: { user: true },\n\t\t})\n\t\tif (!passkey) {\n\t\t\tthrow new Error('Passkey not found')\n\t\t}\n\n\t\tconst config = getWebAuthnConfig(request)\n\n\t\tconst verification = await verifyAuthenticationResponse({\n\t\t\tresponse: authResponse,\n\t\t\texpectedChallenge: cookie.challenge,\n\t\t\texpectedOrigin: config.origin,\n\t\t\texpectedRPID: config.rpID,\n\t\t\tcredential: {\n\t\t\t\tid: authResponse.id,\n\t\t\t\tpublicKey: passkey.publicKey,\n\t\t\t\tcounter: Number(passkey.counter),\n\t\t\t},\n\t\t})\n\n\t\tif (!verification.verified) {\n\t\t\tthrow new Error('Authentication verification failed')\n\t\t}\n\n\t\t// Update the authenticator's counter in the DB to the newest count\n\t\tawait prisma.passkey.update({\n\t\t\twhere: { id: passkey.id },\n\t\t\tdata: { counter: BigInt(verification.authenticationInfo.newCounter) },\n\t\t})\n\n\t\tconst session = await prisma.session.create({\n\t\t\tselect: { id: true, expirationDate: true, userId: true },\n\t\t\tdata: {\n\t\t\t\texpirationDate: getSessionExpirationDate(),\n\t\t\t\tuserId: passkey.userId,\n\t\t\t},\n\t\t})\n\n\t\tconst response = await handleNewSession(\n\t\t\t{\n\t\t\t\trequest,\n\t\t\t\tsession,\n\t\t\t\tremember,\n\t\t\t\tredirectTo: redirectTo ?? undefined,\n\t\t\t},\n\t\t\t{ headers: { 'Set-Cookie': deletePasskeyCookie } },\n\t\t)\n\n\t\treturn Response.json(\n\t\t\t{\n\t\t\t\tstatus: 'success',\n\t\t\t\tlocation: response.headers.get('Location'),\n\t\t\t},\n\t\t\t{ headers: response.headers },\n\t\t)\n\t} catch (error) {\n\t\tif (error instanceof Response) throw error\n\n\t\treturn Response.json(\n\t\t\t{\n\t\t\t\tstatus: 'error',\n\t\t\t\terror: error instanceof Error ? error.message : 'Verification failed',\n\t\t\t} as const,\n\t\t\t{ status: 400, headers: { 'Set-Cookie': deletePasskeyCookie } },\n\t\t)\n\t}\n}\n","import {\n\tgenerateRegistrationOptions,\n\tverifyRegistrationResponse,\n} from '@simplewebauthn/server'\nimport { requireUserId } from '#app/utils/auth.server.ts'\nimport { prisma } from '#app/utils/db.server.ts'\nimport { getDomainUrl, getErrorMessage } from '#app/utils/misc.tsx'\nimport { type Route } from './+types/registration.ts'\nimport {\n\tPasskeyCookieSchema,\n\tRegistrationResponseSchema,\n\tpasskeyCookie,\n\tgetWebAuthnConfig,\n} from './utils.server.ts'\n\nexport async function loader({ request }: Route.LoaderArgs) {\n\tconst userId = await requireUserId(request)\n\tconst passkeys = await prisma.passkey.findMany({\n\t\twhere: { userId },\n\t\tselect: { id: true },\n\t})\n\tconst user = await prisma.user.findUniqueOrThrow({\n\t\twhere: { id: userId },\n\t\tselect: { email: true, name: true, username: true },\n\t})\n\n\tconst config = getWebAuthnConfig(request)\n\tconst options = await generateRegistrationOptions({\n\t\trpName: config.rpName,\n\t\trpID: config.rpID,\n\t\tuserName: user.username,\n\t\tuserID: new TextEncoder().encode(userId),\n\t\tuserDisplayName: user.name ?? user.email,\n\t\tattestationType: 'none',\n\t\texcludeCredentials: passkeys,\n\t\tauthenticatorSelection: {\n\t\t\tresidentKey: 'preferred',\n\t\t\tuserVerification: 'preferred',\n\t\t},\n\t})\n\n\treturn Response.json(\n\t\t{ options },\n\t\t{\n\t\t\theaders: {\n\t\t\t\t'Set-Cookie': await passkeyCookie.serialize(\n\t\t\t\t\tPasskeyCookieSchema.parse({\n\t\t\t\t\t\tchallenge: options.challenge,\n\t\t\t\t\t\tuserId: options.user.id,\n\t\t\t\t\t}),\n\t\t\t\t),\n\t\t\t},\n\t\t},\n\t)\n}\n\nexport async function action({ request }: Route.ActionArgs) {\n\ttry {\n\t\tconst userId = await requireUserId(request)\n\n\t\tconst body = await request.json()\n\t\tconst result = RegistrationResponseSchema.safeParse(body)\n\t\tif (!result.success) {\n\t\t\tthrow new Error('Invalid registration response')\n\t\t}\n\n\t\tconst data = result.data\n\n\t\t// Get challenge from cookie\n\t\tconst passkeyCookieData = await passkeyCookie.parse(\n\t\t\trequest.headers.get('Cookie'),\n\t\t)\n\t\tconst parsedPasskeyCookieData =\n\t\t\tPasskeyCookieSchema.safeParse(passkeyCookieData)\n\t\tif (!parsedPasskeyCookieData.success) {\n\t\t\tthrow new Error('No challenge found')\n\t\t}\n\t\tconst { challenge, userId: webauthnUserId } = parsedPasskeyCookieData.data\n\n\t\tconst domain = new URL(getDomainUrl(request)).hostname\n\t\tconst rpID = domain\n\t\tconst origin = getDomainUrl(request)\n\n\t\tconst verification = await verifyRegistrationResponse({\n\t\t\tresponse: data,\n\t\t\texpectedChallenge: challenge,\n\t\t\texpectedOrigin: origin,\n\t\t\texpectedRPID: rpID,\n\t\t\trequireUserVerification: true,\n\t\t})\n\n\t\tconst { verified, registrationInfo } = verification\n\t\tif (!verified || !registrationInfo) {\n\t\t\tthrow new Error('Registration verification failed')\n\t\t}\n\t\tconst { credential, credentialDeviceType, credentialBackedUp, aaguid } =\n\t\t\tregistrationInfo\n\n\t\tconst existingPasskey = await prisma.passkey.findUnique({\n\t\t\twhere: { id: credential.id },\n\t\t\tselect: { id: true },\n\t\t})\n\n\t\tif (existingPasskey) {\n\t\t\tthrow new Error('This passkey has already been registered')\n\t\t}\n\n\t\t// Create new passkey in database\n\t\tawait prisma.passkey.create({\n\t\t\tdata: {\n\t\t\t\tid: credential.id,\n\t\t\t\taaguid,\n\t\t\t\tpublicKey: Buffer.from(credential.publicKey),\n\t\t\t\tuserId,\n\t\t\t\twebauthnUserId,\n\t\t\t\tcounter: credential.counter,\n\t\t\t\tdeviceType: credentialDeviceType,\n\t\t\t\tbackedUp: credentialBackedUp,\n\t\t\t\ttransports: credential.transports?.join(','),\n\t\t\t},\n\t\t})\n\n\t\treturn Response.json({ status: 'success' } as const, {\n\t\t\theaders: {\n\t\t\t\t'Set-Cookie': await passkeyCookie.serialize('', { maxAge: 0 }),\n\t\t\t},\n\t\t})\n\t} catch (error) {\n\t\tif (error instanceof Response) throw error\n\n\t\treturn Response.json(\n\t\t\t{ status: 'error', error: getErrorMessage(error) } as const,\n\t\t\t{ status: 400 },\n\t\t)\n\t}\n}\n","export default function AboutRoute() {\n\treturn <div>About page</div>\n}\n","export default \"__VITE_ASSET__Q2a1JfT7__\"","export default \"data:image/svg+xml,%3c?xml%20version='1.0'%20encoding='utf-8'?%3e%3c!--%20Generator:%20Adobe%20Illustrator%2015.1.0,%20SVG%20Export%20Plug-In%20.%20SVG%20Version:%206.00%20Build%200)%20--%3e%3c!DOCTYPE%20svg%20PUBLIC%20'-//W3C//DTD%20SVG%201.1//EN'%20'http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd'%3e%3csvg%20version='1.1'%20id='Layer_1'%20xmlns='http://www.w3.org/2000/svg'%20xmlns:xlink='http://www.w3.org/1999/xlink'%20viewBox='0%200%20294.825%20258.982'%20xml:space='preserve'%3e%3cg%3e%3cpath%20fill='%238080F2'%20d='M97.021,99.016l48.432-27.962c1.212-0.7,2.706-0.7,3.918,0l48.433,27.962%20c1.211,0.7,1.959,1.993,1.959,3.393v55.924c0,1.399-0.748,2.693-1.959,3.394l-48.433,27.962c-1.212,0.7-2.706,0.7-3.918,0%20l-48.432-27.962c-1.212-0.7-1.959-1.994-1.959-3.394v-55.924C95.063,101.009,95.81,99.716,97.021,99.016'/%3e%3cpath%20fill='%234B32C3'%20d='M273.336,124.488L215.469,23.816c-2.102-3.64-5.985-6.325-10.188-6.325H89.545%20c-4.204,0-8.088,2.685-10.19,6.325l-57.867,100.45c-2.102,3.641-2.102,8.236,0,11.877l57.867,99.847%20c2.102,3.64,5.986,5.501,10.19,5.501h115.735c4.203,0,8.087-1.805,10.188-5.446l57.867-100.01%20C275.439,132.396,275.439,128.128,273.336,124.488%20M225.419,172.898c0,1.48-0.891,2.849-2.174,3.59l-73.71,42.527%20c-1.282,0.74-2.888,0.74-4.17,0l-73.767-42.527c-1.282-0.741-2.179-2.109-2.179-3.59V87.843c0-1.481,0.884-2.849,2.167-3.59%20l73.707-42.527c1.282-0.741,2.886-0.741,4.168,0l73.772,42.527c1.283,0.741,2.186,2.109,2.186,3.59V172.898z'/%3e%3c/g%3e%3c/svg%3e\"","export default \"__VITE_ASSET__yoDGwirA__\"","export default \"__VITE_ASSET__2JQ90qDL__\"","export default \"data:image/svg+xml,%3csvg%20width='98'%20height='96'%20xmlns='http://www.w3.org/2000/svg'%3e%3cpath%20fill-rule='evenodd'%20clip-rule='evenodd'%20d='M48.854%200C21.839%200%200%2022%200%2049.217c0%2021.756%2013.993%2040.172%2033.405%2046.69%202.427.49%203.316-1.059%203.316-2.362%200-1.141-.08-5.052-.08-9.127-13.59%202.934-16.42-5.867-16.42-5.867-2.184-5.704-5.42-7.17-5.42-7.17-4.448-3.015.324-3.015.324-3.015%204.934.326%207.523%205.052%207.523%205.052%204.367%207.496%2011.404%205.378%2014.235%204.074.404-3.178%201.699-5.378%203.074-6.6-10.839-1.141-22.243-5.378-22.243-24.283%200-5.378%201.94-9.778%205.014-13.2-.485-1.222-2.184-6.275.486-13.038%200%200%204.125-1.304%2013.426%205.052a46.97%2046.97%200%200%201%2012.214-1.63c4.125%200%208.33.571%2012.213%201.63%209.302-6.356%2013.427-5.052%2013.427-5.052%202.67%206.763.97%2011.816.485%2013.038%203.155%203.422%205.015%207.822%205.015%2013.2%200%2018.905-11.404%2023.06-22.324%2024.283%201.78%201.548%203.316%204.481%203.316%209.126%200%206.6-.08%2011.897-.08%2013.526%200%201.304.89%202.853%203.316%202.364%2019.412-6.52%2033.405-24.935%2033.405-46.691C97.707%2022%2075.788%200%2048.854%200z'%20fill='%2324292f'/%3e%3c/svg%3e\"","export default \"data:image/svg+xml,%3c?xml%20version='1.0'%20encoding='UTF-8'?%3e%3csvg%20width='128px'%20height='128px'%20viewBox='0%200%20128%20128'%20version='1.1'%20xmlns='http://www.w3.org/2000/svg'%20xmlns:xlink='http://www.w3.org/1999/xlink'%3e%3ctitle%3eLOGO%3c/title%3e%3cg%20id='LOGO'%20stroke='none'%20stroke-width='1'%20fill='none'%20fill-rule='evenodd'%3e%3crect%20id='Rectangle'%20fill='%23000000'%20x='0'%20y='0'%20width='128'%20height='128'%20rx='24'%3e%3c/rect%3e%3cg%20id='logo'%20transform='translate(-27.172013,%20-27.850148)'%20stroke-width='17.85'%3e%3cg%20id='Group'%20transform='translate(91.172013,%2091.850148)%20rotate(-42.000000)%20translate(-91.172013,%20-91.850148)%20translate(30.956217,%2022.472129)'%3e%3cpath%20d='M63.77676,39.8567809%20C66.7201615,39.8567809%2069.3849115,41.0498301%2071.3138112,42.9787297%20C73.2427108,44.9076293%2074.43576,47.5723793%2074.43576,50.5157809%20C74.43576,53.1536096%2073.4576536,55.6977418%2071.690581,57.6562093%20L40.9074742,91.7734893%20C40.2942428,92.4531409%2039.4635827,92.8198888%2038.6163176,92.863416%20C37.7690524,92.9069431%2036.9051822,92.6272495%2036.2255306,92.0140181%20L5.20189513,57.6562093%20C3.23012026,55.470868%202.33079774,52.693193%202.47075426,49.9689097%20C2.61071079,47.2446264%203.78994636,44.5737347%205.97528769,42.6019599%20C7.93375514,40.8348872%2010.4778874,39.8567809%2013.1157161,39.8567809%20Z'%20id='back'%20stroke='%23FF3333'%20opacity='0.48'%20transform='translate(38.446238,%2069.378019)%20rotate(90.000000)%20translate(-38.446238,%20-69.378019)%20'%3e%3c/path%3e%3cpath%20d='M123.833688,39.8567809%20C124.7491,39.8567809%20125.57785,40.2278249%20126.177747,40.8277219%20C126.777644,41.4276189%20127.148688,42.2563689%20127.148688,43.1717809%20C127.148688,43.9921582%20126.844492,44.7833955%20126.294924,45.3924883%20L84.4465906,91.7734893%20C83.8333592,92.4531409%2083.0026991,92.8198888%2082.1554339,92.863416%20C81.3081688,92.9069431%2080.4442986,92.6272495%2079.764647,92.0140181%20L37.6757849,45.3924883%20C37.0625535,44.7128367%2036.7828599,43.8489665%2036.826387,43.0017013%20C36.8699142,42.1544362%2037.2366621,41.3237761%2037.9163137,40.7105447%20C38.5254064,40.1609766%2039.3166437,39.8567809%2040.1370211,39.8567809%20Z'%20id='front'%20stroke='%23FF6A33'%20transform='translate(81.985354,%2069.378019)%20rotate(-90.000000)%20translate(-81.985354,%20-69.378019)%20'%3e%3c/path%3e%3c/g%3e%3c/g%3e%3c/g%3e%3c/svg%3e\"","export default \"__VITE_ASSET__DSPjnI_X__\"","export default \"__VITE_ASSET__UhKH8YsL__\"","export default \"__VITE_ASSET__GbOWJe85__\"","export default \"data:image/svg+xml,%3csvg%20xmlns='http://www.w3.org/2000/svg'%20width='250'%20height='250'%20viewBox='0%200%2025%2025'%20fill='none'%20style='margin-right:3px'%3e%3cpath%20d='M12%2025C7.58173%2025%204%2021.4183%204%2017C4%2012.5817%207.58173%209%2012%209V25Z'%20fill='currentcolor'%3e%3c/path%3e%3cpath%20d='M12%200H4V8H12V0Z'%20fill='currentcolor'%3e%3c/path%3e%3cpath%20d='M17%208C19.2091%208%2021%206.20914%2021%204C21%201.79086%2019.2091%200%2017%200C14.7909%200%2013%201.79086%2013%204C13%206.20914%2014.7909%208%2017%208Z'%20fill='currentcolor'%3e%3c/path%3e%3c/svg%3e\"","export default \"__VITE_ASSET__BQ4k4JSF__\"","export default \"data:image/svg+xml,%3csvg%20width='800'%20height='800'%20viewBox='0%200%20800%20800'%20fill='none'%20xmlns='http://www.w3.org/2000/svg'%3e%3crect%20width='800'%20height='800'%20fill='%23212121'/%3e%3cg%20filter='url(%23filter0_dd_126_53)'%3e%3cpath%20fill-rule='evenodd'%20clip-rule='evenodd'%20d='M587.947%20527.768C592.201%20582.418%20592.201%20608.036%20592.201%20636H465.756C465.756%20629.909%20465.865%20624.337%20465.975%20618.687C466.317%20601.123%20466.674%20582.807%20463.828%20545.819C460.067%20491.667%20436.748%20479.634%20393.871%20479.634H355.883H195V381.109H399.889C454.049%20381.109%20481.13%20364.633%20481.13%20321.011C481.13%20282.654%20454.049%20259.41%20399.889%20259.41H195V163H422.456C545.069%20163%20606%20220.912%20606%20313.42C606%20382.613%20563.123%20427.739%20505.201%20435.26C554.096%20445.037%20582.681%20472.865%20587.947%20527.768Z'%20fill='%23E8F2FF'/%3e%3cpath%20d='M195%20636V562.553H328.697C351.029%20562.553%20355.878%20579.116%20355.878%20588.994V636H195Z'%20fill='%23E8F2FF'/%3e%3c/g%3e%3cdefs%3e%3cfilter%20id='filter0_dd_126_53'%20x='131'%20y='99'%20width='539'%20height='601'%20filterUnits='userSpaceOnUse'%20color-interpolation-filters='sRGB'%3e%3cfeFlood%20flood-opacity='0'%20result='BackgroundImageFix'/%3e%3cfeColorMatrix%20in='SourceAlpha'%20type='matrix'%20values='0%200%200%200%200%200%200%200%200%200%200%200%200%200%200%200%200%200%20127%200'%20result='hardAlpha'/%3e%3cfeOffset/%3e%3cfeGaussianBlur%20stdDeviation='28'/%3e%3cfeComposite%20in2='hardAlpha'%20operator='out'/%3e%3cfeColorMatrix%20type='matrix'%20values='0%200%200%200%200.223529%200%200%200%200%200.572549%200%200%200%200%201%200%200%200%201%200'/%3e%3cfeBlend%20mode='normal'%20in2='BackgroundImageFix'%20result='effect1_dropShadow_126_53'/%3e%3cfeColorMatrix%20in='SourceAlpha'%20type='matrix'%20values='0%200%200%200%200%200%200%200%200%200%200%200%200%200%200%200%200%200%20127%200'%20result='hardAlpha'/%3e%3cfeOffset/%3e%3cfeGaussianBlur%20stdDeviation='32'/%3e%3cfeComposite%20in2='hardAlpha'%20operator='out'/%3e%3cfeColorMatrix%20type='matrix'%20values='0%200%200%200%200.223529%200%200%200%200%200.572549%200%200%200%200%201%200%200%200%200.9%200'/%3e%3cfeBlend%20mode='normal'%20in2='effect1_dropShadow_126_53'%20result='effect2_dropShadow_126_53'/%3e%3cfeBlend%20mode='normal'%20in='SourceGraphic'%20in2='effect2_dropShadow_126_53'%20result='shape'/%3e%3c/filter%3e%3c/defs%3e%3c/svg%3e\"","export default \"data:image/svg+xml,%3csvg%20width='60'%20viewBox='0%200%201978%20420'%20fill='none'%20xmlns='http://www.w3.org/2000/svg'%3e%3cpath%20d='M543.803%20118.321C633.178%20118.321%20698.215%20180.419%20693.6%20293.286H475.948C484.076%20324.654%20505.791%20351.608%20549.257%20351.608C573.594%20351.608%20595.833%20344.895%20612.617%20323.916H687.726L686.467%20330.629C673.459%20388.112%20608.001%20420%20549.257%20420C456.106%20420%20393.585%20357.062%20393.585%20269.37C393.585%20181.678%20456.106%20118.321%20543.803%20118.321ZM1173.62%20118.321C1263.42%20118.321%201328.04%20180.419%201323.84%20293.286H1106.13C1114.16%20324.654%201135.72%20351.608%201179.5%20351.608C1203.84%20351.608%201226.07%20344.895%201242.44%20323.916H1317.97L1316.71%20330.629C1303.7%20388.111%201238.24%20420%201179.5%20420C1086.35%20420%201023.83%20357.063%201023.83%20269.37C1023.83%20181.678%201086.35%20118.321%201173.62%20118.321ZM1978%20411.609H1896.6L1900.79%20370.91C1889.46%20395.246%201852.96%20419.162%201807.22%20419.162C1731.69%20419.162%201670.43%20361.26%201670.43%20269.791C1670.43%20178.322%201730.85%20120.42%201807.22%20120.42C1848.76%20120.42%201874.36%20133.847%201897.02%20156.924V0H1978V411.609ZM853.47%20116.644C919.767%20116.644%20978.091%20140.559%20994.875%20199.301L996.554%20205.595H913.892C896.268%20183.777%20872.771%20180.839%20853.47%20180.839C835.427%20180.839%20806.894%20185.455%20806.894%20203.077C806.894%20219.441%20825.776%20224.895%20842.141%20226.993L889.975%20232.028C965.922%20238.742%20999.491%20268.532%20999.491%20326.854C999.491%20393.986%20932.774%20419.161%20866.896%20419.161C801.019%20419.161%20732.624%20389.79%20719.616%20330.21L718.357%20323.916H803.117C814.866%20357.483%20868.994%20354.965%20866.896%20354.965C898.786%20354.965%20918.508%20345.315%20918.508%20329.79C918.508%20319.72%20915.15%20307.972%20882.422%20303.776L832.489%20298.741C766.612%20294.126%20726.75%20259.3%20726.75%20207.272C726.75%20143.496%20787.173%20116.644%20853.47%20116.644ZM251.761%200C331.485%200%20378.9%2047.4126%20378.9%20110.35C378.9%20173.287%20331.485%20220.7%20251.761%20220.7H211.479L411.629%20411.609H270.224L117.908%20266.854C106.999%20256.784%20101.963%20245.036%20101.963%20234.966C101.963%20220.7%20112.034%20208.113%20131.335%20202.658L209.801%20181.679C239.592%20173.707%20260.153%20150.63%20260.153%20120.42C260.153%2083.4968%20229.941%2062.0977%20192.597%2062.0977H0V0H251.761ZM1520.63%20118.74C1591.97%20118.74%201641.9%20170.768%201641.9%20245.034V411.608H1560.5V258.88C1560.5%20216.922%201538.26%20191.747%201498.81%20191.747C1459.37%20191.747%201433.78%20217.761%201433.78%20258.88V411.608H1354.05V124.614H1435.04L1431.26%20170.349C1443.01%20147.272%201479.51%20118.74%201520.63%20118.74ZM1826.52%20191.749C1777.43%20191.749%201751.42%20228.252%201751.42%20269.791C1751.42%20314.266%201780.79%20348.252%201826.52%20348.252C1870.58%20348.252%201899.11%20313.847%201899.11%20269.791C1899.11%20225.735%201871.42%20191.749%201826.52%20191.749ZM543.803%20183.355C504.138%20183.355%20481.475%20207.041%20474.442%20238.74H611.728C610.893%20235.09%20609.818%20231.188%20608.421%20226.992C598.35%20198.461%20574.853%20183.356%20543.803%20183.355ZM1173.62%20183.355C1134.3%20183.356%201111.7%20207.041%201104.68%20238.74H1241.97C1241.13%20235.09%201240.06%20231.188%201238.66%20226.992C1228.59%20198.461%201205.09%20183.355%201173.62%20183.355Z'%20fill='black'/%3e%3c/svg%3e\"","export default \"data:image/svg+xml,%3csvg%20class='css-lfbo6j%20e10nushx4'%20xmlns='http://www.w3.org/2000/svg'%20viewBox='0%200%20222%2066'%20width='400'%20height='119'%3e%3cpath%20d='M29,2.26a4.67,4.67,0,0,0-8,0L14.42,13.53A32.21,32.21,0,0,1,32.17,40.19H27.55A27.68,27.68,0,0,0,12.09,17.47L6,28a15.92,15.92,0,0,1,9.23,12.17H4.62A.76.76,0,0,1,4,39.06l2.94-5a10.74,10.74,0,0,0-3.36-1.9l-2.91,5a4.54,4.54,0,0,0,1.69,6.24A4.66,4.66,0,0,0,4.62,44H19.15a19.4,19.4,0,0,0-8-17.31l2.31-4A23.87,23.87,0,0,1,23.76,44H36.07a35.88,35.88,0,0,0-16.41-31.8l4.67-8a.77.77,0,0,1,1.05-.27c.53.29,20.29,34.77,20.66,35.17a.76.76,0,0,1-.68,1.13H40.6q.09,1.91,0,3.81h4.78A4.59,4.59,0,0,0,50,39.43a4.49,4.49,0,0,0-.62-2.28Z%20M124.32,28.28,109.56,9.22h-3.68V34.77h3.73V15.19l15.18,19.58h3.26V9.22h-3.73ZM87.15,23.54h13.23V20.22H87.14V12.53h14.93V9.21H83.34V34.77h18.92V31.45H87.14ZM71.59,20.3h0C66.44,19.06,65,18.08,65,15.7c0-2.14,1.89-3.59,4.71-3.59a12.06,12.06,0,0,1,7.07,2.55l2-2.83a14.1,14.1,0,0,0-9-3c-5.06,0-8.59,3-8.59,7.27,0,4.6,3,6.19,8.46,7.52C74.51,24.74,76,25.78,76,28.11s-2,3.77-5.09,3.77a12.34,12.34,0,0,1-8.3-3.26l-2.25,2.69a15.94,15.94,0,0,0,10.42,3.85c5.48,0,9-2.95,9-7.51C79.75,23.79,77.47,21.72,71.59,20.3ZM195.7,9.22l-7.69,12-7.64-12h-4.46L186,24.67V34.78h3.84V24.55L200,9.22Zm-64.63,3.46h8.37v22.1h3.84V12.68h8.37V9.22H131.08ZM169.41,24.8c3.86-1.07,6-3.77,6-7.63,0-4.91-3.59-8-9.38-8H154.67V34.76h3.8V25.58h6.45l6.48,9.2h4.44l-7-9.82Zm-10.95-2.5V12.6h7.17c3.74,0,5.88,1.77,5.88,4.84s-2.29,4.86-5.84,4.86Z'%20transform='translate(11,%2011)'%20fill='%23362d59'%3e%3c/path%3e%3c/svg%3e\"","export default \"data:image/svg+xml,%3csvg%20xmlns='http://www.w3.org/2000/svg'%20viewBox='0%200%20256%20256'%3e%3crect%20width='256'%20height='256'%20fill='none'%3e%3c/rect%3e%3cline%20x1='208'%20y1='128'%20x2='128'%20y2='208'%20fill='none'%20stroke='currentColor'%20stroke-linecap='round'%20stroke-linejoin='round'%20stroke-width='16'%3e%3c/line%3e%3cline%20x1='192'%20y1='40'%20x2='40'%20y2='192'%20fill='none'%20stroke='currentColor'%20stroke-linecap='round'%20stroke-linejoin='round'%20stroke-width='16'%3e%3c/line%3e%3c/svg%3e\"","export default \"__VITE_ASSET__C3SenuCW__\"","export default \"data:image/svg+xml,%3csvg%20xmlns='http://www.w3.org/2000/svg'%20fill='none'%20viewBox='0%200%2054%2033'%3e%3cg%20clip-path='url(%23prefix__clip0)'%3e%3cpath%20fill='%2338bdf8'%20fill-rule='evenodd'%20d='M27%200c-7.2%200-11.7%203.6-13.5%2010.8%202.7-3.6%205.85-4.95%209.45-4.05%202.054.513%203.522%202.004%205.147%203.653C30.744%2013.09%2033.808%2016.2%2040.5%2016.2c7.2%200%2011.7-3.6%2013.5-10.8-2.7%203.6-5.85%204.95-9.45%204.05-2.054-.513-3.522-2.004-5.147-3.653C36.756%203.11%2033.692%200%2027%200zM13.5%2016.2C6.3%2016.2%201.8%2019.8%200%2027c2.7-3.6%205.85-4.95%209.45-4.05%202.054.514%203.522%202.004%205.147%203.653C17.244%2029.29%2020.308%2032.4%2027%2032.4c7.2%200%2011.7-3.6%2013.5-10.8-2.7%203.6-5.85%204.95-9.45%204.05-2.054-.513-3.522-2.004-5.147-3.653C23.256%2019.31%2020.192%2016.2%2013.5%2016.2z'%20clip-rule='evenodd'/%3e%3c/g%3e%3cdefs%3e%3cclipPath%20id='prefix__clip0'%3e%3cpath%20fill='%23fff'%20d='M0%200h54v32.4H0z'/%3e%3c/clipPath%3e%3c/defs%3e%3c/svg%3e\"","export default \"__VITE_ASSET__gIEtGA3$__\"","export default \"data:image/svg+xml,%3c?xml%20version='1.0'%20encoding='UTF-8'?%3e%3csvg%20width='512'%20height='512'%20fill='none'%20version='1.1'%20viewBox='0%200%20512%20512'%20xmlns='http://www.w3.org/2000/svg'%20xmlns:cc='http://creativecommons.org/ns%23'%20xmlns:dc='http://purl.org/dc/elements/1.1/'%20xmlns:rdf='http://www.w3.org/1999/02/22-rdf-syntax-ns%23'%3e%3ctitle%3eTypeScript%20logo%3c/title%3e%3crect%20width='512'%20height='512'%20rx='50'%20fill='%233178c6'/%3e%3cpath%20d='m317%20407v50c8.1%204.2%2018%207.3%2029%209.4s23%203.1%2035%203.1c12%200%2023-1.1%2034-3.4%2011-2.3%2020-6.1%2028-11%208.1-5.3%2015-12%2019-21s7.1-19%207.1-32c0-9.1-1.4-17-4.1-24s-6.6-13-12-18c-5.1-5.3-11-10-18-14s-15-8.2-24-12c-6.6-2.7-12-5.3-18-7.9-5.2-2.6-9.7-5.2-13-7.8-3.7-2.7-6.5-5.5-8.5-8.4-2-3-3-6.3-3-10%200-3.4%200.89-6.5%202.7-9.3s4.3-5.1%207.5-7.1c3.2-2%207.2-3.5%2012-4.6%204.7-1.1%209.9-1.6%2016-1.6%204.2%200%208.6%200.31%2013%200.94%204.6%200.63%209.3%201.6%2014%202.9%204.7%201.3%209.3%202.9%2014%204.9%204.4%202%208.5%204.3%2012%206.9v-47c-7.6-2.9-16-5.1-25-6.5s-19-2.1-31-2.1c-12%200-23%201.3-34%203.8s-20%206.5-28%2012c-8.1%205.4-14%2012-19%2021-4.7%208.4-7%2018-7%2030%200%2015%204.3%2028%2013%2038%208.6%2011%2022%2019%2039%2027%206.9%202.8%2013%205.6%2019%208.3s11%205.5%2015%208.4c4.3%202.9%207.7%206.1%2010%209.5%202.5%203.4%203.8%207.4%203.8%2012%200%203.2-0.78%206.2-2.3%209s-3.9%205.2-7.1%207.2-7.1%203.6-12%204.8c-4.7%201.1-10%201.7-17%201.7-11%200-22-1.9-32-5.7-11-3.8-21-9.5-30-17zm-84-123h64v-41h-179v41h64v183h51z'%20clip-rule='evenodd'%20fill='%23fff'%20fill-rule='evenodd'%20style='fill:%23fff'/%3e%3c/svg%3e\"","export default \"data:image/svg+xml,%3csvg%20width='165'%20height='165'%20viewBox='0%200%20165%20165'%20fill='none'%20xmlns='http://www.w3.org/2000/svg'%3e%3cpath%20d='M120.831%2057.2543L84.693%20109.505C84.3099%20110.059%2083.7558%20110.474%2083.1148%20110.687C82.4738%20110.9%2081.7809%20110.898%2081.1412%20110.684C80.5015%20110.469%2079.95%20110.052%2079.5702%20109.497C79.1905%20108.941%2079.0032%20108.277%2079.037%20107.606L80.4833%2078.7582L57.1343%2073.8064C56.6353%2073.7007%2056.1704%2073.474%2055.7807%2073.1465C55.391%2072.8191%2055.0885%2072.4009%2054.9001%2071.929C54.7117%2071.4571%2054.6432%2070.9461%2054.7006%2070.4412C54.758%2069.9364%2054.9395%2069.4532%2055.2291%2069.0345L91.3675%2016.7837C91.7507%2016.2294%2092.3048%2015.8145%2092.9458%2015.6018C93.5869%2015.3891%2094.2798%2015.3902%2094.9196%2015.6051C95.5593%2015.8199%2096.1109%2016.2367%2096.4906%2016.7923C96.8703%2017.3478%2097.0575%2018.0117%2097.0236%2018.6833L95.5773%2047.5314L118.926%2052.4828C119.425%2052.5885%20119.89%2052.8152%20120.28%2053.1426C120.67%2053.4701%20120.972%2053.8883%20121.16%2054.3602C121.349%2054.8321%20121.417%2055.3431%20121.36%2055.8479C121.303%2056.3528%20121.121%2056.836%20120.831%2057.2547L120.831%2057.2543Z'%20fill='%23FCC72B'/%3e%3cpath%20d='M82.9866%20153.343C82.0254%20153.344%2081.0735%20153.156%2080.1855%20152.788C79.2975%20152.42%2078.4909%20151.88%2077.8122%20151.2L43.6658%20117.056C42.2998%20115.683%2041.5341%20113.824%2041.5366%20111.887C41.5392%20109.95%2042.3098%20108.092%2043.6796%20106.723C45.0493%20105.353%2046.9064%20104.582%2048.8435%20104.579C50.7807%20104.577%2052.6399%20105.342%2054.0134%20106.708L82.9866%20135.678L146.105%2072.5626C147.481%2071.2088%20149.336%2070.4536%20151.266%2070.4615C153.197%2070.4693%20155.046%2071.2396%20156.41%2072.6045C157.775%2073.9695%20158.546%2075.8184%20158.554%2077.7487C158.561%2079.679%20157.806%2081.5342%20156.452%2082.9101L88.1597%20151.2C87.4811%20151.881%2086.6747%20152.42%2085.7869%20152.788C84.8992%20153.156%2083.9475%20153.344%2082.9866%20153.343Z'%20fill='%23729B1B'/%3e%3cpath%20d='M82.9572%20153.343C83.9184%20153.344%2084.8703%20153.156%2085.7583%20152.788C86.6463%20152.42%2087.4528%20151.88%2088.1316%20151.2L122.278%20117.056C123.644%20115.683%20124.41%20113.824%20124.407%20111.887C124.405%20109.95%20123.634%20108.092%20122.264%20106.723C120.894%20105.353%20119.037%20104.582%20117.1%20104.579C115.163%20104.577%20113.304%20105.342%20111.93%20106.708L82.9572%20135.678L19.8389%2072.5626C18.4629%2071.2088%2016.6077%2070.4536%2014.6775%2070.4615C12.7472%2070.4693%2010.8982%2071.2396%209.53331%2072.6045C8.16839%2073.9695%207.39811%2075.8184%207.39025%2077.7487C7.38239%2079.679%208.13759%2081.5342%209.49135%2082.9101L77.784%20151.2C78.4627%20151.881%2079.2691%20152.42%2080.1568%20152.788C81.0446%20153.156%2081.9963%20153.344%2082.9572%20153.343Z'%20fill='%23729B1B'%20fill-opacity='0.5'/%3e%3c/svg%3e\"","export default \"__VITE_ASSET__DTiGmrs$__\"","import docker from './docker.svg'\nimport eslint from './eslint.svg'\nimport fakerJS from './faker.svg'\nimport fly from './fly.svg'\nimport github from './github.svg'\nimport msw from './msw.svg'\nimport playwright from './playwright.svg'\nimport prettier from './prettier.svg'\nimport prisma from './prisma.svg'\nimport radixUI from './radix.svg'\nimport reactEmail from './react-email.svg'\nimport remix from './remix.svg'\nimport resend from './resend.svg'\nimport sentry from './sentry.svg'\nimport shadcnUI from './shadcn-ui.svg'\nimport sqlite from './sqlite.svg'\nimport tailwind from './tailwind.svg'\nimport testingLibrary from './testing-library.png'\nimport typescript from './typescript.svg'\nimport vitest from './vitest.svg'\nimport zod from './zod.svg'\n\nexport { default as stars } from './stars.jpg'\n\nexport const logos = [\n\t{\n\t\tsrc: remix,\n\t\talt: 'Remix',\n\t\thref: 'https://remix.run',\n\t\tcolumn: 1,\n\t\trow: 1,\n\t},\n\t{\n\t\tsrc: fly,\n\t\talt: 'Fly.io',\n\t\thref: 'https://fly.io',\n\t\tcolumn: 1,\n\t\trow: 2,\n\t},\n\t{\n\t\tsrc: sqlite,\n\t\talt: 'SQLite',\n\t\thref: 'https://sqlite.org',\n\t\tcolumn: 1,\n\t\trow: 3,\n\t},\n\t{\n\t\tsrc: prisma,\n\t\talt: 'Prisma',\n\t\thref: 'https://prisma.io',\n\t\tcolumn: 2,\n\t\trow: 2,\n\t},\n\t{\n\t\tsrc: zod,\n\t\talt: 'Zod',\n\t\thref: 'https://zod.dev/',\n\t\tcolumn: 2,\n\t\trow: 3,\n\t},\n\t{\n\t\tsrc: github,\n\t\talt: 'GitHub',\n\t\thref: 'https://github.com',\n\t\tcolumn: 2,\n\t\trow: 4,\n\t},\n\t{\n\t\tsrc: resend,\n\t\talt: 'Resend',\n\t\thref: 'https://resend.com',\n\t\tcolumn: 2,\n\t\trow: 5,\n\t},\n\t{\n\t\tsrc: reactEmail,\n\t\talt: 'React Email',\n\t\thref: 'https://react.email',\n\t\tcolumn: 2,\n\t\trow: 6,\n\t},\n\t{\n\t\tsrc: tailwind,\n\t\talt: 'Tailwind CSS',\n\t\thref: 'https://tailwindcss.com',\n\t\tcolumn: 3,\n\t\trow: 3,\n\t},\n\t{\n\t\tsrc: radixUI,\n\t\talt: 'Radix UI',\n\t\thref: 'https://www.radix-ui.com/',\n\t\tcolumn: 3,\n\t\trow: 4,\n\t},\n\t{\n\t\tsrc: shadcnUI,\n\t\talt: 'shadcn/ui',\n\t\thref: 'https://ui.shadcn.com/',\n\t\tcolumn: 3,\n\t\trow: 5,\n\t},\n\t{\n\t\tsrc: playwright,\n\t\talt: 'Playwright',\n\t\thref: 'https://playwright.dev/',\n\t\tcolumn: 4,\n\t\trow: 1,\n\t},\n\t{\n\t\tsrc: msw,\n\t\talt: 'MSW',\n\t\thref: 'https://mswjs.io',\n\t\tcolumn: 4,\n\t\trow: 2,\n\t},\n\t{\n\t\tsrc: fakerJS,\n\t\talt: 'Faker.js',\n\t\thref: 'https://fakerjs.dev/',\n\t\tcolumn: 4,\n\t\trow: 3,\n\t},\n\t{\n\t\tsrc: vitest,\n\t\talt: 'Vitest',\n\t\thref: 'https://vitest.dev',\n\t\tcolumn: 4,\n\t\trow: 4,\n\t},\n\t{\n\t\tsrc: testingLibrary,\n\t\talt: 'Testing Library',\n\t\thref: 'https://testing-library.com',\n\t\tcolumn: 4,\n\t\trow: 5,\n\t},\n\t{\n\t\tsrc: docker,\n\t\talt: 'Docker',\n\t\thref: 'https://www.docker.com',\n\t\tcolumn: 4,\n\t\trow: 6,\n\t},\n\t{\n\t\tsrc: typescript,\n\t\talt: 'TypeScript',\n\t\thref: 'https://typescriptlang.org',\n\t\tcolumn: 5,\n\t\trow: 2,\n\t},\n\t{\n\t\tsrc: prettier,\n\t\talt: 'Prettier',\n\t\thref: 'https://prettier.io',\n\t\tcolumn: 5,\n\t\trow: 3,\n\t},\n\t{\n\t\tsrc: eslint,\n\t\talt: 'ESLint',\n\t\thref: 'https://eslint.org',\n\t\tcolumn: 5,\n\t\trow: 4,\n\t},\n\t{\n\t\tsrc: sentry,\n\t\talt: 'Sentry',\n\t\thref: 'https://sentry.io',\n\t\tcolumn: 5,\n\t\trow: 5,\n\t},\n]\n","import {\n\tTooltip,\n\tTooltipContent,\n\tTooltipProvider,\n\tTooltipTrigger,\n} from '#app/components/ui/tooltip.tsx'\nimport { cn } from '#app/utils/misc.tsx'\nimport { type Route } from './+types/index.ts'\nimport { logos } from './logos/logos.ts'\n\nexport const meta: Route.MetaFunction = () => [{ title: 'Epic Notes' }]\n\n// Tailwind Grid cell classes lookup\nconst columnClasses: Record<(typeof logos)[number]['column'], string> = {\n\t1: 'xl:col-start-1',\n\t2: 'xl:col-start-2',\n\t3: 'xl:col-start-3',\n\t4: 'xl:col-start-4',\n\t5: 'xl:col-start-5',\n}\nconst rowClasses: Record<(typeof logos)[number]['row'], string> = {\n\t1: 'xl:row-start-1',\n\t2: 'xl:row-start-2',\n\t3: 'xl:row-start-3',\n\t4: 'xl:row-start-4',\n\t5: 'xl:row-start-5',\n\t6: 'xl:row-start-6',\n}\n\nexport default function Index() {\n\treturn (\n\t\t<main className=\"font-poppins grid h-full place-items-center\">\n\t\t\t<div className=\"grid place-items-center px-4 py-16 xl:grid-cols-2 xl:gap-24\">\n\t\t\t\t<div className=\"flex max-w-md flex-col items-center text-center xl:order-2 xl:items-start xl:text-left\">\n\t\t\t\t\t<a\n\t\t\t\t\t\thref=\"https://www.epicweb.dev/stack\"\n\t\t\t\t\t\tclassName=\"animate-slide-top xl:animate-slide-left [animation-fill-mode:backwards] xl:[animation-delay:0.5s] xl:[animation-fill-mode:backwards]\"\n\t\t\t\t\t>\n\t\t\t\t\t\t<svg\n\t\t\t\t\t\t\tclassName=\"text-foreground size-20 xl:-mt-4\"\n\t\t\t\t\t\t\txmlns=\"http://www.w3.org/2000/svg\"\n\t\t\t\t\t\t\tfill=\"none\"\n\t\t\t\t\t\t\tviewBox=\"0 0 65 65\"\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<path\n\t\t\t\t\t\t\t\tfill=\"currentColor\"\n\t\t\t\t\t\t\t\td=\"M39.445 25.555 37 17.163 65 0 47.821 28l-8.376-2.445Zm-13.89 0L28 17.163 0 0l17.179 28 8.376-2.445Zm13.89 13.89L37 47.837 65 65 47.821 37l-8.376 2.445Zm-13.89 0L28 47.837 0 65l17.179-28 8.376 2.445Z\"\n\t\t\t\t\t\t\t></path>\n\t\t\t\t\t\t</svg>\n\t\t\t\t\t</a>\n\t\t\t\t\t<h1\n\t\t\t\t\t\tdata-heading\n\t\t\t\t\t\tclassName=\"animate-slide-top text-foreground xl:animate-slide-left mt-8 text-4xl font-medium [animation-delay:0.3s] [animation-fill-mode:backwards] md:text-5xl xl:mt-4 xl:text-6xl xl:[animation-delay:0.8s] xl:[animation-fill-mode:backwards]\"\n\t\t\t\t\t>\n\t\t\t\t\t\t<a href=\"https://www.epicweb.dev/stack\">The Epic Stack</a>\n\t\t\t\t\t</h1>\n\t\t\t\t\t<p\n\t\t\t\t\t\tdata-paragraph\n\t\t\t\t\t\tclassName=\"animate-slide-top text-muted-foreground xl:animate-slide-left mt-6 text-xl/7 [animation-delay:0.8s] [animation-fill-mode:backwards] xl:mt-8 xl:text-xl/6 xl:leading-10 xl:[animation-delay:1s] xl:[animation-fill-mode:backwards]\"\n\t\t\t\t\t>\n\t\t\t\t\t\tCheck the{' '}\n\t\t\t\t\t\t<a\n\t\t\t\t\t\t\tclassName=\"underline hover:no-underline\"\n\t\t\t\t\t\t\thref=\"https://github.com/epicweb-dev/epic-stack/blob/main/docs/getting-started.md\"\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\tGetting Started guide\n\t\t\t\t\t\t</a>{' '}\n\t\t\t\t\t\tfile for how to get your project off the ground!\n\t\t\t\t\t</p>\n\t\t\t\t</div>\n\t\t\t\t<ul className=\"mt-16 flex max-w-3xl flex-wrap justify-center gap-2 sm:gap-4 xl:mt-0 xl:grid xl:grid-flow-col xl:grid-cols-5 xl:grid-rows-6\">\n\t\t\t\t\t<TooltipProvider>\n\t\t\t\t\t\t{logos.map((logo, i) => (\n\t\t\t\t\t\t\t<li\n\t\t\t\t\t\t\t\tkey={logo.href}\n\t\t\t\t\t\t\t\tclassName={cn(\n\t\t\t\t\t\t\t\t\tcolumnClasses[logo.column],\n\t\t\t\t\t\t\t\t\trowClasses[logo.row],\n\t\t\t\t\t\t\t\t\t'animate-roll-reveal [animation-fill-mode:backwards]',\n\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\tstyle={{ animationDelay: `${i * 0.07}s` }}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t<Tooltip>\n\t\t\t\t\t\t\t\t\t<TooltipTrigger asChild>\n\t\t\t\t\t\t\t\t\t\t<a\n\t\t\t\t\t\t\t\t\t\t\thref={logo.href}\n\t\t\t\t\t\t\t\t\t\t\tclassName=\"grid size-20 place-items-center rounded-2xl bg-violet-600/10 p-4 transition hover:-rotate-6 hover:bg-violet-600/15 sm:size-24 dark:bg-violet-200 dark:hover:bg-violet-100\"\n\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t<img src={logo.src} alt=\"\" />\n\t\t\t\t\t\t\t\t\t\t</a>\n\t\t\t\t\t\t\t\t\t</TooltipTrigger>\n\t\t\t\t\t\t\t\t\t<TooltipContent>{logo.alt}</TooltipContent>\n\t\t\t\t\t\t\t\t</Tooltip>\n\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t))}\n\t\t\t\t\t</TooltipProvider>\n\t\t\t\t</ul>\n\t\t\t</div>\n\t\t</main>\n\t)\n}\n","export default function PrivacyRoute() {\n\treturn <div>Privacy</div>\n}\n","export default function SupportRoute() {\n\treturn <div>Support</div>\n}\n","export default function TermsOfServiceRoute() {\n\treturn <div>Terms of service</div>\n}\n","import { generateRobotsTxt } from '@nasa-gcn/remix-seo'\nimport { getDomainUrl } from '#app/utils/misc.tsx'\nimport { type Route } from './+types/robots[.]txt.ts'\n\nexport function loader({ request }: Route.LoaderArgs) {\n\treturn generateRobotsTxt([\n\t\t{ type: 'sitemap', value: `${getDomainUrl(request)}/sitemap.xml` },\n\t])\n}\n","import { generateSitemap } from '@nasa-gcn/remix-seo'\nimport { type ServerBuild } from 'react-router'\nimport { getDomainUrl } from '#app/utils/misc.tsx'\nimport { type Route } from './+types/sitemap[.]xml.ts'\n\nexport async function loader({ request, context }: Route.LoaderArgs) {\n\tconst serverBuild = (await context.serverBuild) as { build: ServerBuild }\n\n\t// TODO: This is typeerror is coming up since of the remix-run/server-runtime package. We might need to remove/update that one.\n\t// @ts-expect-error\n\treturn generateSitemap(request, serverBuild.build.routes, {\n\t\tsiteUrl: getDomainUrl(request),\n\t\theaders: {\n\t\t\t'Cache-Control': `public, max-age=${60 * 5}`,\n\t\t},\n\t})\n}\n"],"names":["key","time","format","headers","href","toast","showToast","Sonner","data","action","permission","colorSchemeHint","timeZoneHint","ThemeFormSchema","z","object","theme","enum","redirectTo","string","optional","request","formData","submission","parseWithZod","schema","invariantResponse","status","value","responseInit","setTheme","redirect","result","reply","ThemeSwitch","userPreference","fetcher","useFetcher","requestInfo","useRequestInfo","form","useForm","id","lastResult","optimisticMode","useOptimisticThemeMode","mode","nextMode","modeLabel","light","jsx","Icon","name","children","className","dark","system","jsxs","Form","method","getFormProps","ServerOnly","type","path","fetchers","useFetchers","themeFetcher","find","f","formAction","useTheme","hints","useHints","userPrefs","useOptionalTheme","optionalHints","useOptionalHints","optionalRequestInfo","useOptionalRequestInfo","cache","entry","baseCachified","cuid","cookie","prisma","login","signup","init","links","rel","iconsHref","as","sizes","faviconAssetUrl","appleTouchIconAssetUrl","crossOrigin","tailwindStyleSheetUrl","filter","Boolean","meta","title","content","loader","timings","makeTimings","userId","getUserId","desc","user","findUnique","select","username","image","objectKey","roles","permissions","entity","access","where","console","info","logout","toastHeaders","getToast","honeyProps","honeypot","getInputProps","getHints","origin","getDomainUrl","URL","url","pathname","getTheme","ENV","getEnv","combineHeaders","toString","pipeHeaders","Document","nonce","env","allowIndexing","ALLOW_INDEXING","lang","ClientHintCheck","Meta","charSet","Links","dangerouslySetInnerHTML","__html","JSON","stringify","ScrollRestoration","Scripts","Layout","useLoaderData","useNonce","App","useOptionalUser","matches","useMatches","isOnSearchPage","m","searchBar","SearchBar","useToast","OpenImgContextProvider","optimizerEndpoint","getSrc","getImgSrc","Logo","UserDropdown","Button","asChild","variant","size","Link","to","Outlet","EpicToaster","closeButton","position","EpicProgress","AppWithProviders","HoneypotProvider","_UNSAFE_withComponentProps","ErrorBoundary","_UNSAFE_withErrorBoundaryProps","GeneralErrorBoundary","Response","NotFound","location","useLocation","statusHandlers","index","handle","getSitemapEntries","requireUserWithRole","searchParams","query","get","delete","limit","Number","currentInstanceInfo","getInstanceInfo","instance","currentInstance","instances","getAllInstances","ensureInstance","cacheKeys","searchCacheKeys","getAllCacheKeys","lruCache","Error","success","CacheAdminRoute","loaderData","useSearchParams","submit","useSubmit","handleFormChange","useDebounce","Spacer","onChange","e","currentTarget","Field","labelProps","inputProps","defaultValue","sqlite","length","lru","step","min","max","placeholder","Object","entries","map","inst","region","primaryInstance","join","CacheKeyRow","cacheKey","dc","useDoubleCheck","encodedKey","encodeURIComponent","valuePage","getButtonProps","state","doubleCheck","reloadDocument","error","message","params","allInstances","hostname","isPrimary","requireUserId","requestUrl","loginParams","URLSearchParams","search","findUniqueOrThrow","include","createdAt","updatedAt","notes","images","password","sessions","domain","json","getUserImgSrc","note","getNoteImgSrc","host","Promise","all","count","fetch","protocol","then","r","ok","reject","log","cacheDir","getCacheDir","dir","process","NODE_ENV","isAccessible","fs","constants","W_OK","catch","Headers","set","getImgResponse","allowlistedOrigins","AWS_ENDPOINT_URL_S3","cacheFolder","getImgSource","signedUrl","signedHeaders","getSignedGetRequestInfo","src","canParse","startsWith","BreadcrumbHandle","breadcrumb","any","BreadcrumbHandleMatch","EditUserProfile","useUser","breadcrumbs","safeParse","i","arr","cn","handleVerification","twoFAVerificationType","TwoFactorRoute","remember","onboardingEmailSessionKey","SignupFormSchema","UsernameSchema","NameSchema","agreeToTermsOfServiceAndPrivacyPolicy","boolean","required_error","and","PasswordAndConfirmPasswordSchema","requireOnboardingEmail","requireAnonymous","verifySession","verifySessionStorage","getSession","email","checkHoneypot","intent","superRefine","ctx","existingUser","addIssue","code","ZodIssueCode","custom","isCommonPassword","checkIsCommonPassword","transform","session","async","authSession","authSessionStorage","sessionKey","append","commitSession","expires","expirationDate","destroySession","redirectWithToast","safeRedirect","description","OnboardingRoute","actionData","isPending","useIsPending","fields","constraint","getZodConstraint","onValidate","shouldRevalidate","HoneypotInputs","htmlFor","autoComplete","errors","confirmPassword","CheckboxField","buttonProps","ErrorList","errorId","StatusButton","disabled","resetPasswordUsernameSessionKey","ResetPasswordSchema","requireResetPasswordUsername","resetPasswordUsername","resetUserPassword","ResetPasswordPage","autoFocus","codeQueryParam","targetQueryParam","typeQueryParam","redirectToQueryParam","types","VerificationTypeSchema","VerifySchema","validateRequest","VerifyRoute","parseWithZoddType","checkEmail","Fragment","headings","onboarding","target","OTPField","handleResetPasswordVerification","handleOnboardingVerification","handleChangeEmailVerification","handleLoginTwoFactorVerification","newEmailAddressSessionKey","ChangeEmailSchema","EmailSchema","requireRecentVerification","otp","verifyUrl","prepareVerification","period","response","sendEmail","subject","react","EmailChangeEmail","formErrors","ChangeEmailIndex","userCanDeleteConnections","_count","connections","rawConnections","connection","findMany","providerName","providerId","ProviderNameSchema","connectionData","resolveConnectionData","push","createdAtFormatted","toLocaleString","canDeleteConnections","connectionId","createToastHeaders","Connections","c","Connection","canDelete","providerNames","ProviderConnectionForm","deleteFetcher","infoOpen","setInfoOpen","useState","icon","providerIcons","link","displayName","TooltipProvider","Tooltip","TooltipTrigger","TooltipContent","open","onOpenChange","onClick","ProfileFormSchema","nullable","default","gt","Date","twoFactorVerification","verification","target_type","hasPassword","isTwoFactorEnabled","profileUpdateActionIntent","signOutOfSessionsActionIntent","deleteDataActionIntent","profileUpdateAction","signOutOfSessionsAction","deleteDataAction","Img","alt","width","height","isAboveFold","preventScrollReset","UpdateProfile","download","SignOutOfSessions","DeleteData","existingUsername","update","sessionId","deleteMany","not","otherSessionsCount","passkeys","passkey","orderBy","deviceType","passkeyId","RegistrationOptionsSchema","options","rp","challenge","pubKeyCredParams","array","literal","alg","number","authenticatorSelection","authenticatorAttachment","residentKey","userVerification","requireResidentKey","Passkeys","revalidator","useRevalidator","setError","handlePasskeyRegistration","resp","jsonResult","parsedResult","parse","regResult","startRegistration","optionsJSON","verificationResp","body","revalidate","err","formatDistanceToNow","ChangePasswordForm","currentPassword","PasswordSchema","newPassword","confirmNewPassword","requirePassword","verifyUserPassword","hideFields","hash","getPasswordHash","ChangePasswordRoute","CreatePasswordForm","requireNoPassword","create","CreatePasswordRoute","MAX_SIZE","DeleteImageSchema","NewImageSchema","photoFile","instanceof","File","refine","file","PhotoFormSchema","discriminatedUnion","parseFormData","maxFileSize","NEVER","uploadProfileImage","userImage","$transaction","$prisma","PhotoRoute","doubleCheckDeleteImage","navigation","useNavigation","pendingIntent","lastSubmissionIntent","newImageSrc","setNewImageSrc","encType","onReset","accept","required","tabIndex","files","reader","FileReader","onload","event","readAsDataURL","reset","TwoFactorDisableRoute","disable2FAFetcher","CancelSchema","ActionSchema","twoFAVerifyVerificationType","algorithm","secret","digits","issuer","otpUri","getTOTPAuthUri","accountName","qrCode","QRCode","toDataURL","codeIsValid","isCodeValid","is2FAEnabled","_otp","config","generateTOTP","verificationData","upsert","enable2FAFetcher","findFirst","userJoinedDisplay","toLocaleDateString","ProfileRoute","userDisplayName","loggedInUser","isLoggedInUser","prefetch","owner","NotesRoute","isOwner","ownerDisplayName","navLinkDefaultClassName","NavLink","isActive","noteId","ownerId","altText","date","timeAgo","DeleteFormSchema","requireUserWithPermission","NoteRoute","userHasPermission","displayBar","sectionRef","useRef","useEffect","current","focus","ref","floatingToolbarClassName","DeleteNote","notesMatch","noteTitle","noteContentsSummary","slice","NoteEdit","NoteEditor","NotesIndexRoute","noteCount","notesText","searchTerm","like","users","$queryRawTyped","searchUsers","UsersRoute","useDelayedIsPending","formMethod","autoSubmit","imageObjectKey","providerIdKey","prefilledProfileKey","imageUrl","requireData","or","provider","prefilledProfile","initialValue","signupWithConnection","String","OnboardingProviderRoute","destroyRedirectTo","destroyRedirectToHeader","ensurePrimary","getRedirectCookieValue","label","providerLabels","authResult","authenticator","authenticate","profile","existingConnection","providerName_providerId","makeSession","toLowerCase","normalizeEmail","normalizeUsername","onboardingRedirect","getSessionExpirationDate","handleNewSession","handleMockAction","rawRedirectTo","getReferrerRoute","redirectToCookie","getRedirectCookieHeader","ForgotPasswordSchema","usernameOrEmail","union","OR","findFirstOrThrow","ForgotPasswordEmail","onboardingUrl","E","Html","Container","Text","ForgotPasswordRoute","forgotPassword","LoginFormSchema","AuthenticationOptionsSchema","LoginPage","PasskeyLogin","VerificationResponseSchema","useTransition","passkeyMessage","setPasskeyMessage","useOptimistic","navigate","useNavigate","handlePasskeyLogin","optionsResponse","authResponse","startAuthentication","verificationResponse","verificationJson","errorMessage","getErrorMessage","SignupSchema","SignupEmail","SignupRoute","getWebAuthnConfig","generateAuthenticationOptions","rpID","cookieHeader","passkeyCookie","serialize","deletePasskeyCookie","maxAge","PasskeyLoginBodySchema","verifyAuthenticationResponse","expectedChallenge","expectedOrigin","expectedRPID","credential","publicKey","counter","verified","BigInt","authenticationInfo","newCounter","generateRegistrationOptions","rpName","userName","userID","TextEncoder","encode","attestationType","excludeCredentials","PasskeyCookieSchema","RegistrationResponseSchema","passkeyCookieData","parsedPasskeyCookieData","webauthnUserId","verifyRegistrationResponse","requireUserVerification","registrationInfo","credentialDeviceType","credentialBackedUp","aaguid","existingPasskey","Buffer","from","backedUp","transports","AboutRoute","columnClasses","rowClasses","Index","xmlns","fill","viewBox","d","logos","logo","column","row","style","animationDelay","PrivacyRoute","SupportRoute","TermsOfServiceRoute","generateRobotsTxt","context","serverBuild","generateSitemap","build","routes","siteUrl"],"mappings":"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"}